{"ast":null,"code":"import _objectWithoutProperties from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useContext}from\"react\";import{Route,Redirect}from\"react-router-dom\";import{AppContext}from\"../AppProvider\";import Loading from\"../components/Loading\";var PrivateRoute=function PrivateRoute(_ref){var render=_ref.render,rest=_objectWithoutProperties(_ref,[\"render\"]);var _useContext=useContext(AppContext),currentUser=_useContext.currentUser;if(!!currentUser)return React.createElement(Route,Object.assign({},rest,{render:render}));if(currentUser===null)return React.createElement(Redirect,{to:\"/auth\"});return React.createElement(Route,Object.assign({},rest,{render:function render(){return React.createElement(Loading,{message:\"Authenticating\",fullScreen:true});}}));};export default PrivateRoute;","map":{"version":3,"sources":["/Users/monsama/firetable/www/src/util/PrivateRoute.tsx"],"names":["React","useContext","Route","Redirect","AppContext","Loading","PrivateRoute","render","rest","currentUser"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,KAAT,CAA4BC,QAA5B,KAA4C,kBAA5C,CAEA,OAASC,UAAT,KAA2B,gBAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CAMA,GAAMC,CAAAA,YAA0C,CAAG,QAA7CA,CAAAA,YAA6C,MAAyB,IAAtBC,CAAAA,MAAsB,MAAtBA,MAAsB,CAAXC,IAAW,2DAClDP,UAAU,CAACG,UAAD,CADwC,CAClEK,WADkE,aAClEA,WADkE,CAG1E,GAAI,CAAC,CAACA,WAAN,CAAmB,MAAO,qBAAC,KAAD,kBAAWD,IAAX,EAAiB,MAAM,CAAED,MAAzB,GAAP,CAEnB,GAAIE,WAAW,GAAK,IAApB,CAA0B,MAAO,qBAAC,QAAD,EAAU,EAAE,CAAC,OAAb,EAAP,CAE1B,MACE,qBAAC,KAAD,kBACMD,IADN,EAEE,MAAM,CAAE,wBAAM,qBAAC,OAAD,EAAS,OAAO,CAAC,gBAAjB,CAAkC,UAAU,KAA5C,EAAN,EAFV,GADF,CAMD,CAbD,CAeA,cAAeF,CAAAA,YAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Route, RouteProps, Redirect } from \"react-router-dom\";\n\nimport { AppContext } from \"../AppProvider\";\nimport Loading from \"../components/Loading\";\n\ninterface IPrivateRouteProps extends RouteProps {\n  render: NonNullable<RouteProps[\"render\"]>;\n}\n\nconst PrivateRoute: React.FC<IPrivateRouteProps> = ({ render, ...rest }) => {\n  const { currentUser } = useContext(AppContext);\n\n  if (!!currentUser) return <Route {...rest} render={render} />;\n\n  if (currentUser === null) return <Redirect to=\"/auth\" />;\n\n  return (\n    <Route\n      {...rest}\n      render={() => <Loading message=\"Authenticating\" fullScreen />}\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}