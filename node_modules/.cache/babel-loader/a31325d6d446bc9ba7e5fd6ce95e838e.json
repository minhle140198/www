{"ast":null,"code":"import _toConsumableArray from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from\"react\";import Select from\"@material-ui/core/Select\";import{createStyles,makeStyles}from\"@material-ui/core/styles\";import Input from\"@material-ui/core/Input\";import Grid from\"@material-ui/core/Grid\";import MenuItem from\"@material-ui/core/MenuItem\";import Chip from\"@material-ui/core/Chip\";import Typography from\"@material-ui/core/Typography\";var useStyles=makeStyles(function(theme){return createStyles({root:{display:\"flex\",flexWrap:\"wrap\"},select:{width:\"100%\"},chips:{display:\"flex\",flexWrap:\"wrap\"},chip:{margin:2},noLabel:{marginTop:theme.spacing(3)},noOptions:{position:\"absolute\",top:-15}});});var ITEM_HEIGHT=48;var ITEM_PADDING_TOP=8;var MenuProps={PaperProps:{style:{maxHeight:ITEM_HEIGHT*4.5+ITEM_PADDING_TOP,width:250}}};var MultiSelect=function MultiSelect(props){var classes=useStyles();var value=props.value,row=props.row,options=props.options,onSubmit=props.onSubmit;var handleChange=function handleChange(e,v){if(!value||!Array.isArray(value)){// creates new array\nonSubmit([v.props.value]);}else if(!value.includes(v.props.value)){// adds to array\nonSubmit([].concat(_toConsumableArray(value),[v.props.value]));}else{// removes from array\nvar _updatedValues=_toConsumableArray(value);var index=_updatedValues.indexOf(v.props.value);_updatedValues.splice(index,1);onSubmit(_updatedValues);}};if(options&&options.length!==0)return React.createElement(Select,{className:classes.select,multiple:true,value:value&&Array.isArray(value)?value:[],onChange:handleChange,input:React.createElement(Input,{id:\"select-multiple-chip\"}),renderValue:function renderValue(selected){return React.createElement(\"div\",{className:classes.chips},selected.map(function(value){return React.createElement(Chip,{key:value,label:value,className:classes.chip});}));},MenuProps:MenuProps},options.map(function(option){return React.createElement(MenuItem,{key:option,value:option},option);}));else return React.createElement(Grid,{className:classes.noOptions,direction:\"row\"},React.createElement(Grid,{item:true},React.createElement(Typography,null,\"add options!\")));};export default MultiSelect;","map":{"version":3,"sources":["/Users/monsama/firetable/www/src/components/Fields/MultiSelect.tsx"],"names":["React","Select","createStyles","makeStyles","Input","Grid","MenuItem","Chip","Typography","useStyles","theme","root","display","flexWrap","select","width","chips","chip","margin","noLabel","marginTop","spacing","noOptions","position","top","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","MultiSelect","props","classes","value","row","options","onSubmit","handleChange","e","v","Array","isArray","includes","_updatedValues","index","indexOf","splice","length","selected","map","option"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport Select from \"@material-ui/core/Select\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport Input from \"@material-ui/core/Input\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    select: {\n      width: \"100%\",\n    },\n    chips: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    chip: {\n      margin: 2,\n    },\n    noLabel: {\n      marginTop: theme.spacing(3),\n    },\n    noOptions: {\n      position: \"absolute\",\n      top: -15,\n    },\n  })\n);\ninterface Props {\n  value: string[] | null;\n  row: { ref: firebase.firestore.DocumentReference; id: string };\n  options: string[];\n  onSubmit: Function;\n}\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst MultiSelect = (props: Props) => {\n  const classes = useStyles();\n\n  const { value, row, options, onSubmit } = props;\n  const handleChange = (e: any, v: any) => {\n    if (!value || !Array.isArray(value)) {\n      // creates new array\n      onSubmit([v.props.value]);\n    } else if (!value.includes(v.props.value)) {\n      // adds to array\n      onSubmit([...value, v.props.value]);\n    } else {\n      // removes from array\n      let _updatedValues = [...value];\n      const index = _updatedValues.indexOf(v.props.value);\n      _updatedValues.splice(index, 1);\n      onSubmit(_updatedValues);\n    }\n  };\n\n  if (options && options.length !== 0)\n    return (\n      <Select\n        className={classes.select}\n        multiple\n        value={value && Array.isArray(value) ? value : []}\n        onChange={handleChange}\n        input={<Input id=\"select-multiple-chip\" />}\n        renderValue={selected => (\n          <div className={classes.chips}>\n            {(selected as string[]).map(value => (\n              <Chip key={value} label={value} className={classes.chip} />\n            ))}\n          </div>\n        )}\n        MenuProps={MenuProps}\n      >\n        {options.map(option => (\n          <MenuItem key={option} value={option}>\n            {option}\n          </MenuItem>\n        ))}\n      </Select>\n    );\n  else\n    return (\n      <Grid className={classes.noOptions} direction=\"row\">\n        {/* <Grid item>\n          <WarningIcon />\n        </Grid>{\" \"} */}\n        <Grid item>\n          <Typography>add options!</Typography>\n        </Grid>\n      </Grid>\n    );\n};\nexport default MultiSelect;\n"]},"metadata":{},"sourceType":"module"}