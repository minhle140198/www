{"ast":null,"code":"import _slicedToArray from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useState}from\"react\";import{createStyles,makeStyles}from\"@material-ui/core/styles\";import Chip from\"@material-ui/core/Chip\";import Select from\"@material-ui/core/Select\";import TablesContext from\"../../../contexts/tablesContext\";import MenuItem from\"@material-ui/core/MenuItem\";import useTableConfig from\"../../../hooks/useFiretable/useTableConfig\";import FormControl from\"@material-ui/core/FormControl\";import InputLabel from\"@material-ui/core/InputLabel\";import Input from\"@material-ui/core/Input\";var useStyles=makeStyles(function(Theme){return createStyles({root:{display:\"flex\",justifyContent:\"center\",flexWrap:\"wrap\",maxWidth:300,padding:Theme.spacing(1)},chip:{margin:Theme.spacing(0.5)},formControl:{margin:Theme.spacing(1),minWidth:120,maxWidth:300},chips:{display:\"flex\",flexWrap:\"wrap\"}});});var ITEM_HEIGHT=48;var ITEM_PADDING_TOP=8;var MenuProps={PaperProps:{style:{maxHeight:ITEM_HEIGHT*4.5+ITEM_PADDING_TOP,width:250}}};export default function DocInput(props){var collectionPath=props.collectionPath,setValue=props.setValue;var _useTableConfig=useTableConfig(collectionPath?collectionPath:\"initial\"),_useTableConfig2=_slicedToArray(_useTableConfig,2),tableConfig=_useTableConfig2[0],tableConfigActions=_useTableConfig2[1];var _useState=useState([]),_useState2=_slicedToArray(_useState,2),columns=_useState2[0],setColumns=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),primaryKeys=_useState4[0],setPrimaryKeys=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),secondaryKeys=_useState6[0],setSecondaryKeys=_useState6[1];useEffect(function(){setColumns(tableConfig.columns);},[tableConfig.columns]);var classes=useStyles();var tables=useContext(TablesContext);var onChange=function onChange(e,v){setValue(\"collectionPath\",v.props.value);setPrimaryKeys([]);setSecondaryKeys([]);setColumns([]);tableConfigActions.setTable(v.props.value);};useEffect(function(){setValue(\"config\",{primaryKeys:primaryKeys,secondaryKeys:secondaryKeys});},[primaryKeys,secondaryKeys]);if(tables.value)return React.createElement(React.Fragment,null,React.createElement(FormControl,{className:classes.formControl},React.createElement(InputLabel,{htmlFor:\"select-secondary-multiple-chip\"},\"Table\"),React.createElement(Select,{value:collectionPath?collectionPath:null,onChange:onChange,id:\"select-key\",inputProps:{name:\"Table\",id:\"table\"}},tables.value.map(function(table){return React.createElement(MenuItem,{id:\"select-collection-\".concat(table.collection),value:table.collection},React.createElement(React.Fragment,null,table.collection));}))),collectionPath?React.createElement(React.Fragment,null,React.createElement(FormControl,{className:classes.formControl},React.createElement(InputLabel,{htmlFor:\"select-primary-multiple-chip\"},\"Primary Text\"),React.createElement(Select,{multiple:true,value:primaryKeys,onChange:function onChange(event){setPrimaryKeys(event.target.value);},input:React.createElement(Input,{id:\"select-primary-multiple-chip\"}),renderValue:function renderValue(selected){return React.createElement(\"div\",{className:classes.chips},selected.map(function(value){return React.createElement(Chip,{key:value,label:value,className:classes.chip});}));},MenuProps:MenuProps},columns&&columns.length!==0&&columns.map(function(column){return React.createElement(MenuItem,{id:\"select-primary-column-\".concat(column.key),key:column.key,value:column.key},column.name);}))),React.createElement(FormControl,{className:classes.formControl},React.createElement(InputLabel,{htmlFor:\"select-secondary-multiple-chip\"},\"Secondary Text\"),React.createElement(Select,{multiple:true,value:secondaryKeys,onChange:function onChange(event){setSecondaryKeys(event.target.value);},input:React.createElement(Input,{id:\"select-secondary-multiple-chip\"}),renderValue:function renderValue(selected){return React.createElement(\"div\",{className:classes.chips},selected.map(function(value){return React.createElement(Chip,{key:value,label:value,className:classes.chip});}));},MenuProps:MenuProps},columns&&columns.length!==0&&columns.map(function(column){return React.createElement(MenuItem,{id:\"select-secondary-column-\".concat(column.key),key:column.key,value:column.key},column.name);})))):\"please select a table\");else return React.createElement(\"div\",null);}","map":{"version":3,"sources":["/Users/monsama/firetable/www/src/components/Table/ColumnEditor/DocInput.tsx"],"names":["React","useContext","useEffect","useState","createStyles","makeStyles","Chip","Select","TablesContext","MenuItem","useTableConfig","FormControl","InputLabel","Input","useStyles","Theme","root","display","justifyContent","flexWrap","maxWidth","padding","spacing","chip","margin","formControl","minWidth","chips","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","DocInput","props","collectionPath","setValue","tableConfig","tableConfigActions","columns","setColumns","primaryKeys","setPrimaryKeys","secondaryKeys","setSecondaryKeys","classes","tables","onChange","e","v","value","setTable","name","id","map","table","collection","event","target","selected","length","column","key"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Select from \"@material-ui/core/Select\";\n\nimport TablesContext from \"../../../contexts/tablesContext\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport useTableConfig from \"../../../hooks/useFiretable/useTableConfig\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\n\nconst useStyles = makeStyles(Theme =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexWrap: \"wrap\",\n      maxWidth: 300,\n      padding: Theme.spacing(1),\n    },\n    chip: {\n      margin: Theme.spacing(0.5),\n    },\n    formControl: {\n      margin: Theme.spacing(1),\n      minWidth: 120,\n      maxWidth: 300,\n    },\n    chips: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n  })\n);\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nexport default function DocInput(props: any) {\n  const { collectionPath, setValue } = props;\n  const [tableConfig, tableConfigActions] = useTableConfig(\n    collectionPath ? collectionPath : \"initial\"\n  );\n\n  const [columns, setColumns] = useState<{ key: string; name: string }[]>([]);\n  const [primaryKeys, setPrimaryKeys] = useState<string[]>([]);\n  const [secondaryKeys, setSecondaryKeys] = useState<string[]>([]);\n\n  useEffect(() => {\n    setColumns(tableConfig.columns);\n  }, [tableConfig.columns]);\n\n  const classes = useStyles();\n  const tables = useContext(TablesContext);\n  const onChange = (e: any, v: any) => {\n    setValue(\"collectionPath\", v.props.value);\n    setPrimaryKeys([]);\n    setSecondaryKeys([]);\n    setColumns([]);\n    tableConfigActions.setTable(v.props.value);\n  };\n  useEffect(() => {\n    setValue(\"config\", {\n      primaryKeys,\n      secondaryKeys,\n    });\n  }, [primaryKeys, secondaryKeys]);\n  if (tables.value)\n    return (\n      <>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"select-secondary-multiple-chip\">\n            Table\n          </InputLabel>\n          <Select\n            value={collectionPath ? collectionPath : null}\n            onChange={onChange}\n            id={`select-key`}\n            inputProps={{\n              name: \"Table\",\n              id: \"table\",\n            }}\n          >\n            {tables.value.map(\n              (table: { collection: string; table: string }) => {\n                return (\n                  <MenuItem\n                    id={`select-collection-${table.collection}`}\n                    value={table.collection}\n                  >\n                    <>{table.collection}</>\n                  </MenuItem>\n                );\n              }\n            )}\n          </Select>\n        </FormControl>\n        {collectionPath ? (\n          <>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"select-primary-multiple-chip\">\n                Primary Text\n              </InputLabel>\n              <Select\n                multiple\n                value={primaryKeys}\n                onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                  setPrimaryKeys(event.target.value as string[]);\n                }}\n                input={<Input id=\"select-primary-multiple-chip\" />}\n                renderValue={selected => (\n                  <div className={classes.chips}>\n                    {(selected as string[]).map(value => (\n                      <Chip\n                        key={value}\n                        label={value}\n                        className={classes.chip}\n                      />\n                    ))}\n                  </div>\n                )}\n                MenuProps={MenuProps}\n              >\n                {columns &&\n                  columns.length !== 0 &&\n                  columns.map(column => (\n                    <MenuItem\n                      id={`select-primary-column-${column.key}`}\n                      key={column.key}\n                      value={column.key}\n                    >\n                      {column.name}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"select-secondary-multiple-chip\">\n                Secondary Text\n              </InputLabel>\n              <Select\n                multiple\n                value={secondaryKeys}\n                onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                  setSecondaryKeys(event.target.value as string[]);\n                }}\n                input={<Input id=\"select-secondary-multiple-chip\" />}\n                renderValue={selected => (\n                  <div className={classes.chips}>\n                    {(selected as string[]).map(value => (\n                      <Chip\n                        key={value}\n                        label={value}\n                        className={classes.chip}\n                      />\n                    ))}\n                  </div>\n                )}\n                MenuProps={MenuProps}\n              >\n                {columns &&\n                  columns.length !== 0 &&\n                  columns.map(column => (\n                    <MenuItem\n                      id={`select-secondary-column-${column.key}`}\n                      key={column.key}\n                      value={column.key}\n                    >\n                      {column.name}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          </>\n        ) : (\n          \"please select a table\"\n        )}\n      </>\n    );\n  else return <div />;\n}\n"]},"metadata":{},"sourceType":"module"}