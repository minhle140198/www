{"ast":null,"code":"import _toConsumableArray from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect}from\"react\";import useDoc,{DocActions}from\"./useDoc\";import{db}from\"../firebase\";var useSettings=function useSettings(){var _useDoc=useDoc({path:\"_FIRETABLE_/settings\"}),_useDoc2=_slicedToArray(_useDoc,2),settingsState=_useDoc2[0],documentDispatch=_useDoc2[1];useEffect(function(){//updates tables data on document change\nvar doc=settingsState.doc,tables=settingsState.tables;if(doc&&tables!==doc.tables){documentDispatch({tables:doc.tables});}},[settingsState]);var createTable=function createTable(name,collection){var tables=settingsState.tables;// updates the setting doc\nif(tables){documentDispatch({action:DocActions.update,data:{tables:[].concat(_toConsumableArray(tables),[{name:name,collection:collection}])}});}else{db.doc(\"_FIRETABLE_/settings\").set({tables:[{name:name,collection:collection}]},{merge:true});}//create the firetable collection doc with empty columns\ndb.collection(collection).doc(\"_FIRETABLE_\").set({columns:[]});};return[settingsState,createTable];};export default useSettings;","map":{"version":3,"sources":["/Users/monsama/firetable/www/src/hooks/useSettings.ts"],"names":["useEffect","useDoc","DocActions","db","useSettings","path","settingsState","documentDispatch","doc","tables","createTable","name","collection","action","update","data","set","merge","columns"],"mappings":"8SAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,MAAOC,CAAAA,MAAP,EAAiBC,UAAjB,KAAmC,UAAnC,CACA,OAASC,EAAT,KAAmB,aAAnB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,aACkBH,MAAM,CAAC,CAC/CI,IAAI,CAAE,sBADyC,CAAD,CADxB,oCACjBC,aADiB,aACFC,gBADE,aAIxBP,SAAS,CAAC,UAAM,CACd;AADc,GAENQ,CAAAA,GAFM,CAEUF,aAFV,CAENE,GAFM,CAEDC,MAFC,CAEUH,aAFV,CAEDG,MAFC,CAGd,GAAID,GAAG,EAAIC,MAAM,GAAKD,GAAG,CAACC,MAA1B,CAAkC,CAChCF,gBAAgB,CAAC,CAAEE,MAAM,CAAED,GAAG,CAACC,MAAd,CAAD,CAAhB,CACD,CACF,CANQ,CAMN,CAACH,aAAD,CANM,CAAT,CAQA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,CAAeC,UAAf,CAAsC,IAChDH,CAAAA,MADgD,CACrCH,aADqC,CAChDG,MADgD,CAExD;AACA,GAAIA,MAAJ,CAAY,CACVF,gBAAgB,CAAC,CACfM,MAAM,CAAEX,UAAU,CAACY,MADJ,CAEfC,IAAI,CAAE,CAAEN,MAAM,8BAAMA,MAAN,GAAc,CAAEE,IAAI,CAAJA,IAAF,CAAQC,UAAU,CAAVA,UAAR,CAAd,EAAR,CAFS,CAAD,CAAhB,CAID,CALD,IAKO,CACLT,EAAE,CAACK,GAAH,CAAO,sBAAP,EAA+BQ,GAA/B,CACE,CAAEP,MAAM,CAAE,CAAC,CAAEE,IAAI,CAAJA,IAAF,CAAQC,UAAU,CAAVA,UAAR,CAAD,CAAV,CADF,CAEE,CAAEK,KAAK,CAAE,IAAT,CAFF,EAID,CACD;AACAd,EAAE,CAACS,UAAH,CAAcA,UAAd,EACGJ,GADH,CACO,aADP,EAEGQ,GAFH,CAEO,CAAEE,OAAO,CAAE,EAAX,CAFP,EAGD,CAlBD,CAmBA,MAAO,CAACZ,aAAD,CAAgBI,WAAhB,CAAP,CACD,CAhCD,CAkCA,cAAeN,CAAAA,WAAf","sourcesContent":["import { useEffect } from \"react\";\nimport useDoc, { DocActions } from \"./useDoc\";\nimport { db } from \"../firebase\";\n\nconst useSettings = () => {\n  const [settingsState, documentDispatch] = useDoc({\n    path: \"_FIRETABLE_/settings\",\n  });\n  useEffect(() => {\n    //updates tables data on document change\n    const { doc, tables } = settingsState;\n    if (doc && tables !== doc.tables) {\n      documentDispatch({ tables: doc.tables });\n    }\n  }, [settingsState]);\n\n  const createTable = (name: string, collection: string) => {\n    const { tables } = settingsState;\n    // updates the setting doc\n    if (tables) {\n      documentDispatch({\n        action: DocActions.update,\n        data: { tables: [...tables, { name, collection }] },\n      });\n    } else {\n      db.doc(\"_FIRETABLE_/settings\").set(\n        { tables: [{ name, collection }] },\n        { merge: true }\n      );\n    }\n    //create the firetable collection doc with empty columns\n    db.collection(collection)\n      .doc(\"_FIRETABLE_\")\n      .set({ columns: [] });\n  };\n  return [settingsState, createTable];\n};\n\nexport default useSettings;\n"]},"metadata":{},"sourceType":"module"}