{"ast":null,"code":"import _toConsumableArray from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import Button from\"@material-ui/core/Button\";import InputLabel from\"@material-ui/core/InputLabel\";import FormControl from\"@material-ui/core/FormControl\";import TextField from\"@material-ui/core/TextField\";import Grid from\"@material-ui/core/Grid\";import Popover from\"@material-ui/core/Popover\";import{createStyles,makeStyles}from\"@material-ui/core/styles\";import{FieldsDropDown,FieldType}from\"../../Fields\";import DeleteIcon from\"@material-ui/icons/Delete\";import SelectOptionsInput from\"./SelectOptionsInput\";import DocInput from\"./DocInput\";import Confirmation from\"../../Confirmation\";var useStyles=makeStyles(function(theme){return createStyles({container:{padding:15},typography:{padding:1},button:{// margin: theme.spacing(1)\n},root:{padding:10,display:\"flex\",flexWrap:\"wrap\"},formControl:{margin:theme.spacing(1),minWidth:120},selectEmpty:{marginTop:theme.spacing(2)},toggleGrouped:{margin:theme.spacing(0.5),border:\"none\",padding:theme.spacing(0,1),\"&:not(:first-child)\":{borderRadius:theme.shape.borderRadius},\"&:first-child\":{borderRadius:theme.shape.borderRadius}}});});var ColumnEditor=function ColumnEditor(props){var anchorEl=props.anchorEl,column=props.column,handleClose=props.handleClose,actions=props.actions;var _useState=useState({type:null,name:\"\",options:[],collectionPath:\"\",config:{}}),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var _useState3=useState(function(){return[\"\"];}),_useState4=_slicedToArray(_useState3,2),flags=_useState4[0],setFlags=_useState4[1];var classes=useStyles();function handleChange(event){event.stopPropagation();event.preventDefault();setValues(function(oldValues){return _objectSpread({},oldValues,_defineProperty({},event.target.name,event.target.value));});}var setValue=function setValue(key,value){setValues(function(oldValues){return _objectSpread({},oldValues,_defineProperty({},key,value));});};useEffect(function(){if(column&&!column.isNew){setValues(function(oldValues){return _objectSpread({},oldValues,{name:column.name,type:column.type,key:column.key,isNew:column.isNew});});if(column.options){setValue(\"options\",column.options);}else{setValue(\"options\",[]);}if(column.collectionPath){setValue(\"collectionPath\",column.collectionPath);}[\"resizable\",\"editable\",\"fixed\",\"hidden\"].map(function(flag){if(column[flag]){setFlags([].concat(_toConsumableArray(flags),[flag]));}});}},[column]);var clearValues=function clearValues(){setValues({type:null,name:\"\",options:[],collectionPath:\"\",config:{}});};var onClose=function onClose(event){handleClose();clearValues();};var handleToggle=function handleToggle(event,newFlags){setFlags(newFlags);};var createNewColumn=function createNewColumn(){var name=values.name,type=values.type,options=values.options,collectionPath=values.collectionPath,config=values.config;actions.add(name,type,{options:options,collectionPath:collectionPath,config:config});handleClose();clearValues();};var deleteColumn=function deleteColumn(){actions.remove(props.column.idx);handleClose();clearValues();};var updateColumn=function updateColumn(){var updatables=[{field:\"name\",value:values.name},{field:\"type\",value:values.type},{field:\"resizable\",value:flags.includes(\"resizable\")},{field:\"editable\",value:flags.includes(\"editable\")},{field:\"hidden\",value:flags.includes(\"hidden\")},{field:\"fixed\",value:flags.includes(\"fixed\")}];if(values.type===FieldType.multiSelect||values.type===FieldType.singleSelect){updatables.push({field:\"options\",value:values.options});}if(values.type===FieldType.documentSelect){updatables.push({field:\"collectionPath\",value:values.collectionPath});updatables.push({field:\"config\",value:values.config});}actions.update(props.column.idx,updatables);handleClose();clearValues();};var disableAdd=function disableAdd(){var type=values.type,name=values.name,options=values.options,collectionPath=values.collectionPath,config=values.config;if(!type||name===\"\")return true;//TODO: Add more validation\nreturn false;};if(column){return React.createElement(Popover,{className:classes.root,id:\"id-\".concat(column.name),open:!!anchorEl,anchorEl:anchorEl,onClose:onClose},React.createElement(Grid,{container:true,className:classes.container,direction:\"column\"},React.createElement(TextField,{label:\"Column name\",name:\"name\",defaultValue:values.name,onChange:function onChange(e){setValue(\"name\",e.target.value);}}),React.createElement(FormControl,{className:classes.formControl},React.createElement(InputLabel,{htmlFor:\"Field-select\"},\"Field Type\"),FieldsDropDown(values.type,handleChange),(values.type===FieldType.singleSelect||values.type===FieldType.multiSelect)&&React.createElement(SelectOptionsInput,{setValue:setValue,options:values.options}),values.type===FieldType.documentSelect&&React.createElement(DocInput,{setValue:setValue,collectionPath:values.collectionPath}),column.isNew?React.createElement(Button,{onClick:createNewColumn,disabled:disableAdd()},\"Add\"):React.createElement(Button,{disabled:disableAdd(),onClick:updateColumn},\"update\"),!column.isNew&&React.createElement(Confirmation,{message:{customBody:\"Are you sure you want to delete this nice column\"}},React.createElement(Button,{variant:\"outlined\",color:\"secondary\",onClick:deleteColumn},React.createElement(DeleteIcon,null),\" Delete\")),React.createElement(Button,{color:\"secondary\",onClick:function onClick(){handleClose();clearValues();}},\"cancel\"))));}return React.createElement(\"div\",null);};export default ColumnEditor;","map":{"version":3,"sources":["/Users/monsama/firetable/www/src/components/Table/ColumnEditor/index.tsx"],"names":["React","useEffect","useState","Button","InputLabel","FormControl","TextField","Grid","Popover","createStyles","makeStyles","FieldsDropDown","FieldType","DeleteIcon","SelectOptionsInput","DocInput","Confirmation","useStyles","theme","container","padding","typography","button","root","display","flexWrap","formControl","margin","spacing","minWidth","selectEmpty","marginTop","toggleGrouped","border","borderRadius","shape","ColumnEditor","props","anchorEl","column","handleClose","actions","type","name","options","collectionPath","config","values","setValues","flags","setFlags","classes","handleChange","event","stopPropagation","preventDefault","oldValues","target","value","setValue","key","isNew","map","flag","clearValues","onClose","handleToggle","newFlags","createNewColumn","add","deleteColumn","remove","idx","updateColumn","updatables","field","includes","multiSelect","singleSelect","push","documentSelect","update","disableAdd","e","customBody"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport Popper from \"@material-ui/core/Popper\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Popover from \"@material-ui/core/Popover\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { FieldsDropDown, isFieldType, FieldType } from \"../../Fields\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\n\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport FormatUnderlinedIcon from \"@material-ui/icons/FormatUnderlined\";\nimport FormatColorFillIcon from \"@material-ui/icons/FormatColorFill\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SelectOptionsInput from \"./SelectOptionsInput\";\n\nimport DocInput from \"./DocInput\";\nimport { Tooltip } from \"@material-ui/core\";\nimport Confirmation from \"../../Confirmation\";\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    container: {\n      padding: 15,\n    },\n    typography: {\n      padding: 1,\n    },\n\n    button: {\n      // margin: theme.spacing(1)\n    },\n    root: {\n      padding: 10,\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    toggleGrouped: {\n      margin: theme.spacing(0.5),\n      border: \"none\",\n      padding: theme.spacing(0, 1),\n      \"&:not(:first-child)\": {\n        borderRadius: theme.shape.borderRadius,\n      },\n      \"&:first-child\": {\n        borderRadius: theme.shape.borderRadius,\n      },\n    },\n  })\n);\n\nconst ColumnEditor = (props: any) => {\n  const { anchorEl, column, handleClose, actions } = props;\n\n  const [values, setValues] = useState({\n    type: null,\n    name: \"\",\n    options: [],\n    collectionPath: \"\",\n    config: {},\n  });\n  const [flags, setFlags] = useState(() => [\"\"]);\n  const classes = useStyles();\n\n  function handleChange(\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\n  ) {\n    event.stopPropagation();\n    event.preventDefault();\n    setValues(oldValues => ({\n      ...oldValues,\n      [event.target.name as string]: event.target.value,\n    }));\n  }\n  const setValue = (key: string, value: any) => {\n    setValues(oldValues => ({\n      ...oldValues,\n      [key]: value,\n    }));\n  };\n\n  useEffect(() => {\n    if (column && !column.isNew) {\n      setValues(oldValues => ({\n        ...oldValues,\n        name: column.name,\n        type: column.type,\n        key: column.key,\n        isNew: column.isNew,\n      }));\n      if (column.options) {\n        setValue(\"options\", column.options);\n      } else {\n        setValue(\"options\", []);\n      }\n      if (column.collectionPath) {\n        setValue(\"collectionPath\", column.collectionPath);\n      }\n      [\"resizable\", \"editable\", \"fixed\", \"hidden\"].map(flag => {\n        if (column[flag]) {\n          setFlags([...flags, flag]);\n        }\n      });\n    }\n  }, [column]);\n  const clearValues = () => {\n    setValues({\n      type: null,\n      name: \"\",\n      options: [],\n      collectionPath: \"\",\n      config: {},\n    });\n  };\n  const onClose = (event: any) => {\n    handleClose();\n    clearValues();\n  };\n\n  const handleToggle = (\n    event: React.MouseEvent<HTMLElement>,\n    newFlags: string[]\n  ) => {\n    setFlags(newFlags);\n  };\n\n  const createNewColumn = () => {\n    const { name, type, options, collectionPath, config } = values;\n\n    actions.add(name, type, { options, collectionPath, config });\n\n    handleClose();\n    clearValues();\n  };\n  const deleteColumn = () => {\n    actions.remove(props.column.idx);\n    handleClose();\n    clearValues();\n  };\n\n  const updateColumn = () => {\n    let updatables: { field: string; value: any }[] = [\n      { field: \"name\", value: values.name },\n      { field: \"type\", value: values.type },\n      { field: \"resizable\", value: flags.includes(\"resizable\") },\n      { field: \"editable\", value: flags.includes(\"editable\") },\n      { field: \"hidden\", value: flags.includes(\"hidden\") },\n      { field: \"fixed\", value: flags.includes(\"fixed\") },\n    ];\n    if (\n      values.type === FieldType.multiSelect ||\n      values.type === FieldType.singleSelect\n    ) {\n      updatables.push({\n        field: \"options\",\n        value: values.options,\n      });\n    }\n    if (values.type === FieldType.documentSelect) {\n      updatables.push({\n        field: \"collectionPath\",\n        value: values.collectionPath,\n      });\n      updatables.push({\n        field: \"config\",\n        value: values.config,\n      });\n    }\n    actions.update(props.column.idx, updatables);\n    handleClose();\n    clearValues();\n  };\n\n  const disableAdd = () => {\n    const { type, name, options, collectionPath, config } = values;\n    if (!type || name === \"\") return true;\n    //TODO: Add more validation\n    return false;\n  };\n  if (column) {\n    return (\n      <Popover\n        className={classes.root}\n        id={`id-${column.name}`}\n        open={!!anchorEl}\n        anchorEl={anchorEl}\n        onClose={onClose}\n      >\n        <Grid container className={classes.container} direction=\"column\">\n          {/* <ToggleButtonGroup\n            size=\"small\"\n            value={flags}\n            className={classes.toggleGrouped}\n            onChange={handleToggle}\n            arial-label=\"column settings\"\n          >\n            <Tooltip title=\"Editable Cells\">\n              <ToggleButton value=\"editable\" aria-label=\"editable\">\n                {flags.includes(\"editable\") ? <LockOpenIcon /> : <LockIcon />}\n              </ToggleButton>\n            </Tooltip>\n            <Tooltip title=\"Hide Column\">\n              <ToggleButton value=\"visible\" aria-label=\"visible\">\n                {flags.includes(\"visible\") ? (\n                  <VisibilityIcon />\n                ) : (\n                  <VisibilityOffIcon />\n                )}\n              </ToggleButton>\n            </Tooltip>\n            <Tooltip title=\"Fixed Column\">\n              <ToggleButton value=\"fixed\" aria-label=\"fixed\">\n                <FormatUnderlinedIcon />\n              </ToggleButton>\n            </Tooltip>\n            <Tooltip title=\"Resizable column\">\n              <ToggleButton value=\"resizable\" aria-label=\"resizable\">\n                <FormatColorFillIcon />\n              </ToggleButton>\n            </Tooltip>\n          </ToggleButtonGroup> */}\n          <TextField\n            label=\"Column name\"\n            name=\"name\"\n            defaultValue={values.name}\n            onChange={e => {\n              setValue(\"name\", e.target.value);\n            }}\n          />\n          <FormControl className={classes.formControl}>\n            <InputLabel htmlFor=\"Field-select\">Field Type</InputLabel>\n            {FieldsDropDown(values.type, handleChange)}\n\n            {(values.type === FieldType.singleSelect ||\n              values.type === FieldType.multiSelect) && (\n              <SelectOptionsInput\n                setValue={setValue}\n                options={values.options}\n              />\n            )}\n            {values.type === FieldType.documentSelect && (\n              <DocInput\n                setValue={setValue}\n                collectionPath={values.collectionPath}\n              />\n            )}\n            {column.isNew ? (\n              <Button onClick={createNewColumn} disabled={disableAdd()}>\n                Add\n              </Button>\n            ) : (\n              <Button disabled={disableAdd()} onClick={updateColumn}>\n                update\n              </Button>\n            )}\n            {!column.isNew && (\n              <Confirmation\n                message={{\n                  customBody:\n                    \"Are you sure you want to delete this nice column\",\n                }}\n              >\n                <Button\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  onClick={deleteColumn}\n                >\n                  <DeleteIcon /> Delete\n                </Button>\n              </Confirmation>\n            )}\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                handleClose();\n                clearValues();\n              }}\n            >\n              cancel\n            </Button>\n          </FormControl>\n        </Grid>\n      </Popover>\n    );\n  }\n  return <div />;\n};\n\nexport default ColumnEditor;\n"]},"metadata":{},"sourceType":"module"}