{"ast":null,"code":"import _regeneratorRuntime from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from\"react\";import Button from\"@material-ui/core/Button\";import DialogActions from\"@material-ui/core/DialogActions\";import DialogContent from\"@material-ui/core/DialogContent\";import DialogTitle from\"@material-ui/core/DialogTitle\";import Dialog from\"@material-ui/core/Dialog\";import Select from\"@material-ui/core/Select\";import FormControl from\"@material-ui/core/FormControl\";import InputLabel from\"@material-ui/core/InputLabel\";import MenuItem from\"@material-ui/core/MenuItem\";import{makeStyles,createStyles}from\"@material-ui/core/styles\";import Input from\"@material-ui/core/Input\";import Chip from\"@material-ui/core/Chip\";import CloudIcon from\"@material-ui/icons/CloudDownload\";import{exportTable}from\"../firebase/callables\";import{saveAs}from\"file-saver\";import{SnackContext}from\"../contexts/snackContext\";var ITEM_HEIGHT=48;var ITEM_PADDING_TOP=8;var MenuProps={PaperProps:{style:{maxHeight:ITEM_HEIGHT*4.5+ITEM_PADDING_TOP,width:250}}};var useStyles=makeStyles(function(theme){return createStyles({root:{display:\"flex\",flexWrap:\"wrap\"},formControl:{margin:theme.spacing(1),width:400},selectEmpty:{marginTop:theme.spacing(2)},keyPair:{flexGrow:2,display:\"flex\",justifyItems:\"space-between\"},cloudIcon:{fontSize:64},uploadContainer:{margin:\"auto\"},chips:{display:\"flex\",flexWrap:\"wrap\",width:400},chip:{}});});export default function ExportCSV(props){var columns=props.columns,collection=props.collection,filters=props.filters;var classes=useStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),csvColumns=_useState4[0],setCSVColumns=_useState4[1];var snackContext=useContext(SnackContext);var handleChange=function handleChange(event){setCSVColumns(event.target.value);};function handleClickOpen(){setOpen(true);}function handleClose(){setOpen(false);setCSVColumns([]);}function handleExport(columns){var data,blob;return _regeneratorRuntime.async(function handleExport$(_context){while(1){switch(_context.prev=_context.next){case 0:handleClose();snackContext.open({message:\"preparing file, download will start shortly\",duration:5000});_context.next=4;return _regeneratorRuntime.awrap(exportTable({collectionPath:collection,allFields:!Boolean(columns),filters:filters,columns:columns?columns:[]}));case 4:data=_context.sent;blob=new Blob([data.data],{type:\"text/csv;charset=utf-8\"});saveAs(blob,\"\".concat(collection,\".csv\"));case 7:case\"end\":return _context.stop();}}});}return React.createElement(\"div\",null,React.createElement(Button,{color:\"secondary\",onClick:handleClickOpen,endIcon:React.createElement(CloudIcon,null)},\"Export CSV\"),React.createElement(Dialog,{open:open,onClose:handleClose,\"aria-labelledby\":\"form-dialog-title\"},React.createElement(DialogTitle,{id:\"form-dialog-title\"},\"Export table into CSV\"),React.createElement(DialogContent,null,React.createElement(FormControl,{className:classes.formControl},React.createElement(InputLabel,{id:\"column-chip-label\"},\"Exportable columns\"),React.createElement(Select,{id:\"column-chip\",multiple:true,value:csvColumns,onChange:handleChange,input:React.createElement(Input,{id:\"select-multiple-chip\"}),renderValue:function renderValue(selected){return React.createElement(\"div\",{className:classes.chips},selected.map(function(value){return React.createElement(Chip,{key:value.key,label:value.name,className:classes.chip});}));},MenuProps:MenuProps},columns.map(function(column){return React.createElement(MenuItem,{key:column.key,value:column},column.name);}))),React.createElement(Button,{onClick:function onClick(){setCSVColumns(columns);}},\"Export All Columns\")),React.createElement(DialogActions,null,React.createElement(Button,{onClick:handleClose,color:\"primary\"},\"Cancel\"),React.createElement(Button,{onClick:function onClick(){handleExport();},color:\"secondary\"},\"Export All Fields\"),React.createElement(Button,{onClick:function onClick(){handleExport(csvColumns);},disabled:csvColumns.length===0,color:\"primary\"},\"Export\"))));}","map":{"version":3,"sources":["/Users/monsama/firetable/www/src/components/ExportCSV.tsx"],"names":["React","useState","useContext","Button","DialogActions","DialogContent","DialogTitle","Dialog","Select","FormControl","InputLabel","MenuItem","makeStyles","createStyles","Input","Chip","CloudIcon","exportTable","saveAs","SnackContext","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","useStyles","theme","root","display","flexWrap","formControl","margin","spacing","selectEmpty","marginTop","keyPair","flexGrow","justifyItems","cloudIcon","fontSize","uploadContainer","chips","chip","ExportCSV","props","columns","collection","filters","classes","open","setOpen","csvColumns","setCSVColumns","snackContext","handleChange","event","target","value","handleClickOpen","handleClose","handleExport","message","duration","collectionPath","allFields","Boolean","data","blob","Blob","type","selected","map","key","name","column","length"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useContext } from \"react\";\nimport _camelCase from \"lodash/camelCase\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Input from \"@material-ui/core/Input\";\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CloudIcon from \"@material-ui/icons/CloudDownload\";\nimport { exportTable } from \"../firebase/callables\";\nimport { saveAs } from \"file-saver\";\nimport useTableConfig from \"../hooks/useFiretable/useTableConfig\";\nimport { SnackContext } from \"../contexts/snackContext\";\nimport { FireTableFilter } from \"../hooks/useFiretable\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      width: 400,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    keyPair: {\n      flexGrow: 2,\n      display: \"flex\",\n      justifyItems: \"space-between\",\n    },\n    cloudIcon: {\n      fontSize: 64,\n    },\n    uploadContainer: {\n      margin: \"auto\",\n    },\n    chips: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      width: 400,\n    },\n    chip: {},\n  })\n);\ninterface Props {\n  columns: any;\n  collection: string;\n  filters: FireTableFilter[];\n}\n\nexport default function ExportCSV(props: Props) {\n  const { columns, collection, filters } = props;\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [csvColumns, setCSVColumns] = useState<any[]>([]);\n  const snackContext = useContext(SnackContext);\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setCSVColumns(event.target.value as any[]);\n  };\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n    setCSVColumns([]);\n  }\n  async function handleExport(columns?: any[]) {\n    handleClose();\n    snackContext.open({\n      message: \"preparing file, download will start shortly\",\n      duration: 5000,\n    });\n    const data = await exportTable({\n      collectionPath: collection,\n      allFields: !Boolean(columns),\n      filters,\n      columns: columns ? columns : [],\n    });\n    var blob = new Blob([data.data], {\n      type: \"text/csv;charset=utf-8\",\n    });\n    saveAs(blob, `${collection}.csv`);\n  }\n\n  return (\n    <div>\n      <Button\n        color=\"secondary\"\n        onClick={handleClickOpen}\n        endIcon={<CloudIcon />}\n      >\n        Export CSV\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Export table into CSV</DialogTitle>\n        <DialogContent>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"column-chip-label\">Exportable columns</InputLabel>\n            <Select\n              id=\"column-chip\"\n              multiple\n              value={csvColumns}\n              onChange={handleChange}\n              input={<Input id=\"select-multiple-chip\" />}\n              renderValue={selected => (\n                <div className={classes.chips}>\n                  {(selected as any[]).map(value => (\n                    <Chip\n                      key={value.key}\n                      label={value.name}\n                      className={classes.chip}\n                    />\n                  ))}\n                </div>\n              )}\n              MenuProps={MenuProps}\n            >\n              {columns.map((column: any) => (\n                <MenuItem key={column.key} value={column}>\n                  {column.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <Button\n            onClick={() => {\n              setCSVColumns(columns);\n            }}\n          >\n            Export All Columns\n          </Button>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={() => {\n              handleExport();\n            }}\n            color=\"secondary\"\n          >\n            Export All Fields\n          </Button>\n          <Button\n            onClick={() => {\n              handleExport(csvColumns);\n            }}\n            disabled={csvColumns.length === 0}\n            color=\"primary\"\n          >\n            Export\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}