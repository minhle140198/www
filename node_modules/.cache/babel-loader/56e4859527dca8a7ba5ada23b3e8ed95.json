{"ast":null,"code":"var _classCallCheck = require(\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar ResizeableBuffer =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function ResizeableBuffer() {\n    var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n\n    _classCallCheck(this, ResizeableBuffer);\n\n    this.size = size;\n    this.length = 0;\n    this.buf = Buffer.alloc(size);\n  }\n\n  _createClass(ResizeableBuffer, [{\n    key: \"prepend\",\n    value: function prepend(val) {\n      var length = this.length++;\n\n      if (length === this.size) {\n        this.resize();\n      }\n\n      var buf = this.clone();\n      this.buf[0] = val;\n      buf.copy(this.buf, 1, 0, length);\n    }\n  }, {\n    key: \"append\",\n    value: function append(val) {\n      var length = this.length++;\n\n      if (length === this.size) {\n        this.resize();\n      }\n\n      this.buf[length] = val;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return Buffer.from(this.buf.slice(0, this.length));\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var length = this.length;\n      this.size = this.size * 2;\n      var buf = Buffer.alloc(this.size);\n      this.buf.copy(buf, 0, 0, length);\n      this.buf = buf;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.buf.slice(0, this.length).toString();\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.toString();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.length = 0;\n    }\n  }]);\n\n  return ResizeableBuffer;\n}();\n\nmodule.exports = ResizeableBuffer;","map":{"version":3,"sources":["/Users/monsama/firetable/www/node_modules/csv-parse/lib/ResizeableBuffer.js"],"names":["ResizeableBuffer","size","length","buf","Buffer","alloc","val","resize","clone","copy","from","slice","toString","module","exports"],"mappings":";;;;IAEMA,gB;;;;;AACJ,8BAAqB;AAAA,QAATC,IAAS,uEAAJ,GAAI;;AAAA;;AACnB,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAc,CAAd;AACA,SAAKC,GAAL,GAAWC,MAAM,CAACC,KAAP,CAAaJ,IAAb,CAAX;AACD;;;;4BACOK,G,EAAI;AACV,UAAMJ,MAAM,GAAG,KAAKA,MAAL,EAAf;;AACA,UAAGA,MAAM,KAAK,KAAKD,IAAnB,EAAwB;AACtB,aAAKM,MAAL;AACD;;AACD,UAAMJ,GAAG,GAAG,KAAKK,KAAL,EAAZ;AACA,WAAKL,GAAL,CAAS,CAAT,IAAcG,GAAd;AACAH,MAAAA,GAAG,CAACM,IAAJ,CAAS,KAAKN,GAAd,EAAkB,CAAlB,EAAqB,CAArB,EAAwBD,MAAxB;AACD;;;2BACMI,G,EAAI;AACT,UAAMJ,MAAM,GAAG,KAAKA,MAAL,EAAf;;AACA,UAAGA,MAAM,KAAK,KAAKD,IAAnB,EAAwB;AACtB,aAAKM,MAAL;AACD;;AACD,WAAKJ,GAAL,CAASD,MAAT,IAAmBI,GAAnB;AACD;;;4BACM;AACL,aAAOF,MAAM,CAACM,IAAP,CAAY,KAAKP,GAAL,CAASQ,KAAT,CAAe,CAAf,EAAkB,KAAKT,MAAvB,CAAZ,CAAP;AACD;;;6BACO;AACN,UAAMA,MAAM,GAAG,KAAKA,MAApB;AACA,WAAKD,IAAL,GAAY,KAAKA,IAAL,GAAY,CAAxB;AACA,UAAME,GAAG,GAAGC,MAAM,CAACC,KAAP,CAAa,KAAKJ,IAAlB,CAAZ;AACA,WAAKE,GAAL,CAASM,IAAT,CAAcN,GAAd,EAAkB,CAAlB,EAAqB,CAArB,EAAwBD,MAAxB;AACA,WAAKC,GAAL,GAAWA,GAAX;AACD;;;+BACS;AACR,aAAO,KAAKA,GAAL,CAASQ,KAAT,CAAe,CAAf,EAAkB,KAAKT,MAAvB,EAA+BU,QAA/B,EAAP;AACD;;;6BACO;AACN,aAAO,KAAKA,QAAL,EAAP;AACD;;;4BACM;AACL,WAAKV,MAAL,GAAc,CAAd;AACD;;;;;;AAGHW,MAAM,CAACC,OAAP,GAAiBd,gBAAjB","sourcesContent":["\n\nclass ResizeableBuffer{\n  constructor(size=100){\n    this.size = size\n    this.length = 0\n    this.buf = Buffer.alloc(size)\n  }\n  prepend(val){\n    const length = this.length++\n    if(length === this.size){\n      this.resize()\n    }\n    const buf = this.clone()\n    this.buf[0] = val\n    buf.copy(this.buf,1, 0, length)\n  }\n  append(val){\n    const length = this.length++\n    if(length === this.size){\n      this.resize()\n    }\n    this.buf[length] = val\n  }\n  clone(){\n    return Buffer.from(this.buf.slice(0, this.length))\n  }\n  resize(){\n    const length = this.length\n    this.size = this.size * 2\n    const buf = Buffer.alloc(this.size)\n    this.buf.copy(buf,0, 0, length)\n    this.buf = buf\n  }\n  toString(){\n    return this.buf.slice(0, this.length).toString()\n  }\n  toJSON(){\n    return this.toString()\n  }\n  reset(){\n    this.length = 0\n  }\n}\n\nmodule.exports = ResizeableBuffer\n"]},"metadata":{},"sourceType":"script"}