{"ast":null,"code":"import _toConsumableArray from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback}from\"react\";import{useDropzone}from\"react-dropzone\";import parse from\"csv-parse\";import Button from\"@material-ui/core/Button\";import DialogActions from\"@material-ui/core/DialogActions\";import DialogContent from\"@material-ui/core/DialogContent\";import DialogTitle from\"@material-ui/core/DialogTitle\";import Grid from\"@material-ui/core/Grid\";import IconButton from\"@material-ui/core/IconButton\";import Dialog from\"@material-ui/core/Dialog\";import Select from\"@material-ui/core/Select\";import FormControl from\"@material-ui/core/FormControl\";import InputLabel from\"@material-ui/core/InputLabel\";import MenuItem from\"@material-ui/core/MenuItem\";import AddCSVIcon from\"@material-ui/icons/PlaylistAdd\";import ArrowIcon from\"@material-ui/icons/TrendingFlatOutlined\";import AddIcon from\"@material-ui/icons/Add\";import DeleteIcon from\"@material-ui/icons/Delete\";import{makeStyles,createStyles}from\"@material-ui/core/styles\";import Typography from\"@material-ui/core/Typography\";import CloudIcon from\"@material-ui/icons/CloudUpload\";var useStyles=makeStyles(function(theme){return createStyles({root:{display:\"flex\",flexWrap:\"wrap\"},formControl:{margin:theme.spacing(1),minWidth:120},selectEmpty:{marginTop:theme.spacing(2)},keyPair:{flexGrow:2,display:\"flex\",justifyItems:\"space-between\"},cloudIcon:{fontSize:64},uploadContainer:{margin:\"auto\"}});});// TODO: Create an interface for props\nexport default function ImportCSV(props){var columns=props.columns,addRow=props.addRow;var classes=useStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),csvKeys=_useState4[0],setCsvKeys=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),keyPairs=_useState6[0],setKeyPairs=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),csvKey=_useState8[0],setCsvKey=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),columnKey=_useState10[0],setColumnKey=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),csvData=_useState12[0],setCsvData=_useState12[1];var onDrop=useCallback(function _callee(acceptedFiles){var file,reader;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:file=acceptedFiles[0];reader=new FileReader();reader.onload=function(event){var csvString=event.target.result;parse(csvString,{},function(err,output){var keys=output.shift();setCsvData(output);setCsvKeys(keys);});};reader.readAsText(file);case 4:case\"end\":return _context.stop();}}});},[]);var _useDropzone=useDropzone({onDrop:onDrop,multiple:false}),getRootProps=_useDropzone.getRootProps,getInputProps=_useDropzone.getInputProps,isDragActive=_useDropzone.isDragActive;function handleClickOpen(){setOpen(true);}function handleClose(){setOpen(false);setKeyPairs([]);setCsvKeys([]);setCsvKey(null);setColumnKey(null);}function handleImport(){var newDocs=csvData.map(function(row){var docData={};keyPairs.forEach(function(pair){docData[pair.columnKey]=row[csvKeys.indexOf(pair.csvKey)];});addRow(docData);return docData;});handleClose();}return React.createElement(\"div\",null,React.createElement(Button,{color:\"secondary\",onClick:handleClickOpen,endIcon:React.createElement(AddCSVIcon,null)},\"Import CSV\"),React.createElement(Dialog,{open:open,onClose:handleClose,\"aria-labelledby\":\"form-dialog-title\"},React.createElement(DialogTitle,{id:\"form-dialog-title\"},\"Import a CSV file\"),React.createElement(DialogContent,null,csvKeys.length===0?React.createElement(\"div\",getRootProps(),React.createElement(\"input\",getInputProps()),React.createElement(Grid,{container:true,direction:\"column\",justify:\"center\",alignContent:\"center\",alignItems:\"center\"},React.createElement(Typography,{variant:\"subtitle1\"},\"Drag 'n' drop a .csv file here\"),React.createElement(CloudIcon,{className:classes.cloudIcon}),React.createElement(Typography,{variant:\"subtitle1\"},\"or\"),isDragActive?React.createElement(\"p\",null,\"Drop the file here ...\"):React.createElement(Button,{color:\"secondary\"},\"click to select a file\"))):React.createElement(Grid,{container:true,direction:\"column\"},keyPairs.map(function(keyPair,index){return React.createElement(Grid,{container:true,direction:\"row\",alignItems:\"center\",justify:\"space-between\"},React.createElement(Typography,null,keyPair.csvKey),React.createElement(ArrowIcon,null),React.createElement(Typography,null,keyPair.columnKey),React.createElement(IconButton,{onClick:function onClick(){var clonedPairs=_toConsumableArray(keyPairs);clonedPairs.splice(index,1);setKeyPairs(clonedPairs);}},React.createElement(DeleteIcon,null)));}),React.createElement(Grid,{container:true,direction:\"row\",alignItems:\"center\"},React.createElement(FormControl,{className:classes.formControl},React.createElement(InputLabel,{htmlFor:\"csv-keys\"},\"csv Fields\"),React.createElement(Select,{value:csvKey,onChange:function onChange(e,v){setCsvKey(e.target.value);},inputProps:{name:\"csv\",id:\"csv-keys\"}},csvKeys.map(function(key){return React.createElement(MenuItem,{value:key},key);}))),React.createElement(ArrowIcon,null),React.createElement(FormControl,{className:classes.formControl},React.createElement(InputLabel,{htmlFor:\"column-keys\"},\"column Fields\"),React.createElement(Select,{value:columnKey,onChange:function onChange(e,v){setColumnKey(e.target.value);},inputProps:{name:\"column\",id:\"column-keys\"}},columns.map(function(column){return React.createElement(MenuItem,{value:column.key},column.name);}))),React.createElement(IconButton,{onClick:function onClick(){if(csvKey&&columnKey){setKeyPairs([].concat(_toConsumableArray(keyPairs),[{csvKey:csvKey,columnKey:columnKey}]));setColumnKey(null);setCsvKey(null);}}},React.createElement(AddIcon,null))))),React.createElement(DialogActions,null,React.createElement(Button,{onClick:handleClose,color:\"primary\"},\"Cancel\"),React.createElement(Button,{onClick:handleImport,disabled:keyPairs.length===0,color:\"primary\"},\"import\"))));}","map":{"version":3,"sources":["/Users/monsama/firetable/www/src/components/ImportCSV.tsx"],"names":["React","useState","useCallback","useDropzone","parse","Button","DialogActions","DialogContent","DialogTitle","Grid","IconButton","Dialog","Select","FormControl","InputLabel","MenuItem","AddCSVIcon","ArrowIcon","AddIcon","DeleteIcon","makeStyles","createStyles","Typography","CloudIcon","useStyles","theme","root","display","flexWrap","formControl","margin","spacing","minWidth","selectEmpty","marginTop","keyPair","flexGrow","justifyItems","cloudIcon","fontSize","uploadContainer","ImportCSV","props","columns","addRow","classes","open","setOpen","csvKeys","setCsvKeys","keyPairs","setKeyPairs","csvKey","setCsvKey","columnKey","setColumnKey","csvData","setCsvData","onDrop","acceptedFiles","file","reader","FileReader","onload","event","csvString","target","result","err","output","keys","shift","readAsText","multiple","getRootProps","getInputProps","isDragActive","handleClickOpen","handleClose","handleImport","newDocs","map","row","docData","forEach","pair","indexOf","length","index","clonedPairs","splice","e","v","value","name","id","key","column"],"mappings":"wbAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,WAA1B,KAA6C,OAA7C,CAEA,OAASC,WAAT,KAA4B,gBAA5B,CACA,MAAOC,CAAAA,KAAP,KAAkB,WAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CAEA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CAEA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,gCAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yCAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CACA,OAASC,UAAT,CAAqBC,YAArB,KAAyC,0BAAzC,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,gCAAtB,CACA,GAAMC,CAAAA,SAAS,CAAGJ,UAAU,CAAC,SAAAK,KAAK,QAChCJ,CAAAA,YAAY,CAAC,CACXK,IAAI,CAAE,CACJC,OAAO,CAAE,MADL,CAEJC,QAAQ,CAAE,MAFN,CADK,CAKXC,WAAW,CAAE,CACXC,MAAM,CAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CADG,CAEXC,QAAQ,CAAE,GAFC,CALF,CASXC,WAAW,CAAE,CACXC,SAAS,CAAET,KAAK,CAACM,OAAN,CAAc,CAAd,CADA,CATF,CAYXI,OAAO,CAAE,CACPC,QAAQ,CAAE,CADH,CAEPT,OAAO,CAAE,MAFF,CAGPU,YAAY,CAAE,eAHP,CAZE,CAiBXC,SAAS,CAAE,CACTC,QAAQ,CAAE,EADD,CAjBA,CAoBXC,eAAe,CAAE,CACfV,MAAM,CAAE,MADO,CApBN,CAAD,CADoB,EAAN,CAA5B,CA2BA;AACA,cAAe,SAASW,CAAAA,SAAT,CAAmBC,KAAnB,CAA+B,IACpCC,CAAAA,OADoC,CAChBD,KADgB,CACpCC,OADoC,CAC3BC,MAD2B,CAChBF,KADgB,CAC3BE,MAD2B,CAE5C,GAAMC,CAAAA,OAAO,CAAGrB,SAAS,EAAzB,CAF4C,cAGpBvB,QAAQ,CAAC,KAAD,CAHY,wCAGrC6C,IAHqC,eAG/BC,OAH+B,8BAId9C,QAAQ,CAAW,EAAX,CAJM,yCAIrC+C,OAJqC,eAI5BC,UAJ4B,8BAKZhD,QAAQ,CAEtC,EAFsC,CALI,yCAKrCiD,QALqC,eAK3BC,WAL2B,8BAQhBlD,QAAQ,EARQ,yCAQrCmD,MARqC,eAQ7BC,SAR6B,8BASVpD,QAAQ,EATE,0CASrCqD,SATqC,gBAS1BC,YAT0B,gCAUdtD,QAAQ,CAAQ,EAAR,CAVM,2CAUrCuD,OAVqC,gBAU5BC,UAV4B,gBAW5C,GAAMC,CAAAA,MAAM,CAAGxD,WAAW,CAAC,iBAAMyD,aAAN,mIACnBC,IADmB,CACZD,aAAa,CAAC,CAAD,CADD,CAErBE,MAFqB,CAEZ,GAAIC,CAAAA,UAAJ,EAFY,CAGzBD,MAAM,CAACE,MAAP,CAAgB,SAASC,KAAT,CAAqB,CACnC,GAAMC,CAAAA,SAAS,CAAGD,KAAK,CAACE,MAAN,CAAaC,MAA/B,CACA/D,KAAK,CAAC6D,SAAD,CAAY,EAAZ,CAAgB,SAASG,GAAT,CAAcC,MAAd,CAAsB,CACzC,GAAMC,CAAAA,IAAI,CAAGD,MAAM,CAACE,KAAP,EAAb,CACAd,UAAU,CAACY,MAAD,CAAV,CACApB,UAAU,CAACqB,IAAD,CAAV,CACD,CAJI,CAAL,CAKD,CAPD,CAQAT,MAAM,CAACW,UAAP,CAAkBZ,IAAlB,EAXyB,8CAAD,CAYvB,EAZuB,CAA1B,CAX4C,iBAwBUzD,WAAW,CAAC,CAChEuD,MAAM,CAANA,MADgE,CAEhEe,QAAQ,CAAE,KAFsD,CAAD,CAxBrB,CAwBpCC,YAxBoC,cAwBpCA,YAxBoC,CAwBtBC,aAxBsB,cAwBtBA,aAxBsB,CAwBPC,YAxBO,cAwBPA,YAxBO,CA4B5C,QAASC,CAAAA,eAAT,EAA2B,CACzB9B,OAAO,CAAC,IAAD,CAAP,CACD,CAED,QAAS+B,CAAAA,WAAT,EAAuB,CACrB/B,OAAO,CAAC,KAAD,CAAP,CACAI,WAAW,CAAC,EAAD,CAAX,CACAF,UAAU,CAAC,EAAD,CAAV,CACAI,SAAS,CAAC,IAAD,CAAT,CACAE,YAAY,CAAC,IAAD,CAAZ,CACD,CACD,QAASwB,CAAAA,YAAT,EAAwB,CACtB,GAAMC,CAAAA,OAAO,CAAGxB,OAAO,CAACyB,GAAR,CAAY,SAACC,GAAD,CAAgB,CAC1C,GAAIC,CAAAA,OAAY,CAAG,EAAnB,CACAjC,QAAQ,CAACkC,OAAT,CAAiB,SAACC,IAAD,CAAiD,CAChEF,OAAO,CAACE,IAAI,CAAC/B,SAAN,CAAP,CAA0B4B,GAAG,CAAClC,OAAO,CAACsC,OAAR,CAAgBD,IAAI,CAACjC,MAArB,CAAD,CAA7B,CACD,CAFD,EAGAR,MAAM,CAACuC,OAAD,CAAN,CACA,MAAOA,CAAAA,OAAP,CACD,CAPe,CAAhB,CAQAL,WAAW,GACZ,CAED,MACE,gCACE,oBAAC,MAAD,EACE,KAAK,CAAC,WADR,CAEE,OAAO,CAAED,eAFX,CAGE,OAAO,CAAE,oBAAC,UAAD,MAHX,eADF,CAQE,oBAAC,MAAD,EACE,IAAI,CAAE/B,IADR,CAEE,OAAO,CAAEgC,WAFX,CAGE,kBAAgB,mBAHlB,EAKE,oBAAC,WAAD,EAAa,EAAE,CAAC,mBAAhB,sBALF,CAME,oBAAC,aAAD,MACG9B,OAAO,CAACuC,MAAR,GAAmB,CAAnB,CACC,0BAASb,YAAY,EAArB,CACE,4BAAWC,aAAa,EAAxB,CADF,CAEE,oBAAC,IAAD,EACE,SAAS,KADX,CAEE,SAAS,CAAC,QAFZ,CAGE,OAAO,CAAC,QAHV,CAIE,YAAY,CAAC,QAJf,CAKE,UAAU,CAAC,QALb,EAOE,oBAAC,UAAD,EAAY,OAAO,CAAC,WAApB,mCAPF,CAWE,oBAAC,SAAD,EAAW,SAAS,CAAE9B,OAAO,CAACP,SAA9B,EAXF,CAYE,oBAAC,UAAD,EAAY,OAAO,CAAC,WAApB,OAZF,CAaGsC,YAAY,CACX,sDADW,CAGX,oBAAC,MAAD,EAAQ,KAAK,CAAC,WAAd,2BAhBJ,CAFF,CADD,CAwBC,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAC,QAA1B,EACG1B,QAAQ,CAAC+B,GAAT,CAAa,SAAC9C,OAAD,CAAeqD,KAAf,QACZ,qBAAC,IAAD,EACE,SAAS,KADX,CAEE,SAAS,CAAC,KAFZ,CAGE,UAAU,CAAC,QAHb,CAIE,OAAO,CAAC,eAJV,EAME,oBAAC,UAAD,MAAarD,OAAO,CAACiB,MAArB,CANF,CAOE,oBAAC,SAAD,MAPF,CAQE,oBAAC,UAAD,MAAajB,OAAO,CAACmB,SAArB,CARF,CASE,oBAAC,UAAD,EACE,OAAO,CAAE,kBAAM,CACb,GAAImC,CAAAA,WAAW,oBAAOvC,QAAP,CAAf,CACAuC,WAAW,CAACC,MAAZ,CAAmBF,KAAnB,CAA0B,CAA1B,EACArC,WAAW,CAACsC,WAAD,CAAX,CACD,CALH,EAOE,oBAAC,UAAD,MAPF,CATF,CADY,EAAb,CADH,CAsBE,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAC,KAA1B,CAAgC,UAAU,CAAC,QAA3C,EACE,oBAAC,WAAD,EAAa,SAAS,CAAE5C,OAAO,CAAChB,WAAhC,EACE,oBAAC,UAAD,EAAY,OAAO,CAAC,UAApB,eADF,CAEE,oBAAC,MAAD,EACE,KAAK,CAAEuB,MADT,CAEE,QAAQ,CAAE,kBAACuC,CAAD,CAASC,CAAT,CAAoB,CAC5BvC,SAAS,CAACsC,CAAC,CAACzB,MAAF,CAAS2B,KAAV,CAAT,CACD,CAJH,CAKE,UAAU,CAAE,CACVC,IAAI,CAAE,KADI,CAEVC,EAAE,CAAE,UAFM,CALd,EAUG/C,OAAO,CAACiC,GAAR,CAAY,SAACe,GAAD,QACX,qBAAC,QAAD,EAAU,KAAK,CAAEA,GAAjB,EAAuBA,GAAvB,CADW,EAAZ,CAVH,CAFF,CADF,CAkBE,oBAAC,SAAD,MAlBF,CAmBE,oBAAC,WAAD,EAAa,SAAS,CAAEnD,OAAO,CAAChB,WAAhC,EACE,oBAAC,UAAD,EAAY,OAAO,CAAC,aAApB,kBADF,CAEE,oBAAC,MAAD,EACE,KAAK,CAAEyB,SADT,CAEE,QAAQ,CAAE,kBAACqC,CAAD,CAASC,CAAT,CAAoB,CAC5BrC,YAAY,CAACoC,CAAC,CAACzB,MAAF,CAAS2B,KAAV,CAAZ,CACD,CAJH,CAKE,UAAU,CAAE,CACVC,IAAI,CAAE,QADI,CAEVC,EAAE,CAAE,aAFM,CALd,EAUGpD,OAAO,CAACsC,GAAR,CAAY,SAACgB,MAAD,QACX,qBAAC,QAAD,EAAU,KAAK,CAAEA,MAAM,CAACD,GAAxB,EAA8BC,MAAM,CAACH,IAArC,CADW,EAAZ,CAVH,CAFF,CAnBF,CAoCE,oBAAC,UAAD,EACE,OAAO,CAAE,kBAAM,CACb,GAAI1C,MAAM,EAAIE,SAAd,CAAyB,CACvBH,WAAW,8BAAKD,QAAL,GAAe,CAAEE,MAAM,CAANA,MAAF,CAAUE,SAAS,CAATA,SAAV,CAAf,GAAX,CACAC,YAAY,CAAC,IAAD,CAAZ,CACAF,SAAS,CAAC,IAAD,CAAT,CACD,CACF,CAPH,EASE,oBAAC,OAAD,MATF,CApCF,CAtBF,CAzBJ,CANF,CAwGE,oBAAC,aAAD,MACE,oBAAC,MAAD,EAAQ,OAAO,CAAEyB,WAAjB,CAA8B,KAAK,CAAC,SAApC,WADF,CAIE,oBAAC,MAAD,EACE,OAAO,CAAEC,YADX,CAEE,QAAQ,CAAE7B,QAAQ,CAACqC,MAAT,GAAoB,CAFhC,CAGE,KAAK,CAAC,SAHR,WAJF,CAxGF,CARF,CADF,CAgID","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport _camelCase from \"lodash/camelCase\";\nimport { useDropzone } from \"react-dropzone\";\nimport parse from \"csv-parse\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport AddCSVIcon from \"@material-ui/icons/PlaylistAdd\";\nimport ArrowIcon from \"@material-ui/icons/TrendingFlatOutlined\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport CloudIcon from \"@material-ui/icons/CloudUpload\";\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    keyPair: {\n      flexGrow: 2,\n      display: \"flex\",\n      justifyItems: \"space-between\",\n    },\n    cloudIcon: {\n      fontSize: 64,\n    },\n    uploadContainer: {\n      margin: \"auto\",\n    },\n  })\n);\n\n// TODO: Create an interface for props\nexport default function ImportCSV(props: any) {\n  const { columns, addRow } = props;\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [csvKeys, setCsvKeys] = useState<string[]>([]);\n  const [keyPairs, setKeyPairs] = useState<\n    { csvKey: string; columnKey: string }[]\n  >([]);\n  const [csvKey, setCsvKey] = useState();\n  const [columnKey, setColumnKey] = useState();\n  const [csvData, setCsvData] = useState<any[]>([]);\n  const onDrop = useCallback(async acceptedFiles => {\n    const file = acceptedFiles[0];\n    var reader = new FileReader();\n    reader.onload = function(event: any) {\n      const csvString = event.target.result;\n      parse(csvString, {}, function(err, output) {\n        const keys = output.shift();\n        setCsvData(output);\n        setCsvKeys(keys);\n      });\n    };\n    reader.readAsText(file);\n  }, []);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    multiple: false,\n  });\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n    setKeyPairs([]);\n    setCsvKeys([]);\n    setCsvKey(null);\n    setColumnKey(null);\n  }\n  function handleImport() {\n    const newDocs = csvData.map((row: any[]) => {\n      let docData: any = {};\n      keyPairs.forEach((pair: { columnKey: string; csvKey: string }) => {\n        docData[pair.columnKey] = row[csvKeys.indexOf(pair.csvKey)];\n      });\n      addRow(docData);\n      return docData;\n    });\n    handleClose();\n  }\n\n  return (\n    <div>\n      <Button\n        color=\"secondary\"\n        onClick={handleClickOpen}\n        endIcon={<AddCSVIcon />}\n      >\n        Import CSV\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Import a CSV file</DialogTitle>\n        <DialogContent>\n          {csvKeys.length === 0 ? (\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignContent=\"center\"\n                alignItems=\"center\"\n              >\n                <Typography variant=\"subtitle1\">\n                  Drag 'n' drop a .csv file here\n                </Typography>\n\n                <CloudIcon className={classes.cloudIcon} />\n                <Typography variant=\"subtitle1\">or</Typography>\n                {isDragActive ? (\n                  <p>Drop the file here ...</p>\n                ) : (\n                  <Button color=\"secondary\">click to select a file</Button>\n                )}\n              </Grid>\n            </div>\n          ) : (\n            <Grid container direction=\"column\">\n              {keyPairs.map((keyPair: any, index: number) => (\n                <Grid\n                  container\n                  direction=\"row\"\n                  alignItems=\"center\"\n                  justify=\"space-between\"\n                >\n                  <Typography>{keyPair.csvKey}</Typography>\n                  <ArrowIcon />\n                  <Typography>{keyPair.columnKey}</Typography>\n                  <IconButton\n                    onClick={() => {\n                      let clonedPairs = [...keyPairs];\n                      clonedPairs.splice(index, 1);\n                      setKeyPairs(clonedPairs);\n                    }}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </Grid>\n              ))}\n              <Grid container direction=\"row\" alignItems=\"center\">\n                <FormControl className={classes.formControl}>\n                  <InputLabel htmlFor=\"csv-keys\">csv Fields</InputLabel>\n                  <Select\n                    value={csvKey}\n                    onChange={(e: any, v: any) => {\n                      setCsvKey(e.target.value);\n                    }}\n                    inputProps={{\n                      name: \"csv\",\n                      id: \"csv-keys\",\n                    }}\n                  >\n                    {csvKeys.map((key: string) => (\n                      <MenuItem value={key}>{key}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <ArrowIcon />\n                <FormControl className={classes.formControl}>\n                  <InputLabel htmlFor=\"column-keys\">column Fields</InputLabel>\n                  <Select\n                    value={columnKey}\n                    onChange={(e: any, v: any) => {\n                      setColumnKey(e.target.value);\n                    }}\n                    inputProps={{\n                      name: \"column\",\n                      id: \"column-keys\",\n                    }}\n                  >\n                    {columns.map((column: any) => (\n                      <MenuItem value={column.key}>{column.name}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <IconButton\n                  onClick={() => {\n                    if (csvKey && columnKey) {\n                      setKeyPairs([...keyPairs, { csvKey, columnKey }]);\n                      setColumnKey(null);\n                      setCsvKey(null);\n                    }\n                  }}\n                >\n                  <AddIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={handleImport}\n            disabled={keyPairs.length === 0}\n            color=\"primary\"\n          >\n            import\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}