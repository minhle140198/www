{"ast":null,"code":"import _slicedToArray from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import useTable from\"./useTable\";import useTableConfig from\"./useTableConfig\";var useFiretable=function useFiretable(collectionName,filters,orderBy){var _useTableConfig=useTableConfig(collectionName),_useTableConfig2=_slicedToArray(_useTableConfig,2),tableConfig=_useTableConfig2[0],configActions=_useTableConfig2[1];var _useTable=useTable({path:collectionName,filters:filters,orderBy:orderBy}),_useTable2=_slicedToArray(_useTable,2),tableState=_useTable2[0],tableActions=_useTable2[1];/** set collection path of table */var setTable=function setTable(collectionName,filters,orderBy){if(collectionName!==tableState.path||filters!==tableState.filters){configActions.setTable(collectionName);tableActions.setTable(collectionName,filters);}};var filterTable=function filterTable(filters){tableActions.dispatch({filters:filters});};var setOrder=function setOrder(orderBy){tableActions.dispatch({orderBy:orderBy});};var state={columns:tableConfig.columns,config:{rowHeight:tableConfig.rowHeight},rows:tableState.rows,rowsLimit:tableState.limit,loadingRows:tableState.loading,loadingColumns:tableConfig.loading};var actions={column:{add:configActions.add,resize:configActions.resize,rename:configActions.rename,update:configActions.updateColumn,remove:configActions.remove,reorder:configActions.reorder},row:{add:tableActions.addRow,delete:tableActions.deleteRow,more:tableActions.moreRows},table:{updateConfig:configActions.updateConfig,set:setTable,orderBy:setOrder,filter:filterTable}};return{tableState:state,tableActions:actions};};export default useFiretable;","map":{"version":3,"sources":["/Users/monsama/firetable/www/src/hooks/useFiretable/index.ts"],"names":["useTable","useTableConfig","useFiretable","collectionName","filters","orderBy","tableConfig","configActions","path","tableState","tableActions","setTable","filterTable","dispatch","setOrder","state","columns","config","rowHeight","rows","rowsLimit","limit","loadingRows","loading","loadingColumns","actions","column","add","resize","rename","update","updateColumn","remove","reorder","row","addRow","delete","deleteRow","more","moreRows","table","updateConfig","set","filter"],"mappings":"mJAAA,MAAOA,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CAmCA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CACnBC,cADmB,CAEnBC,OAFmB,CAGnBC,OAHmB,CAIhB,qBACkCJ,cAAc,CAACE,cAAD,CADhD,oDACIG,WADJ,qBACiBC,aADjB,mCAEgCP,QAAQ,CAAC,CAC1CQ,IAAI,CAAEL,cADoC,CAE1CC,OAAO,CAAPA,OAF0C,CAG1CC,OAAO,CAAPA,OAH0C,CAAD,CAFxC,wCAEII,UAFJ,eAEgBC,YAFhB,eAOH,mCACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CACfR,cADe,CAEfC,OAFe,CAGfC,OAHe,CAIZ,CACH,GAAIF,cAAc,GAAKM,UAAU,CAACD,IAA9B,EAAsCJ,OAAO,GAAKK,UAAU,CAACL,OAAjE,CAA0E,CACxEG,aAAa,CAACI,QAAd,CAAuBR,cAAvB,EACAO,YAAY,CAACC,QAAb,CAAsBR,cAAtB,CAAsCC,OAAtC,EACD,CACF,CATD,CAUA,GAAMQ,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACR,OAAD,CAAgC,CAClDM,YAAY,CAACG,QAAb,CAAsB,CAAET,OAAO,CAAPA,OAAF,CAAtB,EACD,CAFD,CAGA,GAAMU,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACT,OAAD,CAA+B,CAC9CK,YAAY,CAACG,QAAb,CAAsB,CAAER,OAAO,CAAPA,OAAF,CAAtB,EACD,CAFD,CAGA,GAAMU,CAAAA,KAAqB,CAAG,CAC5BC,OAAO,CAAEV,WAAW,CAACU,OADO,CAE5BC,MAAM,CAAE,CAAEC,SAAS,CAAEZ,WAAW,CAACY,SAAzB,CAFoB,CAG5BC,IAAI,CAAEV,UAAU,CAACU,IAHW,CAI5BC,SAAS,CAAEX,UAAU,CAACY,KAJM,CAK5BC,WAAW,CAAEb,UAAU,CAACc,OALI,CAM5BC,cAAc,CAAElB,WAAW,CAACiB,OANA,CAA9B,CAQA,GAAME,CAAAA,OAAyB,CAAG,CAChCC,MAAM,CAAE,CACNC,GAAG,CAAEpB,aAAa,CAACoB,GADb,CAENC,MAAM,CAAErB,aAAa,CAACqB,MAFhB,CAGNC,MAAM,CAAEtB,aAAa,CAACsB,MAHhB,CAINC,MAAM,CAAEvB,aAAa,CAACwB,YAJhB,CAKNC,MAAM,CAAEzB,aAAa,CAACyB,MALhB,CAMNC,OAAO,CAAE1B,aAAa,CAAC0B,OANjB,CADwB,CAShCC,GAAG,CAAE,CACHP,GAAG,CAAEjB,YAAY,CAACyB,MADf,CAEHC,MAAM,CAAE1B,YAAY,CAAC2B,SAFlB,CAGHC,IAAI,CAAE5B,YAAY,CAAC6B,QAHhB,CAT2B,CAchCC,KAAK,CAAE,CACLC,YAAY,CAAElC,aAAa,CAACkC,YADvB,CAELC,GAAG,CAAE/B,QAFA,CAGLN,OAAO,CAAES,QAHJ,CAIL6B,MAAM,CAAE/B,WAJH,CAdyB,CAAlC,CAsBA,MAAO,CAAEH,UAAU,CAAEM,KAAd,CAAqBL,YAAY,CAAEe,OAAnC,CAAP,CACD,CA3DD,CA6DA,cAAevB,CAAAA,YAAf","sourcesContent":["import useTable from \"./useTable\";\nimport useTableConfig from \"./useTableConfig\";\n\nexport type FiretableActions = {\n  column: {\n    add: Function;\n    resize: Function;\n    rename: Function;\n    remove: Function;\n    update: Function;\n    reorder: Function;\n  };\n  row: { add: Function; delete: Function; more: Function };\n  table: {\n    set: Function;\n    filter: Function;\n    updateConfig: Function;\n    orderBy: Function;\n  };\n};\n\nexport type FiretableState = {\n  config: { rowHeight: number };\n  columns: any[];\n  rows: any[];\n  rowsLimit: number;\n\n  loadingRows: boolean;\n  loadingColumns: boolean;\n};\nexport type FireTableFilter = {\n  key: string;\n  operator: \"==\" | \"<\" | \">\" | \">=\" | \"<=\" | string;\n  value: string | number | boolean | string[];\n};\nexport type FiretableOrderBy = { key: string; direction: \"asc\" | \"desc\" }[];\nconst useFiretable = (\n  collectionName: string,\n  filters?: FireTableFilter[],\n  orderBy?: FiretableOrderBy\n) => {\n  const [tableConfig, configActions] = useTableConfig(collectionName);\n  const [tableState, tableActions] = useTable({\n    path: collectionName,\n    filters,\n    orderBy,\n  });\n  /** set collection path of table */\n  const setTable = (\n    collectionName: string,\n    filters: FireTableFilter[],\n    orderBy: FiretableOrderBy\n  ) => {\n    if (collectionName !== tableState.path || filters !== tableState.filters) {\n      configActions.setTable(collectionName);\n      tableActions.setTable(collectionName, filters);\n    }\n  };\n  const filterTable = (filters: FireTableFilter[]) => {\n    tableActions.dispatch({ filters });\n  };\n  const setOrder = (orderBy: FiretableOrderBy) => {\n    tableActions.dispatch({ orderBy });\n  };\n  const state: FiretableState = {\n    columns: tableConfig.columns,\n    config: { rowHeight: tableConfig.rowHeight },\n    rows: tableState.rows,\n    rowsLimit: tableState.limit,\n    loadingRows: tableState.loading,\n    loadingColumns: tableConfig.loading,\n  };\n  const actions: FiretableActions = {\n    column: {\n      add: configActions.add,\n      resize: configActions.resize,\n      rename: configActions.rename,\n      update: configActions.updateColumn,\n      remove: configActions.remove,\n      reorder: configActions.reorder,\n    },\n    row: {\n      add: tableActions.addRow,\n      delete: tableActions.deleteRow,\n      more: tableActions.moreRows,\n    },\n    table: {\n      updateConfig: configActions.updateConfig,\n      set: setTable,\n      orderBy: setOrder,\n      filter: filterTable,\n    },\n  };\n\n  return { tableState: state, tableActions: actions };\n};\n\nexport default useFiretable;\n"]},"metadata":{},"sourceType":"module"}