{"ast":null,"code":"import React from\"react\";import queryString from\"query-string\";import Navigation from\"../components/Navigation\";import Table from\"../components/Table\";import useRouter from\"../hooks/useRouter\";export default function TableView(){var router=useRouter();var tableCollection=router.location.pathname.split(\"/\")[2];var filters=[];var parsed=queryString.parse(router.location.search);if(typeof parsed.filters===\"string\"){// decoded\n//[{\"key\":\"cohort\",\"operator\":\"==\",\"value\":\"AMS1\"}]\nfilters=JSON.parse(parsed.filters);//TODO: json schema validator\n}return React.createElement(Navigation,null,React.createElement(Table,{collection:tableCollection,filters:filters}));}","map":{"version":3,"sources":["/Users/monsama/firetable/www/src/views/TableView.tsx"],"names":["React","queryString","Navigation","Table","useRouter","TableView","router","tableCollection","location","pathname","split","filters","parsed","parse","search","JSON"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CAIA,MAAOC,CAAAA,SAAP,KAAsB,oBAAtB,CAEA,cAAe,SAASC,CAAAA,SAAT,EAAqB,CAClC,GAAMC,CAAAA,MAAM,CAAGF,SAAS,EAAxB,CACA,GAAMG,CAAAA,eAAe,CAAGD,MAAM,CAACE,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAAxB,CACA,GAAIC,CAAAA,OAA0B,CAAG,EAAjC,CACA,GAAMC,CAAAA,MAAM,CAAGX,WAAW,CAACY,KAAZ,CAAkBP,MAAM,CAACE,QAAP,CAAgBM,MAAlC,CAAf,CACA,GAAI,MAAOF,CAAAA,MAAM,CAACD,OAAd,GAA0B,QAA9B,CAAwC,CACtC;AACA;AACAA,OAAO,CAAGI,IAAI,CAACF,KAAL,CAAWD,MAAM,CAACD,OAAlB,CAAV,CACA;AACD,CAED,MACE,qBAAC,UAAD,MACE,oBAAC,KAAD,EAAO,UAAU,CAAEJ,eAAnB,CAAoC,OAAO,CAAEI,OAA7C,EADF,CADF,CAKD","sourcesContent":["import React from \"react\";\nimport queryString from \"query-string\";\nimport Navigation from \"../components/Navigation\";\nimport Table from \"../components/Table\";\n\nimport { FireTableFilter } from \"../hooks/useFiretable\";\n\nimport useRouter from \"../hooks/useRouter\";\n\nexport default function TableView() {\n  const router = useRouter();\n  const tableCollection = router.location.pathname.split(\"/\")[2];\n  let filters: FireTableFilter[] = [];\n  const parsed = queryString.parse(router.location.search);\n  if (typeof parsed.filters === \"string\") {\n    // decoded\n    //[{\"key\":\"cohort\",\"operator\":\"==\",\"value\":\"AMS1\"}]\n    filters = JSON.parse(parsed.filters);\n    //TODO: json schema validator\n  }\n\n  return (\n    <Navigation>\n      <Table collection={tableCollection} filters={filters} />\n    </Navigation>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}