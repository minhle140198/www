{"ast":null,"code":"import _slicedToArray from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{useDebouncedCallback}from\"use-debounce\";import TextField from\"@material-ui/core/TextField\";// TODO: Create an interface for props\nvar Number=function Number(props){var value=props.value,onSubmit=props.onSubmit;var _useState=useState(value),_useState2=_slicedToArray(_useState,2),localValue=_useState2[0],setLocalValue=_useState2[1];useEffect(function(){if(value!==localValue)debouncedCallback(localValue);},[localValue]);// Debounce callback\nvar _useDebouncedCallback=useDebouncedCallback(function(value){if(value.includes(\".\")){onSubmit(parseFloat(value));}else onSubmit(parseInt(value));},// delay in ms\n1100),_useDebouncedCallback2=_slicedToArray(_useDebouncedCallback,1),debouncedCallback=_useDebouncedCallback2[0];return React.createElement(TextField,{type:\"number\",value:localValue,onChange:function onChange(e){setLocalValue(e.target.value);}});// else return <p>{cellData}</p>;\n};export default Number;","map":{"version":3,"sources":["/Users/monsama/firetable/www/src/components/Fields/Number.tsx"],"names":["React","useState","useEffect","useDebouncedCallback","TextField","Number","props","value","onSubmit","localValue","setLocalValue","debouncedCallback","includes","parseFloat","parseInt","e","target"],"mappings":"mJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAAsBC,oBAAtB,KAAkD,cAAlD,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CAEA;AACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAgB,IACrBC,CAAAA,KADqB,CACDD,KADC,CACrBC,KADqB,CACdC,QADc,CACDF,KADC,CACdE,QADc,eAGOP,QAAQ,CAACM,KAAD,CAHf,wCAGtBE,UAHsB,eAGVC,aAHU,eAK7BR,SAAS,CAAC,UAAM,CACd,GAAIK,KAAK,GAAKE,UAAd,CAA0BE,iBAAiB,CAACF,UAAD,CAAjB,CAC3B,CAFQ,CAEN,CAACA,UAAD,CAFM,CAAT,CAIA;AAT6B,0BAUDN,oBAAoB,CAC9C,SAAAI,KAAK,CAAI,CACP,GAAIA,KAAK,CAACK,QAAN,CAAe,GAAf,CAAJ,CAAyB,CACvBJ,QAAQ,CAACK,UAAU,CAACN,KAAD,CAAX,CAAR,CACD,CAFD,IAEOC,CAAAA,QAAQ,CAACM,QAAQ,CAACP,KAAD,CAAT,CAAR,CACR,CAL6C,CAM9C;AACA,IAP8C,CAVnB,gEAUtBI,iBAVsB,2BAmB7B,MACE,qBAAC,SAAD,EACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAEF,UAFT,CAGE,QAAQ,CAAE,kBAAAM,CAAC,CAAI,CACbL,aAAa,CAACK,CAAC,CAACC,MAAF,CAAST,KAAV,CAAb,CACD,CALH,EADF,CASA;AACD,CA7BD,CA8BA,cAAeF,CAAAA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport useDebounce, { useDebouncedCallback } from \"use-debounce\";\nimport TextField from \"@material-ui/core/TextField\";\n\n// TODO: Create an interface for props\nconst Number = (props: any) => {\n  const { value, onSubmit } = props;\n\n  const [localValue, setLocalValue] = useState(value);\n\n  useEffect(() => {\n    if (value !== localValue) debouncedCallback(localValue);\n  }, [localValue]);\n\n  // Debounce callback\n  const [debouncedCallback] = useDebouncedCallback(\n    value => {\n      if (value.includes(\".\")) {\n        onSubmit(parseFloat(value));\n      } else onSubmit(parseInt(value));\n    },\n    // delay in ms\n    1100\n  );\n  return (\n    <TextField\n      type=\"number\"\n      value={localValue}\n      onChange={e => {\n        setLocalValue(e.target.value);\n      }}\n    />\n  );\n  // else return <p>{cellData}</p>;\n};\nexport default Number;\n"]},"metadata":{},"sourceType":"module"}