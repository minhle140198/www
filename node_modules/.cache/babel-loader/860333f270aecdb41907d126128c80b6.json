{"ast":null,"code":"import _regeneratorRuntime from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React,{lazy,Suspense}from\"react\";import{FieldType}from\"../Fields\";import{Editors}from\"react-data-grid-addons\";import _uniq from\"lodash/uniq\";import{algoliaUpdateDoc}from\"../../firebase/callables\";var AutoComplete=Editors.AutoComplete;var MultiSelect=lazy(function(){return import(\"../Fields/MultiSelect\");});var DateField=lazy(function(){return import(\"../Fields/Date\");});var Rating=lazy(function(){return import(\"../Fields/Rating\");});var Number=lazy(function(){return import(\"../Fields/Number\");});var CheckBox=lazy(function(){return import(\"../Fields/CheckBox\");});var UrlLink=lazy(function(){return import(\"../Fields/UrlLink\");});var Image=lazy(function(){return import(\"../Fields/Image\");});var File=lazy(function(){return import(\"../Fields/File\");});var LongText=lazy(function(){return import(\"../Fields/LongText\");});var RichText=lazy(function(){return import(\"../Fields/RichText\");});var Color=lazy(function(){return import(\"../Fields/Color\");});var Action=lazy(function(){return import(\"../Fields/Action\");});export var editable=function editable(fieldType){switch(fieldType){case FieldType.date:case FieldType.dateTime:case FieldType.rating:case FieldType.number:case FieldType.checkBox:case FieldType.multiSelect:case FieldType.image:case FieldType.file:case FieldType.longText:case FieldType.richText:case FieldType.documentSelect:case FieldType.color:case FieldType.action:case FieldType.last:return false;default:return true;}};export var onSubmit=function onSubmit(key,row){return function _callee(value){var collection,data,_row$ref$update,updatedAt,updatedFields;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:collection=row.ref.parent.path;data={collection:collection,id:row.ref.id,doc:_defineProperty({},key,value)};if(!(value!==null||value!==undefined)){_context.next=9;break;}updatedAt=new Date();updatedFields=[key];if(row.updatedFields){updatedFields=_uniq([key].concat(_toConsumableArray(row.updatedFields)));}row.ref.update((_row$ref$update={},_defineProperty(_row$ref$update,key,value),_defineProperty(_row$ref$update,\"updatedAt\",updatedAt),_defineProperty(_row$ref$update,\"updatedFields\",updatedFields),_row$ref$update));_context.next=9;return _regeneratorRuntime.awrap(algoliaUpdateDoc(data));case 9:case\"end\":return _context.stop();}}});};};export var DateFormatter=function DateFormatter(key,fieldType){return function(props){return React.createElement(DateField,Object.assign({},props,{onSubmit:onSubmit(key,props.row),fieldType:fieldType}));};};export var onGridRowsUpdated=function onGridRowsUpdated(event){var fromRowData=event.fromRowData,updated=event.updated,action=event.action;if(action===\"CELL_UPDATE\"){onSubmit(Object.keys(updated)[0],fromRowData)(Object.values(updated)[0]);}};export var onCellSelected=function onCellSelected(args){};export var cellFormatter=function cellFormatter(column){var type=column.type,key=column.key,options=column.options;switch(type){case FieldType.date:case FieldType.dateTime:return DateFormatter(key,type);case FieldType.rating:return function(props){return React.createElement(Suspense,{fallback:React.createElement(\"div\",null)},React.createElement(Rating,Object.assign({},props,{onSubmit:onSubmit(key,props.row),value:typeof props.value===\"number\"?props.value:0})));};case FieldType.number:return function(props){return React.createElement(Suspense,{fallback:React.createElement(\"div\",null)},React.createElement(Number,Object.assign({},props,{onSubmit:onSubmit(key,props.row),value:typeof props.value===\"number\"?props.value:undefined})));};case FieldType.color:return function(props){return React.createElement(Suspense,{fallback:React.createElement(\"div\",null)},React.createElement(Color,Object.assign({},props,{onSubmit:onSubmit(key,props.row)})));};case FieldType.checkBox:return function(props){return React.createElement(Suspense,{fallback:React.createElement(\"div\",null)},React.createElement(CheckBox,Object.assign({column:column},props,{onSubmit:onSubmit(key,props.row)})));};case FieldType.url:return function(props){return React.createElement(Suspense,{fallback:React.createElement(\"div\",null)},React.createElement(UrlLink,props));};case FieldType.action:return function(props){return React.createElement(Suspense,{fallback:React.createElement(\"div\",null)},React.createElement(Action,Object.assign({fieldName:key},props,{onSubmit:onSubmit(key,props.row)})));};case FieldType.multiSelect:return function(props){return React.createElement(Suspense,{fallback:React.createElement(\"div\",null)},React.createElement(MultiSelect,Object.assign({},props,{onSubmit:onSubmit(key,props.row),options:options})));};case FieldType.image:return function(props){return React.createElement(Suspense,{fallback:React.createElement(\"div\",null)},React.createElement(Image,Object.assign({},props,{onSubmit:onSubmit(key,props.row),fieldName:key})));};case FieldType.file:return function(props){return React.createElement(Suspense,{fallback:React.createElement(\"div\",null)},React.createElement(File,Object.assign({},props,{onSubmit:onSubmit(key,props.row),fieldName:key})));};case FieldType.longText:return function(props){return React.createElement(Suspense,{fallback:React.createElement(\"div\",null)},React.createElement(LongText,Object.assign({},props,{fieldName:key,onSubmit:onSubmit(key,props.row)})));};case FieldType.richText:return function(props){return React.createElement(Suspense,{fallback:React.createElement(\"div\",null)},React.createElement(RichText,Object.assign({},props,{fieldName:key,onSubmit:onSubmit(key,props.row)})));};default:return false;}};export var singleSelectEditor=function singleSelectEditor(options){if(options){var _options=options.map(function(option){return{id:option,value:option,title:option,text:option};});return React.createElement(AutoComplete,{options:_options});}return React.createElement(AutoComplete,{options:[]});};","map":{"version":3,"sources":["/Users/monsama/firetable/www/src/components/Table/grid-fns.tsx"],"names":["React","lazy","Suspense","FieldType","Editors","_uniq","algoliaUpdateDoc","AutoComplete","MultiSelect","DateField","Rating","Number","CheckBox","UrlLink","Image","File","LongText","RichText","Color","Action","editable","fieldType","date","dateTime","rating","number","checkBox","multiSelect","image","file","longText","richText","documentSelect","color","action","last","onSubmit","key","row","value","collection","ref","parent","path","data","id","doc","undefined","updatedAt","Date","updatedFields","update","DateFormatter","props","onGridRowsUpdated","event","fromRowData","updated","Object","keys","values","onCellSelected","args","cellFormatter","column","type","options","url","singleSelectEditor","_options","map","option","title","text"],"mappings":"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","sourcesContent":["import React, { lazy, Suspense } from \"react\";\nimport { FieldType } from \"../Fields\";\nimport { Editors } from \"react-data-grid-addons\";\nimport _uniq from \"lodash/uniq\";\nimport { algoliaUpdateDoc } from \"../../firebase/callables\";\n\nconst { AutoComplete } = Editors;\n\nconst MultiSelect = lazy(() => import(\"../Fields/MultiSelect\"));\nconst DateField = lazy(() => import(\"../Fields/Date\"));\nconst Rating = lazy(() => import(\"../Fields/Rating\"));\nconst Number = lazy(() => import(\"../Fields/Number\"));\nconst CheckBox = lazy(() => import(\"../Fields/CheckBox\"));\nconst UrlLink = lazy(() => import(\"../Fields/UrlLink\"));\nconst Image = lazy(() => import(\"../Fields/Image\"));\nconst File = lazy(() => import(\"../Fields/File\"));\nconst LongText = lazy(() => import(\"../Fields/LongText\"));\nconst RichText = lazy(() => import(\"../Fields/RichText\"));\nconst Color = lazy(() => import(\"../Fields/Color\"));\nconst Action = lazy(() => import(\"../Fields/Action\"));\n\nexport const editable = (fieldType: FieldType) => {\n  switch (fieldType) {\n    case FieldType.date:\n    case FieldType.dateTime:\n    case FieldType.rating:\n    case FieldType.number:\n    case FieldType.checkBox:\n    case FieldType.multiSelect:\n    case FieldType.image:\n    case FieldType.file:\n    case FieldType.longText:\n    case FieldType.richText:\n    case FieldType.documentSelect:\n    case FieldType.color:\n    case FieldType.action:\n    case FieldType.last:\n      return false;\n    default:\n      return true;\n  }\n};\n\nexport const onSubmit = (key: string, row: any) => async (value: any) => {\n  const collection = row.ref.parent.path;\n  const data = { collection, id: row.ref.id, doc: { [key]: value } };\n\n  if (value !== null || value !== undefined) {\n    const updatedAt = new Date();\n    let updatedFields = [key];\n    if (row.updatedFields) {\n      updatedFields = _uniq([key, ...row.updatedFields]);\n    }\n    row.ref.update({ [key]: value, updatedAt, updatedFields });\n    await algoliaUpdateDoc(data);\n  }\n};\n\nexport const DateFormatter = (key: string, fieldType: FieldType) => (\n  props: any\n) => {\n  return (\n    <DateField\n      {...props}\n      onSubmit={onSubmit(key, props.row)}\n      fieldType={fieldType}\n    />\n  );\n};\n\nexport const onGridRowsUpdated = (event: any) => {\n  const { fromRowData, updated, action } = event;\n  if (action === \"CELL_UPDATE\") {\n    onSubmit(Object.keys(updated)[0], fromRowData)(Object.values(updated)[0]);\n  }\n};\nexport const onCellSelected = (args: any) => {};\nexport const cellFormatter = (column: any) => {\n  const { type, key, options } = column;\n  switch (type) {\n    case FieldType.date:\n    case FieldType.dateTime:\n      return DateFormatter(key, type);\n    case FieldType.rating:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <Rating\n              {...props}\n              onSubmit={onSubmit(key, props.row)}\n              value={typeof props.value === \"number\" ? props.value : 0}\n            />\n          </Suspense>\n        );\n      };\n    case FieldType.number:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <Number\n              {...props}\n              onSubmit={onSubmit(key, props.row)}\n              value={typeof props.value === \"number\" ? props.value : undefined}\n            />\n          </Suspense>\n        );\n      };\n    case FieldType.color:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <Color {...props} onSubmit={onSubmit(key, props.row)} />\n          </Suspense>\n        );\n      };\n    case FieldType.checkBox:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <CheckBox\n              column={column}\n              {...props}\n              onSubmit={onSubmit(key, props.row)}\n            />\n          </Suspense>\n        );\n      };\n    case FieldType.url:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <UrlLink {...props} />\n          </Suspense>\n        );\n      };\n    case FieldType.action:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <Action\n              fieldName={key}\n              {...props}\n              onSubmit={onSubmit(key, props.row)}\n            />\n          </Suspense>\n        );\n      };\n    case FieldType.multiSelect:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <MultiSelect\n              {...props}\n              onSubmit={onSubmit(key, props.row)}\n              options={options}\n            />\n          </Suspense>\n        );\n      };\n    case FieldType.image:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <Image\n              {...props}\n              onSubmit={onSubmit(key, props.row)}\n              fieldName={key}\n            />\n          </Suspense>\n        );\n      };\n    case FieldType.file:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <File\n              {...props}\n              onSubmit={onSubmit(key, props.row)}\n              fieldName={key}\n            />\n          </Suspense>\n        );\n      };\n    case FieldType.longText:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <LongText\n              {...props}\n              fieldName={key}\n              onSubmit={onSubmit(key, props.row)}\n            />\n          </Suspense>\n        );\n      };\n    case FieldType.richText:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <RichText\n              {...props}\n              fieldName={key}\n              onSubmit={onSubmit(key, props.row)}\n            />\n          </Suspense>\n        );\n      };\n    default:\n      return false;\n  }\n};\n\nexport const singleSelectEditor = (options: string[]) => {\n  if (options) {\n    const _options = options.map(option => ({\n      id: option,\n      value: option,\n      title: option,\n      text: option,\n    }));\n    return <AutoComplete options={_options} />;\n  }\n\n  return <AutoComplete options={[]} />;\n};\n"]},"metadata":{},"sourceType":"module"}