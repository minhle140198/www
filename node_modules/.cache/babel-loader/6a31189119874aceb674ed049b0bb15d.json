{"ast":null,"code":"import React from\"react\";import clsx from\"clsx\";import{Link}from\"react-router-dom\";import{makeStyles,createStyles,Card,Grid,Typography,Button,CardActions,CardContent,CardMedia,Divider}from\"@material-ui/core\";import GoIcon from\"./GoIcon\";var useStyles=makeStyles(function(theme){return createStyles({root:{width:\"100%\"},container:{height:\"100%\"},cardContent:{\"&:last-child\":{paddingBottom:0}},headerSection:{marginBottom:theme.spacing(1)},overline:{marginBottom:theme.spacing(2),color:theme.palette.text.disabled},title:{whiteSpace:\"pre-line\"},image:{width:80,height:80,borderRadius:theme.shape.borderRadius},cardActions:{padding:theme.spacing(1),display:\"flex\",justifyContent:\"space-between\"},divider:{margin:theme.spacing(2),marginBottom:0}});});export default function StyledCard(_ref){var className=_ref.className,overline=_ref.overline,title=_ref.title,imageSource=_ref.imageSource,bodyContent=_ref.bodyContent,primaryButton=_ref.primaryButton,primaryLink=_ref.primaryLink,secondaryAction=_ref.secondaryAction;var classes=useStyles();return React.createElement(Card,{className:clsx(className,classes.root)},React.createElement(Grid,{container:true,direction:\"column\",wrap:\"nowrap\",className:classes.container},React.createElement(Grid,{item:true,xs:true},React.createElement(CardContent,{className:clsx(classes.container,classes.cardContent)},React.createElement(Grid,{container:true,direction:\"column\",wrap:\"nowrap\",className:classes.container},React.createElement(Grid,{item:true},React.createElement(Grid,{container:true,className:classes.headerSection,spacing:3},React.createElement(Grid,{item:true,xs:true},overline&&React.createElement(Typography,{variant:\"overline\",className:classes.overline},overline),title&&React.createElement(Typography,{variant:\"h5\",className:classes.title},title)),imageSource&&React.createElement(Grid,{item:true},React.createElement(CardMedia,{className:classes.image,image:imageSource,title:title})))),React.createElement(Grid,{item:true,xs:true},bodyContent&&Array.isArray(bodyContent)?React.createElement(Grid,{container:true,direction:\"column\",wrap:\"nowrap\",justify:\"space-between\"},bodyContent.map(function(element){return React.createElement(Grid,{item:true},element);})):bodyContent)))),React.createElement(Grid,{item:true},React.createElement(Divider,{className:classes.divider}),React.createElement(CardActions,{className:classes.cardActions},primaryButton&&React.createElement(Button,Object.assign({color:\"primary\"},primaryButton)),primaryLink&&React.createElement(Button,{color:\"primary\",component:Link,to:primaryLink.to,children:primaryLink.children||primaryLink.label,endIcon:React.createElement(GoIcon,null)}),secondaryAction))));}","map":{"version":3,"sources":["/Users/monsama/firetable/www/src/components/StyledCard.tsx"],"names":["React","clsx","Link","makeStyles","createStyles","Card","Grid","Typography","Button","CardActions","CardContent","CardMedia","Divider","GoIcon","useStyles","theme","root","width","container","height","cardContent","paddingBottom","headerSection","marginBottom","spacing","overline","color","palette","text","disabled","title","whiteSpace","image","borderRadius","shape","cardActions","padding","display","justifyContent","divider","margin","StyledCard","className","imageSource","bodyContent","primaryButton","primaryLink","secondaryAction","classes","Array","isArray","map","element","to","children","label"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport { Link, LinkProps } from \"react-router-dom\";\n\nimport {\n  makeStyles,\n  createStyles,\n  Card,\n  Grid,\n  Typography,\n  Button,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Divider,\n} from \"@material-ui/core\";\nimport { ButtonProps } from \"@material-ui/core/Button\";\n\nimport GoIcon from \"./GoIcon\";\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    root: { width: \"100%\" },\n    container: { height: \"100%\" },\n    cardContent: { \"&:last-child\": { paddingBottom: 0 } },\n\n    headerSection: { marginBottom: theme.spacing(1) },\n    overline: {\n      marginBottom: theme.spacing(2),\n      color: theme.palette.text.disabled,\n    },\n    title: { whiteSpace: \"pre-line\" },\n    image: {\n      width: 80,\n      height: 80,\n      borderRadius: theme.shape.borderRadius,\n    },\n\n    cardActions: {\n      padding: theme.spacing(1),\n\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n\n    divider: {\n      margin: theme.spacing(2),\n      marginBottom: 0,\n    },\n  })\n);\n\ninterface StyledCardProps {\n  className?: string;\n\n  overline?: React.ReactNode;\n  title?: string;\n  imageSource?: string;\n\n  bodyContent?: React.ReactNode;\n\n  primaryButton?: Partial<ButtonProps>;\n  primaryLink?: {\n    to: LinkProps[\"to\"];\n    children?: React.ReactNode;\n    label?: string;\n  };\n  secondaryAction?: React.ReactNode;\n}\n\nexport default function StyledCard({\n  className,\n  overline,\n  title,\n  imageSource,\n  bodyContent,\n  primaryButton,\n  primaryLink,\n  secondaryAction,\n}: StyledCardProps) {\n  const classes = useStyles();\n\n  return (\n    <Card className={clsx(className, classes.root)}>\n      <Grid\n        container\n        direction=\"column\"\n        wrap=\"nowrap\"\n        className={classes.container}\n      >\n        <Grid item xs>\n          <CardContent className={clsx(classes.container, classes.cardContent)}>\n            <Grid\n              container\n              direction=\"column\"\n              wrap=\"nowrap\"\n              className={classes.container}\n            >\n              <Grid item>\n                <Grid container className={classes.headerSection} spacing={3}>\n                  <Grid item xs>\n                    {overline && (\n                      <Typography\n                        variant=\"overline\"\n                        className={classes.overline}\n                      >\n                        {overline}\n                      </Typography>\n                    )}\n                    {title && (\n                      <Typography variant=\"h5\" className={classes.title}>\n                        {title}\n                      </Typography>\n                    )}\n                  </Grid>\n\n                  {imageSource && (\n                    <Grid item>\n                      <CardMedia\n                        className={classes.image}\n                        image={imageSource}\n                        title={title}\n                      />\n                    </Grid>\n                  )}\n                </Grid>\n              </Grid>\n\n              <Grid item xs>\n                {bodyContent && Array.isArray(bodyContent) ? (\n                  <Grid\n                    container\n                    direction=\"column\"\n                    wrap=\"nowrap\"\n                    justify=\"space-between\"\n                  >\n                    {bodyContent.map(element => (\n                      <Grid item>{element}</Grid>\n                    ))}\n                  </Grid>\n                ) : (\n                  bodyContent\n                )}\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Grid>\n\n        <Grid item>\n          <Divider className={classes.divider} />\n          <CardActions className={classes.cardActions}>\n            {primaryButton && <Button color=\"primary\" {...primaryButton} />}\n            {primaryLink && (\n              <Button\n                color=\"primary\"\n                component={Link}\n                to={primaryLink.to}\n                children={primaryLink.children || primaryLink.label}\n                endIcon={<GoIcon />}\n              />\n            )}\n\n            {secondaryAction}\n          </CardActions>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}