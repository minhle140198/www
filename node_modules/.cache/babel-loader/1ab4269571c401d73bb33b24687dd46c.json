{"ast":null,"code":"import _slicedToArray from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{db}from\"../firebase\";import{useEffect,useReducer}from\"react\";export var DocActions;(function(DocActions){DocActions[DocActions[\"update\"]=0]=\"update\";DocActions[DocActions[\"delete\"]=1]=\"delete\";})(DocActions||(DocActions={}));var documentReducer=function documentReducer(prevState,newProps){switch(newProps.action){case DocActions.update:// takes data object form the dispatcher and updates doc\nprevState.ref.update(_objectSpread({},newProps.data));return _objectSpread({},prevState,{doc:_objectSpread({},prevState.doc,{},newProps.data)});case DocActions.delete:prevState.ref.delete();return null;default:return _objectSpread({},prevState,{},newProps);}};var documentIntialState={path:null,prevPath:null,doc:null,ref:null,loading:true};var useDoc=function useDoc(intialOverrides){var _useReducer=useReducer(documentReducer,_objectSpread({},documentIntialState,{},intialOverrides)),_useReducer2=_slicedToArray(_useReducer,2),documentState=_useReducer2[0],documentDispatch=_useReducer2[1];var setDocumentListner=function setDocumentListner(){documentDispatch({prevPath:documentState.path});var unsubscribe=db.doc(documentState.path).onSnapshot(function(snapshot){if(snapshot.exists){var data=snapshot.data();var id=snapshot.id;var doc=_objectSpread({},data,{id:id});documentDispatch({doc:doc,ref:snapshot.ref,loading:false});}else{documentDispatch({loading:false});}});documentDispatch({unsubscribe:unsubscribe});};useEffect(function(){var path=documentState.path,prevPath=documentState.prevPath,unsubscribe=documentState.unsubscribe;if(path&&path!==prevPath){if(unsubscribe)unsubscribe();setDocumentListner();}},[documentState]);useEffect(function(){return function(){if(documentState.unsubscribe)documentState.unsubscribe();};},[]);return[documentState,documentDispatch];};export default useDoc;","map":{"version":3,"sources":["/Users/monsama/firetable/www/src/hooks/useDoc.ts"],"names":["db","useEffect","useReducer","DocActions","documentReducer","prevState","newProps","action","update","ref","data","doc","delete","documentIntialState","path","prevPath","loading","useDoc","intialOverrides","documentState","documentDispatch","setDocumentListner","unsubscribe","onSnapshot","snapshot","exists","id"],"mappings":"qSAAA,OAASA,EAAT,KAAmB,aAAnB,CACA,OAASC,SAAT,CAAoBC,UAApB,KAAsC,OAAtC,CAEA,UAAYC,CAAAA,UAAZ,C,UAAYA,U,EAAAA,U,CAAAA,U,uBAAAA,U,CAAAA,U,0BAAAA,U,GAAAA,U,MAIZ,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,SAAD,CAAiBC,QAAjB,CAAmC,CACzD,OAAQA,QAAQ,CAACC,MAAjB,EACE,IAAKJ,CAAAA,UAAU,CAACK,MAAhB,CACE;AACAH,SAAS,CAACI,GAAV,CAAcD,MAAd,kBAA0BF,QAAQ,CAACI,IAAnC,GACA,wBAAYL,SAAZ,EAAuBM,GAAG,kBAAON,SAAS,CAACM,GAAjB,IAAyBL,QAAQ,CAACI,IAAlC,CAA1B,GACF,IAAKP,CAAAA,UAAU,CAACS,MAAhB,CACEP,SAAS,CAACI,GAAV,CAAcG,MAAd,GACA,MAAO,KAAP,CACF,QACE,wBAAYP,SAAZ,IAA0BC,QAA1B,EATJ,CAWD,CAZD,CAaA,GAAMO,CAAAA,mBAAmB,CAAG,CAC1BC,IAAI,CAAE,IADoB,CAE1BC,QAAQ,CAAE,IAFgB,CAG1BJ,GAAG,CAAE,IAHqB,CAI1BF,GAAG,CAAE,IAJqB,CAK1BO,OAAO,CAAE,IALiB,CAA5B,CAQA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,eAAD,CAA0B,iBACGhB,UAAU,CAACE,eAAD,kBAC/CS,mBAD+C,IAE/CK,eAF+C,EADb,4CAChCC,aADgC,iBACjBC,gBADiB,iBAKvC,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/BD,gBAAgB,CAAC,CAAEL,QAAQ,CAAEI,aAAa,CAACL,IAA1B,CAAD,CAAhB,CACA,GAAMQ,CAAAA,WAAW,CAAGtB,EAAE,CAACW,GAAH,CAAOQ,aAAa,CAACL,IAArB,EAA2BS,UAA3B,CAAsC,SAAAC,QAAQ,CAAI,CACpE,GAAIA,QAAQ,CAACC,MAAb,CAAqB,CACnB,GAAMf,CAAAA,IAAI,CAAGc,QAAQ,CAACd,IAAT,EAAb,CAEA,GAAMgB,CAAAA,EAAE,CAAGF,QAAQ,CAACE,EAApB,CACA,GAAMf,CAAAA,GAAG,kBAAQD,IAAR,EAAcgB,EAAE,CAAFA,EAAd,EAAT,CACAN,gBAAgB,CAAC,CACfT,GAAG,CAAHA,GADe,CAEfF,GAAG,CAAEe,QAAQ,CAACf,GAFC,CAGfO,OAAO,CAAE,KAHM,CAAD,CAAhB,CAKD,CAVD,IAUO,CACLI,gBAAgB,CAAC,CACfJ,OAAO,CAAE,KADM,CAAD,CAAhB,CAGD,CACF,CAhBmB,CAApB,CAiBAI,gBAAgB,CAAC,CAAEE,WAAW,CAAXA,WAAF,CAAD,CAAhB,CACD,CApBD,CAqBArB,SAAS,CAAC,UAAM,IACNa,CAAAA,IADM,CAC0BK,aAD1B,CACNL,IADM,CACAC,QADA,CAC0BI,aAD1B,CACAJ,QADA,CACUO,WADV,CAC0BH,aAD1B,CACUG,WADV,CAEd,GAAIR,IAAI,EAAIA,IAAI,GAAKC,QAArB,CAA+B,CAC7B,GAAIO,WAAJ,CAAiBA,WAAW,GAC5BD,kBAAkB,GACnB,CACF,CANQ,CAMN,CAACF,aAAD,CANM,CAAT,CAOAlB,SAAS,CACP,iBAAM,WAAM,CACV,GAAIkB,aAAa,CAACG,WAAlB,CAA+BH,aAAa,CAACG,WAAd,GAChC,CAFD,EADO,CAIP,EAJO,CAAT,CAMA,MAAO,CAACH,aAAD,CAAgBC,gBAAhB,CAAP,CACD,CAxCD,CA0CA,cAAeH,CAAAA,MAAf","sourcesContent":["import { db } from \"../firebase\";\nimport { useEffect, useReducer } from \"react\";\n\nexport enum DocActions {\n  update,\n  delete,\n}\nconst documentReducer = (prevState: any, newProps: any) => {\n  switch (newProps.action) {\n    case DocActions.update:\n      // takes data object form the dispatcher and updates doc\n      prevState.ref.update({ ...newProps.data });\n      return { ...prevState, doc: { ...prevState.doc, ...newProps.data } };\n    case DocActions.delete:\n      prevState.ref.delete();\n      return null;\n    default:\n      return { ...prevState, ...newProps };\n  }\n};\nconst documentIntialState = {\n  path: null,\n  prevPath: null,\n  doc: null,\n  ref: null,\n  loading: true,\n};\n\nconst useDoc = (intialOverrides: any) => {\n  const [documentState, documentDispatch] = useReducer(documentReducer, {\n    ...documentIntialState,\n    ...intialOverrides,\n  });\n  const setDocumentListner = () => {\n    documentDispatch({ prevPath: documentState.path });\n    const unsubscribe = db.doc(documentState.path).onSnapshot(snapshot => {\n      if (snapshot.exists) {\n        const data = snapshot.data();\n\n        const id = snapshot.id;\n        const doc = { ...data, id };\n        documentDispatch({\n          doc,\n          ref: snapshot.ref,\n          loading: false,\n        });\n      } else {\n        documentDispatch({\n          loading: false,\n        });\n      }\n    });\n    documentDispatch({ unsubscribe });\n  };\n  useEffect(() => {\n    const { path, prevPath, unsubscribe } = documentState;\n    if (path && path !== prevPath) {\n      if (unsubscribe) unsubscribe();\n      setDocumentListner();\n    }\n  }, [documentState]);\n  useEffect(\n    () => () => {\n      if (documentState.unsubscribe) documentState.unsubscribe();\n    },\n    []\n  );\n  return [documentState, documentDispatch];\n};\n\nexport default useDoc;\n"]},"metadata":{},"sourceType":"module"}