{"ast":null,"code":"import _slicedToArray from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import EditorContext from\"../contexts/editorContext\";export var EditorProvider=function EditorProvider(_ref){var children=_ref.children;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),fieldType=_useState2[0],setFieldType=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),props=_useState4[0],setProps=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),editorValue=_useState6[0],setEditorValue=_useState6[1];var close=function close(){if(editorValue!==props.value){props.onSubmit(editorValue);}setEditorValue(null);setFieldType(null);setProps(null);};var cancel=function cancel(){setEditorValue(null);setFieldType(null);setProps(null);};var open=function open(props,type){setFieldType(type);setProps(props);setEditorValue(props.value);};return React.createElement(EditorContext.Provider,{value:{cancel:cancel,close:close,open:open,fieldType:fieldType,editorValue:editorValue,setEditorValue:setEditorValue}},children);};","map":{"version":3,"sources":["/Users/monsama/firetable/www/src/util/EditorProvider.tsx"],"names":["React","useState","EditorContext","EditorProvider","children","fieldType","setFieldType","props","setProps","editorValue","setEditorValue","close","value","onSubmit","cancel","open","type"],"mappings":"mJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,aAAP,KAA0B,2BAA1B,CAMA,MAAO,IAAMC,CAAAA,cAA8C,CAAG,QAAjDA,CAAAA,cAAiD,MAExD,IADJC,CAAAA,QACI,MADJA,QACI,eAC8BH,QAAQ,CAAmB,IAAnB,CADtC,wCACGI,SADH,eACcC,YADd,8BAEsBL,QAAQ,EAF9B,yCAEGM,KAFH,eAEUC,QAFV,8BAGkCP,QAAQ,CAAgB,IAAhB,CAH1C,yCAGGQ,WAHH,eAGgBC,cAHhB,eAIJ,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClB,GAAIF,WAAW,GAAKF,KAAK,CAACK,KAA1B,CAAiC,CAC/BL,KAAK,CAACM,QAAN,CAAeJ,WAAf,EACD,CACDC,cAAc,CAAC,IAAD,CAAd,CACAJ,YAAY,CAAC,IAAD,CAAZ,CACAE,QAAQ,CAAC,IAAD,CAAR,CACD,CAPD,CAQA,GAAMM,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBJ,cAAc,CAAC,IAAD,CAAd,CACAJ,YAAY,CAAC,IAAD,CAAZ,CACAE,QAAQ,CAAC,IAAD,CAAR,CACD,CAJD,CAKA,GAAMO,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CACXR,KADW,CAQXS,IARW,CASR,CACHV,YAAY,CAACU,IAAD,CAAZ,CACAR,QAAQ,CAACD,KAAD,CAAR,CACAG,cAAc,CAACH,KAAK,CAACK,KAAP,CAAd,CACD,CAbD,CAcA,MACE,qBAAC,aAAD,CAAe,QAAf,EACE,KAAK,CAAE,CACLE,MAAM,CAANA,MADK,CAELH,KAAK,CAALA,KAFK,CAGLI,IAAI,CAAJA,IAHK,CAILV,SAAS,CAATA,SAJK,CAKLI,WAAW,CAAXA,WALK,CAMLC,cAAc,CAAdA,cANK,CADT,EAUGN,QAVH,CADF,CAcD,CA/CM","sourcesContent":["import React, { useState } from \"react\";\nimport EditorContext from \"../contexts/editorContext\";\nimport { FieldType } from \"../components/Fields\";\n\ninterface IEditorProviderProps {\n  children: React.ReactNode;\n}\nexport const EditorProvider: React.FC<IEditorProviderProps> = ({\n  children,\n}) => {\n  const [fieldType, setFieldType] = useState<FieldType | null>(null);\n  const [props, setProps] = useState<any>();\n  const [editorValue, setEditorValue] = useState<null | string>(null);\n  const close = () => {\n    if (editorValue !== props.value) {\n      props.onSubmit(editorValue);\n    }\n    setEditorValue(null);\n    setFieldType(null);\n    setProps(null);\n  };\n  const cancel = () => {\n    setEditorValue(null);\n    setFieldType(null);\n    setProps(null);\n  };\n  const open = (\n    props: {\n      row: any;\n      onSubmit: any;\n      fieldName: string;\n      value: string;\n      anchorEl: any;\n    },\n    type: FieldType\n  ) => {\n    setFieldType(type);\n    setProps(props);\n    setEditorValue(props.value);\n  };\n  return (\n    <EditorContext.Provider\n      value={{\n        cancel,\n        close,\n        open,\n        fieldType,\n        editorValue,\n        setEditorValue,\n      }}\n    >\n      {children}\n    </EditorContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}