{"ast":null,"code":"import _toConsumableArray from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{createStyles,makeStyles}from\"@material-ui/core/styles\";import Chip from\"@material-ui/core/Chip\";import TextField from\"@material-ui/core/TextField\";import Grid from\"@material-ui/core/Grid\";import AddIcon from\"@material-ui/icons/AddCircle\";import IconButton from\"@material-ui/core/IconButton\";import InputAdornment from\"@material-ui/core/InputAdornment\";var useStyles=makeStyles(function(Theme){return createStyles({root:{},field:{width:\"100%\"},chipsContainer:{display:\"flex\",justifyContent:\"center\",flexWrap:\"wrap\",maxWidth:300,padding:Theme.spacing(1)},chip:{margin:Theme.spacing(0.5)}});});export default function SelectOptionsInput(props){var options=props.options,setValue=props.setValue;var classes=useStyles();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),newOption=_useState2[0],setNewOption=_useState2[1];var handleAdd=function handleAdd(){// setOptions([...options, newOption]);\nif(newOption!==\"\"){setValue(\"options\",[].concat(_toConsumableArray(options),[newOption]));setNewOption(\"\");}};var handleDelete=function handleDelete(optionToDelete){return function(){var newOptions=options.filter(function(option){return option!==optionToDelete;});setValue(\"options\",newOptions);};};useEffect(function(){setValue({data:{options:options}});},[options]);return React.createElement(Grid,{container:true,direction:\"column\",className:classes.root},React.createElement(Grid,{item:true},React.createElement(TextField,{value:newOption,className:classes.field,label:\"New Option\",onChange:function onChange(e){setNewOption(e.target.value);},onKeyPress:function onKeyPress(e){if(e.key===\"Enter\"){handleAdd();}},InputProps:{endAdornment:React.createElement(InputAdornment,{position:\"end\"},React.createElement(IconButton,{edge:\"end\",\"aria-label\":\"toggle password visibility\",onClick:function onClick(e){handleAdd();}},React.createElement(AddIcon,null)))}})),React.createElement(Grid,{item:true,className:classes.chipsContainer},options.map(function(option){return React.createElement(Chip,{key:option,label:option,onDelete:handleDelete(option),className:classes.chip});})));}","map":{"version":3,"sources":["/Users/monsama/firetable/www/src/components/Table/ColumnEditor/SelectOptionsInput.tsx"],"names":["React","useEffect","useState","createStyles","makeStyles","Chip","TextField","Grid","AddIcon","IconButton","InputAdornment","useStyles","Theme","root","field","width","chipsContainer","display","justifyContent","flexWrap","maxWidth","padding","spacing","chip","margin","SelectOptionsInput","props","options","setValue","classes","newOption","setNewOption","handleAdd","handleDelete","optionToDelete","newOptions","filter","option","data","e","target","value","key","endAdornment","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport _includes from \"lodash/includes\";\nimport _camelCase from \"lodash/camelCase\";\n\nimport AddIcon from \"@material-ui/icons/AddCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nconst useStyles = makeStyles(Theme =>\n  createStyles({\n    root: {},\n    field: {\n      width: \"100%\",\n    },\n    chipsContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexWrap: \"wrap\",\n      maxWidth: 300,\n      padding: Theme.spacing(1),\n    },\n    chip: {\n      margin: Theme.spacing(0.5),\n    },\n  })\n);\n\nexport default function SelectOptionsInput(props: any) {\n  const { options, setValue } = props;\n  const classes = useStyles();\n  const [newOption, setNewOption] = useState(\"\");\n  const handleAdd = () => {\n    // setOptions([...options, newOption]);\n    if (newOption !== \"\") {\n      setValue(\"options\", [...options, newOption]);\n      setNewOption(\"\");\n    }\n  };\n  const handleDelete = (optionToDelete: string) => () => {\n    const newOptions = options.filter(\n      (option: string) => option !== optionToDelete\n    );\n    setValue(\"options\", newOptions);\n  };\n\n  useEffect(() => {\n    setValue({ data: { options } });\n  }, [options]);\n\n  return (\n    <Grid container direction=\"column\" className={classes.root}>\n      <Grid item>\n        <TextField\n          value={newOption}\n          className={classes.field}\n          label=\"New Option\"\n          onChange={e => {\n            setNewOption(e.target.value);\n          }}\n          onKeyPress={(e: any) => {\n            if (e.key === \"Enter\") {\n              handleAdd();\n            }\n          }}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"toggle password visibility\"\n                  onClick={(e: any) => {\n                    handleAdd();\n                  }}\n                >\n                  {<AddIcon />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Grid>\n      <Grid item className={classes.chipsContainer}>\n        {options.map((option: string) => {\n          return (\n            <Chip\n              key={option}\n              label={option}\n              onDelete={handleDelete(option)}\n              className={classes.chip}\n            />\n          );\n        })}\n      </Grid>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}