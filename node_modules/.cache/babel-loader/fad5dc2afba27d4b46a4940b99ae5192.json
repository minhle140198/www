{"ast":null,"code":"import _slicedToArray from\"/Users/monsama/firetable/www/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Button from\"@material-ui/core/Button\";import Dialog from\"@material-ui/core/Dialog\";import DialogActions from\"@material-ui/core/DialogActions\";import DialogContent from\"@material-ui/core/DialogContent\";import DialogContentText from\"@material-ui/core/DialogContentText\";import DialogTitle from\"@material-ui/core/DialogTitle\";import TextField from\"@material-ui/core/TextField\";import{makeStyles,createStyles}from\"@material-ui/core/styles\";var useStyles=makeStyles(function(theme){return createStyles({root:{display:\"flex\",flexWrap:\"wrap\"},dryWrapper:{},dryField:{}});});var Confirmation=function Confirmation(props){var children=props.children,message=props.message,confirmationCommand=props.confirmationCommand;var classes=useStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showDialog=_useState2[0],setShowDialog=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),dryText=_useState4[0],setDryText=_useState4[1];var handleClose=function handleClose(){setShowDialog(false);};//Gets the function of the wrapped button to use for execution on conformation\nvar confirmHandler=children.props.onChange||children.props.onClick;var button=React.cloneElement(children,{onClick:function onClick(){setShowDialog(true);},onChange:function onChange(){setShowDialog(true);}});return React.createElement(React.Fragment,null,button,React.createElement(Dialog,{open:showDialog,onClose:handleClose},React.createElement(DialogTitle,null,message&&message.title||\"Are you sure?\"),message&&React.createElement(DialogContent,null,message.customBody,message.body&&React.createElement(DialogContentText,null,message.body),confirmationCommand&&React.createElement(\"div\",{className:classes.dryWrapper},React.createElement(DialogContentText,null,\"Type \",confirmationCommand,\" below to continue:\"),React.createElement(TextField,{value:dryText,variant:\"filled\",onChange:function onChange(e){setDryText(e.target.value);},className:classes.dryField,InputProps:{disableUnderline:true},autoFocus:true,margin:\"dense\",label:confirmationCommand,fullWidth:true}))),React.createElement(DialogActions,null,React.createElement(Button,{onClick:handleClose,color:\"primary\"},message&&message.cancel||\"Cancel\"),React.createElement(Button,{onClick:function onClick(){confirmHandler();handleClose();},color:\"primary\",variant:\"contained\",autoFocus:true,disabled:confirmationCommand?dryText!==confirmationCommand:false},message&&message.confirm||\"Confirm\"))));};export default Confirmation;","map":{"version":3,"sources":["/Users/monsama/firetable/www/src/components/Confirmation.tsx"],"names":["React","useState","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","makeStyles","createStyles","useStyles","theme","root","display","flexWrap","dryWrapper","dryField","Confirmation","props","children","message","confirmationCommand","classes","showDialog","setShowDialog","dryText","setDryText","handleClose","confirmHandler","onChange","onClick","button","cloneElement","title","customBody","body","e","target","value","disableUnderline","cancel","confirm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    dryWrapper: {},\n    dryField: {},\n  })\n);\n\ninterface Props {\n  children: JSX.Element;\n  message?: {\n    title?: string;\n    customBody?: string;\n    body?: string;\n    cancel?: string;\n    confirm?: string | JSX.Element;\n  };\n  confirmationCommand?: string;\n}\nconst Confirmation = (props: Props) => {\n  const { children, message, confirmationCommand } = props;\n  const classes = useStyles();\n  const [showDialog, setShowDialog] = useState(false);\n  const [dryText, setDryText] = useState(\"\");\n\n  const handleClose = () => {\n    setShowDialog(false);\n  };\n  //Gets the function of the wrapped button to use for execution on conformation\n  const confirmHandler = children.props.onChange || children.props.onClick;\n  const button = React.cloneElement(children, {\n    onClick: () => {\n      setShowDialog(true);\n    },\n    onChange: () => {\n      setShowDialog(true);\n    },\n  });\n\n  return (\n    <>\n      {button}\n      <Dialog open={showDialog} onClose={handleClose}>\n        <DialogTitle>\n          {(message && message.title) || \"Are you sure?\"}\n        </DialogTitle>\n        {message && (\n          <DialogContent>\n            {message.customBody}\n            {message.body && (\n              <DialogContentText>{message.body}</DialogContentText>\n            )}\n            {confirmationCommand && (\n              <div className={classes.dryWrapper}>\n                <DialogContentText>\n                  Type {confirmationCommand} below to continue:\n                </DialogContentText>\n                <TextField\n                  value={dryText}\n                  variant=\"filled\"\n                  onChange={e => {\n                    setDryText(e.target.value);\n                  }}\n                  className={classes.dryField}\n                  InputProps={{ disableUnderline: true }}\n                  autoFocus\n                  margin=\"dense\"\n                  label={confirmationCommand}\n                  fullWidth\n                />\n              </div>\n            )}\n          </DialogContent>\n        )}\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            {(message && message.cancel) || \"Cancel\"}\n          </Button>\n          <Button\n            onClick={() => {\n              confirmHandler();\n              handleClose();\n            }}\n            color=\"primary\"\n            variant=\"contained\"\n            autoFocus\n            disabled={\n              confirmationCommand ? dryText !== confirmationCommand : false\n            }\n          >\n            {(message && message.confirm) || \"Confirm\"}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Confirmation;\n"]},"metadata":{},"sourceType":"module"}