{"version":3,"sources":["components/Fields/Number.tsx","../node_modules/use-debounce/esm/useDebouncedCallback.js"],"names":["Number","props","value","onSubmit","useState","localValue","setLocalValue","useEffect","debouncedCallback","callback","delay","options","maxWait","maxWaitHandler","useRef","maxWaitArgs","leading","trailing","undefined","leadingCall","functionTimeoutHandler","isComponentUnmounted","debouncedFunction","current","cancelDebouncedCallback","useCallback","clearTimeout","args","_i","arguments","length","apply","setTimeout","shouldCallFunction","useDebouncedCallback","includes","parseFloat","parseInt","TextField","type","onChange","e","target"],"mappings":"yJAmCeA,UA9BA,SAACC,GAAgB,IACtBC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SADc,EAGOC,mBAASF,GAHhB,mBAGtBG,EAHsB,KAGVC,EAHU,KAK7BC,qBAAU,WACJL,IAAUG,GAAYG,EAAkBH,KAC3C,CAACA,IAPyB,MCJhB,SAA8BI,EAAUC,EAAOC,QAC1C,IAAZA,IAAsBA,EAAU,IACpC,IAAIC,EAAUD,EAAQC,QAClBC,EAAiBC,iBAAO,MACxBC,EAAcD,iBAAO,IACrBE,EAAUL,EAAQK,QAClBC,OAAgCC,IAArBP,EAAQM,UAAgCN,EAAQM,SAC3DE,EAAcL,kBAAO,GACrBM,EAAyBN,iBAAO,MAChCO,EAAuBP,kBAAO,GAC9BQ,EAAoBR,iBAAOL,GAC/Ba,EAAkBC,QAAUd,EAC5B,IAAIe,EAA0BC,uBAAY,WACtCC,aAAaN,EAAuBG,SACpCG,aAAab,EAAeU,SAC5BV,EAAeU,QAAU,KACzBR,EAAYQ,QAAU,GACtBH,EAAuBG,QAAU,KACjCJ,EAAYI,SAAU,IACvB,IAgDH,OA/CAhB,qBAAU,WAAc,OAAO,WAE3Bc,EAAqBE,SAAU,KAC7B,IA4CC,CA3CiBE,uBAAY,WAEhC,IADA,IAAIE,EAAO,GACFC,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACpCD,EAAKC,GAAMC,UAAUD,GAEzBb,EAAYQ,QAAUI,EACtBD,aAAaN,EAAuBG,SAChCJ,EAAYI,UACZJ,EAAYI,SAAU,GAErBH,EAAuBG,UAAWP,GAAYG,EAAYI,UAC3DD,EAAkBC,QAAQQ,MAAMT,EAAmBK,GACnDR,EAAYI,SAAU,GAE1BH,EAAuBG,QAAUS,YAAW,WACxC,IAAIC,GAAqB,EACrBjB,GAAWG,EAAYI,UACvBU,GAAqB,GAEzBT,KACKH,EAAqBE,SAAWN,GAAYgB,GAC7CX,EAAkBC,QAAQQ,MAAMT,EAAmBK,KAExDjB,GACCE,IAAYC,EAAeU,SAAWN,IACtCJ,EAAeU,QAAUS,YAAW,WAChC,IAAIL,EAAOZ,EAAYQ,QACvBC,IACKH,EAAqBE,SACtBD,EAAkBC,QAAQQ,MAAM,KAAMJ,KAE3Cf,MAER,CAACA,EAASF,EAAOc,EAAyBR,EAASC,IAU3BO,EATT,WAETJ,EAAuBG,UAG5BD,EAAkBC,QAAQQ,MAAM,KAAMhB,EAAYQ,SAClDC,ODlDsBU,EAC1B,SAAAhC,GACMA,EAAMiC,SAAS,KACjBhC,EAASiC,WAAWlC,IACfC,EAASkC,SAASnC,MAG3B,MAPKM,EAVsB,oBAmB7B,OACE,kBAAC8B,EAAA,EAAD,CACEC,KAAK,SACLrC,MAAOG,EACPmC,SAAU,SAAAC,GACRnC,EAAcmC,EAAEC,OAAOxC","file":"static/js/29.c96b3db1.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport useDebounce, { useDebouncedCallback } from \"use-debounce\";\nimport TextField from \"@material-ui/core/TextField\";\n\n// TODO: Create an interface for props\nconst Number = (props: any) => {\n  const { value, onSubmit } = props;\n\n  const [localValue, setLocalValue] = useState(value);\n\n  useEffect(() => {\n    if (value !== localValue) debouncedCallback(localValue);\n  }, [localValue]);\n\n  // Debounce callback\n  const [debouncedCallback] = useDebouncedCallback(\n    value => {\n      if (value.includes(\".\")) {\n        onSubmit(parseFloat(value));\n      } else onSubmit(parseInt(value));\n    },\n    // delay in ms\n    1100\n  );\n  return (\n    <TextField\n      type=\"number\"\n      value={localValue}\n      onChange={e => {\n        setLocalValue(e.target.value);\n      }}\n    />\n  );\n  // else return <p>{cellData}</p>;\n};\nexport default Number;\n","import { useRef, useCallback, useEffect } from 'react';\nexport default function useDebouncedCallback(callback, delay, options) {\n    if (options === void 0) { options = {}; }\n    var maxWait = options.maxWait;\n    var maxWaitHandler = useRef(null);\n    var maxWaitArgs = useRef([]);\n    var leading = options.leading;\n    var trailing = options.trailing === undefined ? true : options.trailing;\n    var leadingCall = useRef(false);\n    var functionTimeoutHandler = useRef(null);\n    var isComponentUnmounted = useRef(false);\n    var debouncedFunction = useRef(callback);\n    debouncedFunction.current = callback;\n    var cancelDebouncedCallback = useCallback(function () {\n        clearTimeout(functionTimeoutHandler.current);\n        clearTimeout(maxWaitHandler.current);\n        maxWaitHandler.current = null;\n        maxWaitArgs.current = [];\n        functionTimeoutHandler.current = null;\n        leadingCall.current = false;\n    }, []);\n    useEffect(function () { return function () {\n        // we use flag, as we allow to call callPending outside the hook\n        isComponentUnmounted.current = true;\n    }; }, []);\n    var debouncedCallback = useCallback(function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        maxWaitArgs.current = args;\n        clearTimeout(functionTimeoutHandler.current);\n        if (leadingCall.current) {\n            leadingCall.current = false;\n        }\n        if (!functionTimeoutHandler.current && leading && !leadingCall.current) {\n            debouncedFunction.current.apply(debouncedFunction, args);\n            leadingCall.current = true;\n        }\n        functionTimeoutHandler.current = setTimeout(function () {\n            var shouldCallFunction = true;\n            if (leading && leadingCall.current) {\n                shouldCallFunction = false;\n            }\n            cancelDebouncedCallback();\n            if (!isComponentUnmounted.current && trailing && shouldCallFunction) {\n                debouncedFunction.current.apply(debouncedFunction, args);\n            }\n        }, delay);\n        if (maxWait && !maxWaitHandler.current && trailing) {\n            maxWaitHandler.current = setTimeout(function () {\n                var args = maxWaitArgs.current;\n                cancelDebouncedCallback();\n                if (!isComponentUnmounted.current) {\n                    debouncedFunction.current.apply(null, args);\n                }\n            }, maxWait);\n        }\n    }, [maxWait, delay, cancelDebouncedCallback, leading, trailing]);\n    var callPending = function () {\n        // Call pending callback only if we have anything in our queue\n        if (!functionTimeoutHandler.current) {\n            return;\n        }\n        debouncedFunction.current.apply(null, maxWaitArgs.current);\n        cancelDebouncedCallback();\n    };\n    // At the moment, we use 3 args array so that we save backward compatibility\n    return [debouncedCallback, cancelDebouncedCallback, callPending];\n}\n"],"sourceRoot":""}