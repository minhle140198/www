{"version":3,"sources":["hooks/useFiretable/useUploader.ts","components/Fields/Image.tsx","../node_modules/@material-ui/icons/AddAPhoto.js"],"names":["initialState","progress","uploadReducer","prevState","newProps","useUploader","useReducer","uploaderState","uploaderDispatch","docRef","fieldName","files","previousValue","forEach","file","uploadTask","bucket","ref","path","name","put","on","firebase","storage","TaskEvent","STATE_CHANGED","snapshot","bytesTransferred","totalBytes","console","log","state","TaskState","PAUSED","RUNNING","error","code","getDownloadURL","then","downloadURL","update","type","lastModifiedTS","lastModified","useStyles","makeStyles","theme","createStyles","root","display","alignContent","width","uploadingContainer","flexDirection","justifyContent","margin","spacing","imgHover","borderStyle","borderColor","addIcon","maxHeight","Image","props","classes","value","row","onSubmit","upload","useState","localImage","setLocalImage","onDrop","useCallback","acceptedFiles","imageFile","url","URL","createObjectURL","useDropzone","multiple","accept","getRootProps","getInputProps","dropzoneProps","isDragActive","push","className","onClick","map","title","key","message","body","confirm","e","index","_findIndex","splice","style","padding","rowHeight","height","src","size","variant","color","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","Fragment","id","d"],"mappings":"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","file":"static/js/17.9d7370b4.chunk.js","sourcesContent":["import { useReducer } from \"react\";\nimport { bucket } from \"../../firebase/index\";\n\nimport firebase from \"firebase/app\";\nconst initialState = { progress: 0 };\nconst uploadReducer = (prevState: any, newProps: any) => {\n  return { ...prevState, ...newProps };\n};\nconst useUploader = () => {\n  const [uploaderState, uploaderDispatch] = useReducer(uploadReducer, {\n    ...initialState,\n  });\n\n  const upload = (\n    docRef: firebase.firestore.DocumentReference,\n    fieldName: string,\n    files: File[],\n    previousValue?: any\n  ) => {\n    files.forEach(file => {\n      const storageRef = bucket.ref(`${docRef.path}/${fieldName}/${file.name}`);\n      var uploadTask = storageRef.put(file);\n      uploadTask.on(\n        firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\n        function(snapshot: any) {\n          // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n          var progress =\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          uploaderDispatch({ progress });\n          console.log(\"Upload is \" + progress + \"% done\");\n          switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED: // or 'paused'\n              console.log(\"Upload is paused\");\n              break;\n            case firebase.storage.TaskState.RUNNING: // or 'running'\n              console.log(\"Upload is running\");\n              break;\n          }\n        },\n        function(error: any) {\n          // A full list of error codes is available at\n          // https://firebase.google.com/docs/storage/web/handle-errors\n          switch (error.code) {\n            case \"storage/unauthorized\":\n              // User doesn't have permission to access the object\n              break;\n\n            case \"storage/canceled\":\n              // User canceled the upload\n              break;\n            case \"storage/unknown\":\n              // Unknown error occurred, inspect error.serverResponse\n              break;\n          }\n        },\n        function() {\n          // Upload completed successfully, now we can get the download URL\n          uploadTask.snapshot.ref\n            .getDownloadURL()\n            .then(function(downloadURL: string) {\n              console.log(\"File available at\", downloadURL);\n              if (previousValue) {\n                docRef.update({\n                  [fieldName]: [\n                    ...previousValue,\n                    {\n                      downloadURL,\n                      name: file.name,\n                      type: file.type,\n                      lastModifiedTS: file.lastModified,\n                    },\n                  ],\n                });\n              } else {\n                docRef.update({\n                  [fieldName]: [\n                    {\n                      downloadURL,\n                      name: file.name,\n                      type: file.type,\n                      lastModifiedTS: file.lastModified,\n                    },\n                  ],\n                });\n              }\n            });\n        }\n      );\n    });\n  };\n\n  return [uploaderState, upload];\n};\n\nexport default useUploader;\n","import React, { useCallback, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport useUploader from \"../../hooks/useFiretable/useUploader\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport { FieldType } from \".\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddIcon from \"@material-ui/icons/AddAPhoto\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport _findIndex from \"lodash/findIndex\";\nimport { Tooltip } from \"@material-ui/core\";\nimport Confirmation from \"../Confirmation\";\n// TODO:  indicate error state\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      // flexDirection: \"row\",\n      alignContent: \"center\",\n      width: \"100%\",\n    },\n    uploadingContainer: {\n      display: \"flex\",\n      alignContent: \"center\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n    },\n    progress: {\n      margin: theme.spacing(3),\n    },\n    imgHover: {\n      \"&:hover\": {\n        borderStyle: \"solid\",\n        borderColor: \"rgb(255, 0, 0,0.6)\",\n      },\n    },\n    addIcon: {\n      maxHeight: 48,\n    },\n  })\n);\n\ninterface Props {\n  value: any;\n  row: {\n    ref: firebase.firestore.DocumentReference;\n    id: string;\n    rowHeight: number;\n  };\n  onSubmit: Function;\n  fieldType: FieldType;\n  fieldName: string;\n}\n\nconst Image = (props: Props) => {\n  const classes = useStyles();\n  const { fieldName, value, row, onSubmit } = props;\n  const [uploaderState, upload] = useUploader();\n  const { progress } = uploaderState;\n  const [localImage, setLocalImage] = useState<string | null>(null);\n  const onDrop = useCallback(acceptedFiles => {\n    // Do something with the files\n    const imageFile = acceptedFiles[0];\n    if (imageFile) {\n      upload(row.ref, fieldName, [imageFile], value);\n      let url = URL.createObjectURL(imageFile);\n      setLocalImage(url);\n    }\n  }, []);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    multiple: false,\n    accept: [\"image/png\", \"image/jpg\", \"image/jpeg\"],\n  });\n  const dropzoneProps = getRootProps();\n\n  const files = [...value];\n  if (localImage) {\n    files.push({ downloadURL: localImage, name: \"localImage\" });\n  }\n  return (\n    <Grid className={classes.root} {...dropzoneProps} onClick={() => {}}>\n      <input {...getInputProps()} />\n      {value &&\n        files.map((file: { name: string; downloadURL: string }) => (\n          <Tooltip title=\"Click to delete\" key={file.downloadURL}>\n            <Confirmation\n              message={{\n                title: \"Delete Image\",\n                body: \"Are you sure you want to delete this image?\",\n                confirm: (\n                  <>\n                    <DeleteIcon /> Delete\n                  </>\n                ),\n              }}\n            >\n              <div\n                onClick={e => {\n                  const index = _findIndex(value, [\n                    \"downloadURL\",\n                    file.downloadURL,\n                  ]);\n                  value.splice(index, 1);\n                  onSubmit(value);\n                }}\n              >\n                <img\n                  className={classes.imgHover}\n                  key={file.name}\n                  style={{\n                    padding: `${row.rowHeight * 0.03}px`,\n                    height: `${row.rowHeight * 0.95}px`,\n                  }}\n                  src={file.downloadURL}\n                />\n              </div>\n            </Confirmation>\n          </Tooltip>\n        ))}\n      {progress === 0 ? (\n        <IconButton className={classes.addIcon} onClick={dropzoneProps.onClick}>\n          <AddIcon />\n        </IconButton>\n      ) : (\n        <div className={classes.progress}>\n          <CircularProgress\n            size={row.rowHeight * 0.5}\n            variant=\"determinate\"\n            value={progress}\n            color=\"secondary\"\n          />\n        </div>\n      )}\n    </Grid>\n  );\n};\nexport default Image;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"defs\", null, _react.default.createElement(\"path\", {\n  id: \"a\",\n  d: \"M24 24H0V0h24v24z\"\n})), _react.default.createElement(\"path\", {\n  d: \"M3 4V1h2v3h3v2H5v3H3V6H0V4h3zm3 6V7h3V4h7l1.83 2H21c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H5c-1.1 0-2-.9-2-2V10h3zm7 9c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-3.2-5c0 1.77 1.43 3.2 3.2 3.2s3.2-1.43 3.2-3.2-1.43-3.2-3.2-3.2-3.2 1.43-3.2 3.2z\"\n})), 'AddAPhoto');\n\nexports.default = _default;"],"sourceRoot":""}