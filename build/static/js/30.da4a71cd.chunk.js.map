{"version":3,"sources":["../node_modules/@material-ui/lab/esm/internal/svg-icons/Star.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/createSvgIcon.js","../node_modules/@material-ui/lab/esm/Rating/Rating.js","components/Fields/Rating.tsx"],"names":["createSvgIcon","path","displayName","Component","React","memo","forwardRef","props","ref","createElement","SvgIcon","_extends","muiName","d","roundValueToPrecision","value","precision","nearest","Math","round","Number","toFixed","num","decimalPart","toString","split","length","getDecimalPrecision","IconContainer","other","_objectWithoutProperties","defaultIcon","Star","fontSize","defaultLabelText","concat","Rating","classes","className","_props$defaultValue","defaultValue","_props$disabled","disabled","emptyIcon","_props$emptyLabelText","emptyLabelText","_props$getLabelText","getLabelText","_props$icon","icon","_props$IconContainerC","IconContainerComponent","_props$max","max","nameProp","name","onChange","onChangeActive","onMouseLeave","onMouseMove","_props$precision","_props$readOnly","readOnly","_props$size","size","valueProp","_React$useState","useState","defaultName","setDefaultName","useEffect","random","isControlled","useRef","undefined","current","_React$useState2","valueState","setValueState","valueRounded","theme","useTheme","_React$useState3","hover","focus","_React$useState3$","setState","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState4","focusVisible","setFocusVisible","rootRef","handleFocusRef","useForkRef","handleRef","handleChange","event","newValue","parseFloat","target","handleClear","clientX","clientY","handleFocus","newFocus","prev","handleBlur","item","state","labelProps","id","String","replace","container","clsx","filled","iconFilled","iconEmpty","iconHover","iconFocus","active","iconActive","Fragment","key","label","htmlFor","visuallyhidden","onFocus","onBlur","onClick","type","checked","percent","rootNode","_rootNode$getBounding","getBoundingClientRect","right","left","width","firstChild","direction","newHover","min","clamp","root","capitalize","role","Array","from","map","_","index","itemValue","items","decimal","ceil","$","indexDecimal","itemDecimalValue","style","overflow","zIndex","position","defaultChecked","pristine","withStyles","display","typography","pxToRem","color","cursor","WebkitTapHighlightColor","opacity","pointerEvents","outline","sizeSmall","sizeLarge","border","clip","height","margin","padding","top","bottom","transition","transitions","create","duration","shortest","palette","action","transform","row","onSubmit"],"mappings":"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","file":"static/js/30.da4a71cd.chunk.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n}), 'Star');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { useTheme, withStyles } from '@material-ui/core/styles';\nimport { capitalize, useForkRef, useIsFocusVisible } from '@material-ui/core/utils';\nimport Star from '../internal/svg-icons/Star';\n\nfunction clamp(value, min, max) {\n  if (value < min) {\n    return min;\n  }\n\n  if (value > max) {\n    return max;\n  }\n\n  return value;\n}\n\nfunction getDecimalPrecision(num) {\n  var decimalPart = num.toString().split('.')[1];\n  return decimalPart ? decimalPart.length : 0;\n}\n\nfunction roundValueToPrecision(value, precision) {\n  if (value == null) {\n    return value;\n  }\n\n  var nearest = Math.round(value / precision) * precision;\n  return Number(nearest.toFixed(getDecimalPrecision(precision)));\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      position: 'relative',\n      fontSize: theme.typography.pxToRem(24),\n      color: '#ffb400',\n      cursor: 'pointer',\n      WebkitTapHighlightColor: 'transparent',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '&$focusVisible $iconActive': {\n        outline: '1px solid #999'\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      fontSize: theme.typography.pxToRem(18)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      fontSize: theme.typography.pxToRem(30)\n    },\n\n    /* Styles applied to the root element if `readOnly={true}`. */\n    readOnly: {\n      pointerEvents: 'none'\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if keyboard focused. */\n    focusVisible: {},\n\n    /* Visually hide an element. */\n    visuallyhidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      color: '#000',\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1\n    },\n\n    /* Styles applied to the pristine label. */\n    pristine: {\n      'input:focus + &': {\n        top: 0,\n        bottom: 0,\n        position: 'absolute',\n        outline: '1px solid #999',\n        width: '100%'\n      }\n    },\n\n    /* Styles applied to the label elements. */\n    label: {\n      cursor: 'inherit'\n    },\n\n    /* Styles applied to the icon wrapping elements. */\n    icon: {\n      display: 'flex',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest\n      }),\n      // Fix mouseLeave issue.\n      // https://github.com/facebook/react/issues/4492\n      pointerEvents: 'none'\n    },\n\n    /* Styles applied to the icon wrapping elements when empty. */\n    iconEmpty: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the icon wrapping elements when filled. */\n    iconFilled: {},\n\n    /* Styles applied to the icon wrapping elements when hover. */\n    iconHover: {},\n\n    /* Styles applied to the icon wrapping elements when focus. */\n    iconFocus: {},\n\n    /* Styles applied to the icon wrapping elements when active. */\n    iconActive: {\n      transform: 'scale(1.2)'\n    },\n\n    /* Styles applied to the icon wrapping elements when decimals are necessary. */\n    decimal: {\n      position: 'relative'\n    }\n  };\n};\n\nfunction IconContainer(props) {\n  var value = props.value,\n      other = _objectWithoutProperties(props, [\"value\"]);\n\n  return React.createElement(\"span\", other);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? IconContainer.propTypes = {\n  value: PropTypes.number.isRequired\n} : void 0;\nvar defaultIcon = React.createElement(Star, {\n  fontSize: \"inherit\"\n});\n\nfunction defaultLabelText(value) {\n  return \"\".concat(value, \" Star\").concat(value !== 1 ? 's' : '');\n}\n\nvar Rating = React.forwardRef(function Rating(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? null : _props$defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      emptyIcon = props.emptyIcon,\n      _props$emptyLabelText = props.emptyLabelText,\n      emptyLabelText = _props$emptyLabelText === void 0 ? 'Empty' : _props$emptyLabelText,\n      _props$getLabelText = props.getLabelText,\n      getLabelText = _props$getLabelText === void 0 ? defaultLabelText : _props$getLabelText,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$IconContainerC = props.IconContainerComponent,\n      IconContainerComponent = _props$IconContainerC === void 0 ? IconContainer : _props$IconContainerC,\n      _props$max = props.max,\n      max = _props$max === void 0 ? 5 : _props$max,\n      nameProp = props.name,\n      onChange = props.onChange,\n      onChangeActive = props.onChangeActive,\n      onMouseLeave = props.onMouseLeave,\n      onMouseMove = props.onMouseMove,\n      _props$precision = props.precision,\n      precision = _props$precision === void 0 ? 1 : _props$precision,\n      _props$readOnly = props.readOnly,\n      readOnly = _props$readOnly === void 0 ? false : _props$readOnly,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      valueProp = props.value,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"defaultValue\", \"disabled\", \"emptyIcon\", \"emptyLabelText\", \"getLabelText\", \"icon\", \"IconContainerComponent\", \"max\", \"name\", \"onChange\", \"onChangeActive\", \"onMouseLeave\", \"onMouseMove\", \"precision\", \"readOnly\", \"size\", \"value\"]);\n\n  var _React$useState = React.useState(),\n      defaultName = _React$useState[0],\n      setDefaultName = _React$useState[1];\n\n  var name = nameProp || defaultName;\n  React.useEffect(function () {\n    // Fallback to this default id when possible.\n    // Use the random value for client-side rendering only.\n    // We can't use it server-side.\n    setDefaultName(\"mui-rating-\".concat(Math.round(Math.random() * 1e5)));\n  }, []);\n\n  var _React$useRef = React.useRef(valueProp !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState2 = React.useState(defaultValue),\n      valueState = _React$useState2[0],\n      setValueState = _React$useState2[1];\n\n  var valueDerived = isControlled ? valueProp : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (isControlled !== (valueProp !== undefined)) {\n        console.error([\"Material-UI: A component is changing \".concat(isControlled ? 'a ' : 'an un', \"controlled Rating to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', 'Decide between using a controlled or uncontrolled Rating ' + 'element for the lifetime of the component.', 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [valueProp, isControlled]);\n  }\n\n  var valueRounded = roundValueToPrecision(valueDerived, precision);\n  var theme = useTheme();\n\n  var _React$useState3 = React.useState({\n    hover: -1,\n    focus: -1\n  }),\n      _React$useState3$ = _React$useState3[0],\n      hover = _React$useState3$.hover,\n      focus = _React$useState3$.focus,\n      setState = _React$useState3[1];\n\n  var value = valueRounded;\n\n  if (hover !== -1) {\n    value = hover;\n  }\n\n  if (focus !== -1) {\n    value = focus;\n  }\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState4 = React.useState(false),\n      focusVisible = _React$useState4[0],\n      setFocusVisible = _React$useState4[1];\n\n  var rootRef = React.useRef();\n  var handleFocusRef = useForkRef(focusVisibleRef, rootRef);\n  var handleRef = useForkRef(handleFocusRef, ref);\n\n  var handleMouseMove = function handleMouseMove(event) {\n    if (onMouseMove) {\n      onMouseMove(event);\n    }\n\n    var rootNode = rootRef.current;\n\n    var _rootNode$getBounding = rootNode.getBoundingClientRect(),\n        right = _rootNode$getBounding.right,\n        left = _rootNode$getBounding.left;\n\n    var _rootNode$firstChild$ = rootNode.firstChild.getBoundingClientRect(),\n        width = _rootNode$firstChild$.width;\n\n    var percent;\n\n    if (theme.direction === 'rtl') {\n      percent = (right - event.clientX) / (width * max);\n    } else {\n      percent = (event.clientX - left) / (width * max);\n    }\n\n    var newHover = roundValueToPrecision(max * percent + precision / 2, precision);\n    newHover = clamp(newHover, precision, max);\n    setState(function (prev) {\n      return prev.hover === newHover && prev.focus === newHover ? prev : {\n        hover: newHover,\n        focus: newHover\n      };\n    });\n    setFocusVisible(false);\n\n    if (onChangeActive && hover !== newHover) {\n      onChangeActive(event, newHover);\n    }\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    var newHover = -1;\n    setState({\n      hover: newHover,\n      focus: newHover\n    });\n\n    if (onChangeActive && hover !== newHover) {\n      onChangeActive(event, newHover);\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    var newValue = parseFloat(event.target.value);\n\n    if (!isControlled) {\n      setValueState(newValue);\n    }\n\n    if (onChange) {\n      onChange(event, newValue);\n    }\n  };\n\n  var handleClear = function handleClear(event) {\n    // Ignore keyboard events\n    // https://github.com/facebook/react/issues/7407\n    if (event.clientX === 0 && event.clientY === 0) {\n      return;\n    }\n\n    setState({\n      hover: -1,\n      focus: -1\n    });\n\n    if (!isControlled) {\n      setValueState(null);\n    }\n\n    if (onChange && parseFloat(event.target.value) === valueRounded) {\n      onChange(event, null);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    var newFocus = parseFloat(event.target.value);\n    setState(function (prev) {\n      return {\n        hover: prev.hover,\n        focus: newFocus\n      };\n    });\n\n    if (onChangeActive && focus !== newFocus) {\n      onChangeActive(event, newFocus);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (hover !== -1) {\n      return;\n    }\n\n    if (focusVisible !== false) {\n      setFocusVisible(false);\n      onBlurVisible();\n    }\n\n    var newFocus = -1;\n    setState(function (prev) {\n      return {\n        hover: prev.hover,\n        focus: newFocus\n      };\n    });\n\n    if (onChangeActive && focus !== newFocus) {\n      onChangeActive(event, newFocus);\n    }\n  };\n\n  var item = function item(state, labelProps) {\n    var id = \"\".concat(name, \"-\").concat(String(state.value).replace('.', '-'));\n    var container = React.createElement(IconContainerComponent, {\n      value: state.value,\n      className: clsx(classes.icon, state.filled ? classes.iconFilled : classes.iconEmpty, state.hover && classes.iconHover, state.focus && classes.iconFocus, state.active && classes.iconActive)\n    }, emptyIcon && !state.filled ? emptyIcon : icon);\n\n    if (readOnly) {\n      return React.createElement(React.Fragment, {\n        key: state.value\n      }, container);\n    }\n\n    return React.createElement(React.Fragment, {\n      key: state.value\n    }, React.createElement(\"label\", _extends({\n      className: classes.label,\n      htmlFor: id\n    }, labelProps), container, React.createElement(\"span\", {\n      className: classes.visuallyhidden\n    }, getLabelText(state.value))), React.createElement(\"input\", {\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n      onChange: handleChange,\n      onClick: handleClear,\n      disabled: disabled,\n      value: state.value,\n      id: id,\n      type: \"radio\",\n      name: name,\n      checked: state.checked,\n      className: classes.visuallyhidden\n    }));\n  };\n\n  return React.createElement(\"span\", _extends({\n    ref: handleRef,\n    onMouseMove: handleMouseMove,\n    onMouseLeave: handleMouseLeave,\n    className: clsx(classes.root, className, size !== 'medium' && classes[\"size\".concat(capitalize(size))], disabled && classes.disabled, focusVisible && classes.focusVisible, readOnly && classes.readOnly),\n    role: readOnly ? 'img' : null,\n    \"aria-label\": readOnly ? getLabelText(value) : null\n  }, other), Array.from(new Array(max)).map(function (_, index) {\n    var itemValue = index + 1;\n\n    if (precision < 1) {\n      var items = Array.from(new Array(1 / precision));\n      return React.createElement(\"span\", {\n        key: itemValue,\n        className: clsx(classes.decimal, itemValue === Math.ceil(value) && (hover !== -1 || focus !== -1) && classes.iconActive)\n      }, items.map(function ($, indexDecimal) {\n        var itemDecimalValue = roundValueToPrecision(itemValue - 1 + (indexDecimal + 1) * precision, precision);\n        return item({\n          value: itemDecimalValue,\n          filled: itemDecimalValue <= value,\n          hover: itemDecimalValue <= hover,\n          focus: itemDecimalValue <= focus,\n          checked: itemDecimalValue === valueRounded\n        }, {\n          style: items.length - 1 === indexDecimal ? {} : {\n            width: itemDecimalValue === value ? \"\".concat((indexDecimal + 1) * precision * 100, \"%\") : '0%',\n            overflow: 'hidden',\n            zIndex: 1,\n            position: 'absolute'\n          }\n        });\n      }));\n    }\n\n    return item({\n      value: itemValue,\n      active: itemValue === value && (hover !== -1 || focus !== -1),\n      filled: itemValue <= value,\n      hover: itemValue <= hover,\n      focus: itemValue <= focus,\n      checked: itemValue === valueRounded\n    });\n  }), !readOnly && !disabled && valueRounded == null && React.createElement(React.Fragment, null, React.createElement(\"input\", {\n    value: \"\",\n    id: \"\".concat(name, \"-empty\"),\n    type: \"radio\",\n    name: name,\n    defaultChecked: true,\n    className: classes.visuallyhidden\n  }), React.createElement(\"label\", {\n    className: classes.pristine,\n    htmlFor: \"\".concat(name, \"-empty\")\n  }, React.createElement(\"span\", {\n    className: classes.visuallyhidden\n  }, emptyLabelText))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Rating.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.number,\n\n  /**\n   * If `true`, the rating will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when empty.\n   */\n  emptyIcon: PropTypes.node,\n\n  /**\n   * The label read when the rating input is empty.\n   */\n  emptyLabelText: PropTypes.node,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the rating.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   *\n   * @param {number} value The rating label's value to format.\n   * @returns {string}\n   */\n  getLabelText: PropTypes.func,\n\n  /**\n   * The icon to display.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component containing the icon.\n   */\n  IconContainerComponent: PropTypes.elementType,\n\n  /**\n   * Maximum rating.\n   */\n  max: PropTypes.number,\n\n  /**\n   * The name attribute of the radio `input` elements.\n   * If `readOnly` is false, the prop is required,\n   * this input name`should be unique within the parent form.\n   */\n  name: chainPropTypes(PropTypes.string, function (props) {\n    if (!props.readOnly && !props.name) {\n      return new Error(['Material-UI: the prop `name` is required (when `readOnly` is false).', 'Additionally, the input name should be unique within the parent form.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} value The new value.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback function that is fired when the hover state changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} value The new value.\n   */\n  onChangeActive: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseMove: PropTypes.func,\n\n  /**\n   * The minimum increment value change allowed.\n   */\n  precision: PropTypes.number,\n\n  /**\n   * Removes all hover effects and pointer events.\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * The size of the rating.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * The rating value.\n   */\n  value: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRating'\n})(Rating);","import React from \"react\";\nimport MuiRating from \"@material-ui/lab/Rating\";\n\n// TODO: Create an interface for props\n\ninterface Props {\n  value: number;\n  row: { id: string };\n  onSubmit: Function;\n  isScrolling: boolean;\n}\nconst Rating = (props: Props) => {\n  const { value, row, onSubmit } = props;\n  //if (isScrolling) return <div />;\n  return (\n    <MuiRating\n      // TODO: make it unique for each\n      name={`rating-controlled-${row.id}`}\n      value={value}\n      onChange={(event, newValue) => {\n        onSubmit(newValue);\n      }}\n    />\n  );\n};\nexport default Rating;\n"],"sourceRoot":""}