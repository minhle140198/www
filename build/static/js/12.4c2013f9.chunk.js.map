{"version":3,"sources":["components/Fields/index.tsx","hooks/useRouter.ts","contexts/editorContext.ts","hooks/useDoc.ts","components/Confirmation.tsx","firebase/callables.ts","components/CreateTableDialog.tsx","hooks/useSettings.ts","components/Table/grid-fns.tsx","contexts/tablesContext.ts","hooks/useFiretable/useTableConfig.ts","util/fns.ts","components/Navigation.tsx","components/Table/useStyle.ts","components/Table/EmptyTable.tsx","components/Table/Grid.tsx","components/EditorModal.tsx","components/LongTextEditor.tsx","components/RichTextEditor.jsx","hooks/useFiretable/useTable.tsx","hooks/useFiretable/index.ts","util/EditorProvider.tsx","components/Table/index.tsx","views/TableView.tsx"],"names":["FieldType","FIELDS","icon","name","type","simpleText","longText","email","PhoneNumber","checkBox","number","date","dateTime","url","rating","image","file","singleSelect","multiSelect","documentSelect","action","richText","color","getFieldIcon","fieldType","find","propEq","FieldsDropDown","value","onChange","inputProps","id","map","field","key","useRouter","useContext","__RouterContext","EditorContext","React","createContext","open","undefined","close","cancel","editorValue","setEditorValue","DocActions","documentReducer","prevState","newProps","update","ref","data","doc","delete","documentIntialState","path","prevPath","loading","useDoc","intialOverrides","useReducer","documentState","documentDispatch","useEffect","unsubscribe","db","onSnapshot","snapshot","exists","setDocumentListner","useStyles","makeStyles","theme","createStyles","root","display","flexWrap","dryWrapper","dryField","Confirmation","props","children","message","confirmationCommand","classes","useState","showDialog","setShowDialog","dryText","setDryText","handleClose","confirmHandler","onClick","button","cloneElement","onClose","title","customBody","body","className","variant","e","target","InputProps","disableUnderline","autoFocus","margin","label","fullWidth","disabled","confirm","CLOUD_FUNCTIONS","algoliaUpdateDoc","functions","httpsCallable","updateAlgoliaRecord","exportTable","deleteAlgoliaRecord","CreateTableDialog","createTable","router","setOpen","tableName","setTableName","collectionName","setCollectionName","_camelCase","fab","aria-label","aria-labelledby","location","pathname","history","push","useSettings","settingsState","tables","collection","set","merge","columns","AutoComplete","Editors","MultiSelect","lazy","DateField","Rating","Number","CheckBox","UrlLink","Image","File","LongText","RichText","Color","Action","editable","last","onSubmit","row","a","async","parent","updatedAt","Date","updatedFields","_uniq","onGridRowsUpdated","event","fromRowData","updated","Object","keys","values","cellFormatter","column","options","DateFormatter","fallback","fieldName","singleSelectEditor","_options","option","text","TablesContext","useTableConfig","tablePath","tableConfigState","rowHeight","updateColumn","index","updatables","forEach","updatable","updateConfig","add","resize","width","setTable","table","remove","splice","reorder","draggedColumnKey","droppedColumnKey","draggedColumnIndex","_findIndex","droppedColumnIndex","reorderedColumns","arr","old_index","new_index","length","k","arrayMover","padding","spacing","paper","paddingBottom","paddingTop","subheader","backgroundColor","palette","background","appBar","top","bottom","grow","flexGrow","position","zIndex","right","marginLeft","skeleton","borderRadius","routes","flex","overflowX","Navigation","settings","Provider","AppBar","Toolbar","IconButton","edge","component","Link","to","Button","replace","Skeleton","height","typography","header","columnIconContainer","columnNameContainer","flexShrink","overflow","columnName","fontSize","lineHeight","headerButton","tableActions","alignContent","formControl","minWidth","EmptyTable","isLoading","tableHeight","addRow","Loading","style","textAlign","EmptyState","ReactDataGrid","DraggableContainer","DraggableHeader","isArrayEqual","x","y","isEmpty","xorWith","isEqual","memo","onHeaderDrop","RowRenderer","handleRowGetter","rows","resizeColumn","loadingRows","setSelectedCell","headerRowHeight","rowRenderer","enableCellSelect","rowGetter","rowsCount","minHeight","onCellSelected","coordinates","rowIdx","idx","onColumnResize","emptyRowsView","prevProps","nextProps","test","left","modal","alignItems","justifyContent","maxWidth","primary","dark","main","textArea","quillEditor","shape","transition","transitions","create","duration","shortest","fontFamily","fontStyle","borderColor","stroke","fill","light","EditorModel","editorContext","isOpen","Modal","aria-describedby","reason","Fade","in","Paper","container","justify","size","LongTextEditor","TextareaAutosize","rowsMax","placeholder","defaultValue","Quill","register","ImageDrop","asyncUploader","documentRef","bucket","child","put","snapShot","metadata","fullPath","getDownloadURL","downloadUrl","RichTextEditor","quillRef","useRef","current","getEditor","getModule","addHandler","now","quill","fileInput","document","querySelector","createElement","setAttribute","classList","addEventListener","console","log","files","getTime","range","getSelection","updateContents","Delta","retain","insert","removeChild","appendChild","click","imageHandler","val","modules","imageDrop","toolbar","list","indent","clipboard","matchVisual","tableReducer","tableInitialState","prevFilters","prevOrderBy","filters","prevLimit","limit","cap","useTable","initialOverrides","snackContext","SnackContext","tableState","tableDispatch","orderBy","equals","query","filter","where","operator","order","direction","docs","error","includes","process","split","window","getRows","deleteRow","rowIndex","documentId","tableCollection","createdAt","firebase","firestore","FieldValue","serverTimestamp","moreRows","additionalRows","dispatch","useFiretable","tableConfig","configActions","config","rowsLimit","loadingColumns","rename","more","EditorProvider","setFieldType","setProps","Hotkeys","TableHeader","SearchBox","DocSelect","ColumnEditor","Table","selectedCell","search","setSearch","anchorEl","setAnchorEl","setHeader","handleCloseHeader","docSelect","collectionPath","handleClick","headerProps","currentTarget","headerRenderer","Tooltip","wrap","item","navigator","writeText","xs","Typography","noWrap","disableFocusRipple","ordering","hidden","draggable","resizable","formatter","editor","isNew","clonedRow","filtersData","reduce","accumulator","currentValue","dragged","renderBaseRow","rest","actions","searchData","clearSearch","TableView","parsed","queryString","parse","JSON"],"mappings":"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","file":"static/js/12.4c2013f9.chunk.js","sourcesContent":["import React from \"react\";\nimport MailIcon from \"@material-ui/icons/MailOutline\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport SimpleTextIcon from \"@material-ui/icons/TextFormat\";\nimport LongTextIcon from \"@material-ui/icons/Notes\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport ImageIcon from \"@material-ui/icons/Photo\";\nimport FileIcon from \"@material-ui/icons/InsertDriveFileOutlined\";\nimport AttachmentIcon from \"@material-ui/icons/AttachFile\";\nimport PalleteIcon from \"@material-ui/icons/Palette\";\nimport DateIcon from \"@material-ui/icons/CalendarToday\";\nimport TimeIcon from \"@material-ui/icons/AccessTime\";\nimport RatingIcon from \"@material-ui/icons/StarHalf\";\nimport URLIcon from \"@material-ui/icons/Explore\";\nimport NumberIcon from \"@material-ui/icons/Looks3\";\nimport propEq from \"ramda/es/propEq\";\nimport find from \"ramda/es/find\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nexport enum FieldType {\n  simpleText = \"SIMPLE_TEXT\",\n  longText = \"LONG_TEXT\",\n  richText = \"RICH_TEXT\",\n  email = \"EMAIL\",\n  PhoneNumber = \"PHONE_NUMBER\",\n  checkBox = \"CHECK_BOX\",\n  date = \"DATE\",\n  dateTime = \"DATE_TIME\",\n  number = \"NUMBER\",\n  url = \"URL\",\n  color = \"COLOR\",\n  rating = \"RATING\",\n  image = \"IMAGE\",\n  file = \"FILE\",\n  singleSelect = \"SINGLE_SELECT\",\n  multiSelect = \"MULTI_SELECT\",\n  documentSelect = \"DOCUMENT_SELECT\",\n  action = \"ACTION\",\n  last = \"LAST\",\n}\n\nexport const FIELDS = [\n  { icon: <SimpleTextIcon />, name: \"Simple Text\", type: FieldType.simpleText },\n  { icon: <LongTextIcon />, name: \"Long Text\", type: FieldType.longText },\n  { icon: <MailIcon />, name: \"Email\", type: FieldType.email },\n  { icon: <PhoneIcon />, name: \"Phone\", type: FieldType.PhoneNumber },\n  { icon: <CheckBoxIcon />, name: \"Check Box\", type: FieldType.checkBox },\n  { icon: <NumberIcon />, name: \"Number\", type: FieldType.number },\n  { icon: <DateIcon />, name: \"Date\", type: FieldType.date },\n  { icon: <TimeIcon />, name: \"Time\", type: FieldType.dateTime },\n  { icon: <URLIcon />, name: \"URL\", type: FieldType.url },\n  { icon: <RatingIcon />, name: \"Rating\", type: FieldType.rating },\n  { icon: <ImageIcon />, name: \"Image\", type: FieldType.image },\n  { icon: <AttachmentIcon />, name: \"File\", type: FieldType.file },\n  { icon: <FileIcon />, name: \"Single Select\", type: FieldType.singleSelect },\n  { icon: <FileIcon />, name: \"Multi Select\", type: FieldType.multiSelect },\n  { icon: <FileIcon />, name: \"Doc Select\", type: FieldType.documentSelect },\n  { icon: <FileIcon />, name: \"Action\", type: FieldType.action },\n  { icon: <FileIcon />, name: \"Rich Text\", type: FieldType.richText },\n  { icon: <PalleteIcon />, name: \"Color\", type: FieldType.color },\n];\n\n/**\n * returns icon associated with field type\n * @param fieldType\n */\nexport const getFieldIcon = (fieldType: FieldType) => {\n  return find(propEq(\"type\", fieldType))(FIELDS).icon;\n};\n/**\n * returns true if it receives an existing fieldType\n * @param fieldType\n */\nexport const isFieldType = (fieldType: any) => {\n  const fieldTypes = FIELDS.map(field => field.type);\n  return fieldTypes.includes(fieldType);\n};\n\n/**\n * Returns dropdown component of all available types\n */\nexport const FieldsDropDown = (value: FieldType | null, onChange: any) => {\n  return (\n    <Select\n      value={value ? value : \"\"}\n      onChange={onChange}\n      inputProps={{\n        name: \"type\",\n        id: \"type\",\n      }}\n    >\n      {FIELDS.map(\n        (field: { icon: JSX.Element; name: string; type: FieldType }) => {\n          return (\n            <MenuItem\n              key={`select-field-${field.name}`}\n              id={`select-field-${field.type}`}\n              value={field.type}\n            >\n              <>{field.name}</>\n            </MenuItem>\n          );\n        }\n      )}\n    </Select>\n  );\n};\n","import { useContext } from \"react\";\nimport { __RouterContext } from \"react-router\";\n// used to transform routerContext into a hook\n// TODO : find alternate solution as this uses an internal variable\nexport default function useRouter() {\n  return useContext(__RouterContext);\n}\n","import React from \"react\";\nimport { FieldType } from \"../components/Fields\";\n\nexport interface EditorContextInterface {\n  // row: any;\n  // onSubmit: any;\n  // value: any;\n  // anchorEl: any;\n  editorValue: any;\n  open: any;\n  close: any;\n  cancel: any;\n  setEditorValue: any;\n  fieldType: FieldType | null;\n}\n\nconst EditorContext = React.createContext<EditorContextInterface>({\n  // row: undefined,\n  // onSubmit: undefined,\n  // value: undefined,\n  // anchorEl: undefined,\n  open: undefined,\n  close: undefined,\n  cancel: undefined,\n  editorValue: undefined,\n  setEditorValue: undefined,\n  fieldType: null,\n});\n\nexport default EditorContext;\n","import { db } from \"../firebase\";\nimport { useEffect, useReducer } from \"react\";\n\nexport enum DocActions {\n  update,\n  delete,\n}\nconst documentReducer = (prevState: any, newProps: any) => {\n  switch (newProps.action) {\n    case DocActions.update:\n      // takes data object form the dispatcher and updates doc\n      prevState.ref.update({ ...newProps.data });\n      return { ...prevState, doc: { ...prevState.doc, ...newProps.data } };\n    case DocActions.delete:\n      prevState.ref.delete();\n      return null;\n    default:\n      return { ...prevState, ...newProps };\n  }\n};\nconst documentIntialState = {\n  path: null,\n  prevPath: null,\n  doc: null,\n  ref: null,\n  loading: true,\n};\n\nconst useDoc = (intialOverrides: any) => {\n  const [documentState, documentDispatch] = useReducer(documentReducer, {\n    ...documentIntialState,\n    ...intialOverrides,\n  });\n  const setDocumentListner = () => {\n    documentDispatch({ prevPath: documentState.path });\n    const unsubscribe = db.doc(documentState.path).onSnapshot(snapshot => {\n      if (snapshot.exists) {\n        const data = snapshot.data();\n\n        const id = snapshot.id;\n        const doc = { ...data, id };\n        documentDispatch({\n          doc,\n          ref: snapshot.ref,\n          loading: false,\n        });\n      } else {\n        documentDispatch({\n          loading: false,\n        });\n      }\n    });\n    documentDispatch({ unsubscribe });\n  };\n  useEffect(() => {\n    const { path, prevPath, unsubscribe } = documentState;\n    if (path && path !== prevPath) {\n      if (unsubscribe) unsubscribe();\n      setDocumentListner();\n    }\n  }, [documentState]);\n  useEffect(\n    () => () => {\n      if (documentState.unsubscribe) documentState.unsubscribe();\n    },\n    []\n  );\n  return [documentState, documentDispatch];\n};\n\nexport default useDoc;\n","import React, { useState } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    dryWrapper: {},\n    dryField: {},\n  })\n);\n\ninterface Props {\n  children: JSX.Element;\n  message?: {\n    title?: string;\n    customBody?: string;\n    body?: string;\n    cancel?: string;\n    confirm?: string | JSX.Element;\n  };\n  confirmationCommand?: string;\n}\nconst Confirmation = (props: Props) => {\n  const { children, message, confirmationCommand } = props;\n  const classes = useStyles();\n  const [showDialog, setShowDialog] = useState(false);\n  const [dryText, setDryText] = useState(\"\");\n\n  const handleClose = () => {\n    setShowDialog(false);\n  };\n  //Gets the function of the wrapped button to use for execution on conformation\n  const confirmHandler = children.props.onChange || children.props.onClick;\n  const button = React.cloneElement(children, {\n    onClick: () => {\n      setShowDialog(true);\n    },\n    onChange: () => {\n      setShowDialog(true);\n    },\n  });\n\n  return (\n    <>\n      {button}\n      <Dialog open={showDialog} onClose={handleClose}>\n        <DialogTitle>\n          {(message && message.title) || \"Are you sure?\"}\n        </DialogTitle>\n        {message && (\n          <DialogContent>\n            {message.customBody}\n            {message.body && (\n              <DialogContentText>{message.body}</DialogContentText>\n            )}\n            {confirmationCommand && (\n              <div className={classes.dryWrapper}>\n                <DialogContentText>\n                  Type {confirmationCommand} below to continue:\n                </DialogContentText>\n                <TextField\n                  value={dryText}\n                  variant=\"filled\"\n                  onChange={e => {\n                    setDryText(e.target.value);\n                  }}\n                  className={classes.dryField}\n                  InputProps={{ disableUnderline: true }}\n                  autoFocus\n                  margin=\"dense\"\n                  label={confirmationCommand}\n                  fullWidth\n                />\n              </div>\n            )}\n          </DialogContent>\n        )}\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            {(message && message.cancel) || \"Cancel\"}\n          </Button>\n          <Button\n            onClick={() => {\n              confirmHandler();\n              handleClose();\n            }}\n            color=\"primary\"\n            variant=\"contained\"\n            autoFocus\n            disabled={\n              confirmationCommand ? dryText !== confirmationCommand : false\n            }\n          >\n            {(message && message.confirm) || \"Confirm\"}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Confirmation;\n","import { functions } from \"./index\";\nimport { FireTableFilter } from \"../hooks/useFiretable\";\n\nexport enum CLOUD_FUNCTIONS {\n  updateAlgoliaRecord = \"updateAlgoliaRecord\",\n  deleteAlgoliaRecord = \"deleteAlgoliaRecord\",\n  exportTable = \"exportTable\",\n}\n\nexport const cloudFunction = (\n  name: string,\n  input: any,\n  success: Function,\n  fail: Function\n) => {\n  const callable = functions.httpsCallable(name);\n  callable(input)\n    .then(result => {\n      if (success) {\n        success(result);\n      }\n    })\n    .catch(error => {\n      if (fail) {\n        fail(error);\n      }\n    });\n};\n\n// TODO: data formating dates,\nexport const algoliaUpdateDoc = (data: {\n  collection: string;\n  id: string;\n  doc: any;\n}) => functions.httpsCallable(CLOUD_FUNCTIONS.updateAlgoliaRecord)(data);\n\nexport const algoliaDeleteDoc = functions.httpsCallable(\n  CLOUD_FUNCTIONS.deleteAlgoliaRecord\n);\n\nexport const exportTable = (data: {\n  collectionPath: string;\n  filters: FireTableFilter[];\n  columns: any[];\n  allFields: Boolean;\n}) => functions.httpsCallable(CLOUD_FUNCTIONS.exportTable)(data);\n","import React, { useState, useEffect } from \"react\";\nimport _camelCase from \"lodash/camelCase\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport useRouter from \"../hooks/useRouter\";\n\nimport {\n  Tooltip,\n  Fab,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\n\nexport interface ICreateTableDialogProps {\n  /** Optional class overrides */\n  classes?: Partial<Record<\"fab\", string>>;\n  /** Function to handle table creation */\n  createTable: (tableName: string, collectionName: string) => void;\n}\n\nexport default function CreateTableDialog({\n  classes = {},\n  createTable,\n}: ICreateTableDialogProps) {\n  const router = useRouter();\n\n  const [open, setOpen] = React.useState(false);\n  const [tableName, setTableName] = useState(\"\");\n  const [collectionName, setCollectionName] = useState(\"\");\n  useEffect(() => {\n    setCollectionName(_camelCase(tableName));\n  }, [tableName]);\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setTableName(\"\");\n    setCollectionName(\"\");\n    setOpen(false);\n  }\n  function handleCreate() {\n    createTable(tableName, collectionName);\n    if (router.location.pathname === \"/\") {\n      router.history.push(`table/${collectionName}`);\n    } else {\n      router.history.push(collectionName);\n    }\n\n    handleClose();\n  }\n\n  return (\n    <div>\n      <Tooltip title=\"Create a table\">\n        <Fab\n          className={classes.fab}\n          color=\"secondary\"\n          aria-label=\"Create table\"\n          onClick={handleClickOpen}\n        >\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">New table</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Create a new Table</DialogContentText>\n          <TextField\n            autoFocus\n            onChange={e => {\n              setTableName(e.target.value);\n            }}\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Table Name\"\n            type=\"email\"\n            fullWidth\n          />\n          <TextField\n            value={collectionName}\n            onChange={e => {\n              setCollectionName(e.target.value);\n            }}\n            margin=\"dense\"\n            id=\"collection\"\n            label=\"Collection Name\"\n            type=\"email\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleCreate} color=\"primary\">\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\nimport useDoc, { DocActions } from \"./useDoc\";\nimport { db } from \"../firebase\";\n\nconst useSettings = () => {\n  const [settingsState, documentDispatch] = useDoc({\n    path: \"_FIRETABLE_/settings\",\n  });\n  useEffect(() => {\n    //updates tables data on document change\n    const { doc, tables } = settingsState;\n    if (doc && tables !== doc.tables) {\n      documentDispatch({ tables: doc.tables });\n    }\n  }, [settingsState]);\n\n  const createTable = (name: string, collection: string) => {\n    const { tables } = settingsState;\n    // updates the setting doc\n    if (tables) {\n      documentDispatch({\n        action: DocActions.update,\n        data: { tables: [...tables, { name, collection }] },\n      });\n    } else {\n      db.doc(\"_FIRETABLE_/settings\").set(\n        { tables: [{ name, collection }] },\n        { merge: true }\n      );\n    }\n    //create the firetable collection doc with empty columns\n    db.collection(collection)\n      .doc(\"_FIRETABLE_\")\n      .set({ columns: [] });\n  };\n  return [settingsState, createTable];\n};\n\nexport default useSettings;\n","import React, { lazy, Suspense } from \"react\";\nimport { FieldType } from \"../Fields\";\nimport { Editors } from \"react-data-grid-addons\";\nimport _uniq from \"lodash/uniq\";\nimport { algoliaUpdateDoc } from \"../../firebase/callables\";\n\nconst { AutoComplete } = Editors;\n\nconst MultiSelect = lazy(() => import(\"../Fields/MultiSelect\"));\nconst DateField = lazy(() => import(\"../Fields/Date\"));\nconst Rating = lazy(() => import(\"../Fields/Rating\"));\nconst Number = lazy(() => import(\"../Fields/Number\"));\nconst CheckBox = lazy(() => import(\"../Fields/CheckBox\"));\nconst UrlLink = lazy(() => import(\"../Fields/UrlLink\"));\nconst Image = lazy(() => import(\"../Fields/Image\"));\nconst File = lazy(() => import(\"../Fields/File\"));\nconst LongText = lazy(() => import(\"../Fields/LongText\"));\nconst RichText = lazy(() => import(\"../Fields/RichText\"));\nconst Color = lazy(() => import(\"../Fields/Color\"));\nconst Action = lazy(() => import(\"../Fields/Action\"));\n\nexport const editable = (fieldType: FieldType) => {\n  switch (fieldType) {\n    case FieldType.date:\n    case FieldType.dateTime:\n    case FieldType.rating:\n    case FieldType.number:\n    case FieldType.checkBox:\n    case FieldType.multiSelect:\n    case FieldType.image:\n    case FieldType.file:\n    case FieldType.longText:\n    case FieldType.richText:\n    case FieldType.documentSelect:\n    case FieldType.color:\n    case FieldType.action:\n    case FieldType.last:\n      return false;\n    default:\n      return true;\n  }\n};\n\nexport const onSubmit = (key: string, row: any) => async (value: any) => {\n  const collection = row.ref.parent.path;\n  const data = { collection, id: row.ref.id, doc: { [key]: value } };\n\n  if (value !== null || value !== undefined) {\n    const updatedAt = new Date();\n    let updatedFields = [key];\n    if (row.updatedFields) {\n      updatedFields = _uniq([key, ...row.updatedFields]);\n    }\n    row.ref.update({ [key]: value, updatedAt, updatedFields });\n    await algoliaUpdateDoc(data);\n  }\n};\n\nexport const DateFormatter = (key: string, fieldType: FieldType) => (\n  props: any\n) => {\n  return (\n    <DateField\n      {...props}\n      onSubmit={onSubmit(key, props.row)}\n      fieldType={fieldType}\n    />\n  );\n};\n\nexport const onGridRowsUpdated = (event: any) => {\n  const { fromRowData, updated, action } = event;\n  if (action === \"CELL_UPDATE\") {\n    onSubmit(Object.keys(updated)[0], fromRowData)(Object.values(updated)[0]);\n  }\n};\nexport const onCellSelected = (args: any) => {};\nexport const cellFormatter = (column: any) => {\n  const { type, key, options } = column;\n  switch (type) {\n    case FieldType.date:\n    case FieldType.dateTime:\n      return DateFormatter(key, type);\n    case FieldType.rating:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <Rating\n              {...props}\n              onSubmit={onSubmit(key, props.row)}\n              value={typeof props.value === \"number\" ? props.value : 0}\n            />\n          </Suspense>\n        );\n      };\n    case FieldType.number:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <Number\n              {...props}\n              onSubmit={onSubmit(key, props.row)}\n              value={typeof props.value === \"number\" ? props.value : undefined}\n            />\n          </Suspense>\n        );\n      };\n    case FieldType.color:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <Color {...props} onSubmit={onSubmit(key, props.row)} />\n          </Suspense>\n        );\n      };\n    case FieldType.checkBox:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <CheckBox\n              column={column}\n              {...props}\n              onSubmit={onSubmit(key, props.row)}\n            />\n          </Suspense>\n        );\n      };\n    case FieldType.url:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <UrlLink {...props} />\n          </Suspense>\n        );\n      };\n    case FieldType.action:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <Action\n              fieldName={key}\n              {...props}\n              onSubmit={onSubmit(key, props.row)}\n            />\n          </Suspense>\n        );\n      };\n    case FieldType.multiSelect:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <MultiSelect\n              {...props}\n              onSubmit={onSubmit(key, props.row)}\n              options={options}\n            />\n          </Suspense>\n        );\n      };\n    case FieldType.image:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <Image\n              {...props}\n              onSubmit={onSubmit(key, props.row)}\n              fieldName={key}\n            />\n          </Suspense>\n        );\n      };\n    case FieldType.file:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <File\n              {...props}\n              onSubmit={onSubmit(key, props.row)}\n              fieldName={key}\n            />\n          </Suspense>\n        );\n      };\n    case FieldType.longText:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <LongText\n              {...props}\n              fieldName={key}\n              onSubmit={onSubmit(key, props.row)}\n            />\n          </Suspense>\n        );\n      };\n    case FieldType.richText:\n      return (props: any) => {\n        return (\n          <Suspense fallback={<div />}>\n            <RichText\n              {...props}\n              fieldName={key}\n              onSubmit={onSubmit(key, props.row)}\n            />\n          </Suspense>\n        );\n      };\n    default:\n      return false;\n  }\n};\n\nexport const singleSelectEditor = (options: string[]) => {\n  if (options) {\n    const _options = options.map(option => ({\n      id: option,\n      value: option,\n      title: option,\n      text: option,\n    }));\n    return <AutoComplete options={_options} />;\n  }\n\n  return <AutoComplete options={[]} />;\n};\n","import React from \"react\";\n\ninterface TablesContextInterface {\n  value: any[] | undefined;\n}\n\nconst TablesContext = React.createContext<TablesContextInterface>({\n  value: undefined,\n});\n\nexport default TablesContext;\n","import { useEffect } from \"react\";\nimport useDoc, { DocActions } from \"../useDoc\";\nimport { FieldType } from \"../../components/Fields\";\nimport _camelCase from \"lodash/camelCase\";\nimport _findIndex from \"lodash/findIndex\";\nimport { arrayMover } from \"../../util/fns\";\n\nconst useTableConfig = (tablePath: string) => {\n  const [tableConfigState, documentDispatch] = useDoc({\n    path: `${tablePath}/_FIRETABLE_`,\n  });\n  useEffect(() => {\n    const { doc, columns } = tableConfigState;\n    if (doc && columns !== doc.columns) {\n      documentDispatch({ columns: doc.columns, rowHeight: doc.rowHeight });\n    }\n  }, [tableConfigState.doc]);\n  /**  used for specifying the table in use\n   *  @param table firestore collection path\n   */\n  const setTable = (table: string) => {\n    documentDispatch({\n      path: `${table}/_FIRETABLE_`,\n      columns: [],\n      doc: null,\n      loading: true,\n    });\n  };\n  /**  used for creating a new column\n   *  @param name of column.\n   *  @param type of column\n   *  @param data additional column properties\n   */\n  const add = (name: string, type: FieldType, data?: any) => {\n    //TODO: validation\n\n    //console.log(\"tableConfigState\", tableConfigState);\n    const { columns } = tableConfigState;\n    const key = _camelCase(name);\n    documentDispatch({\n      action: DocActions.update,\n      data: { columns: [...columns, { name, key, type, ...data }] },\n    });\n  };\n\n  /**  used for updating the width of column\n   *  @param index of column.\n   *  @param width number of pixels, eg: 120\n   */\n  const resize = (index: number, width: number) => {\n    const { columns } = tableConfigState;\n    columns[index].width = width;\n    documentDispatch({ action: DocActions.update, data: { columns } });\n  };\n  type updatable = { field: string; value: unknown };\n\n  /**  used for updating column properties such as type,name etc.\n   *  @param index of column.\n   *  @param {updatable[]} updatables properties to be updated\n   */\n  const updateColumn = (index: number, updatables: updatable[]) => {\n    const { columns } = tableConfigState;\n    updatables.forEach((updatable: updatable) => {\n      columns[index][updatable.field] = updatable.value;\n    });\n    documentDispatch({ action: DocActions.update, data: { columns } });\n  };\n  /** remove column by index\n   *  @param index of column.\n   */\n  const remove = (index: number) => {\n    const { columns } = tableConfigState;\n    columns.splice(index, 1);\n    documentDispatch({ action: DocActions.update, data: { columns } });\n  };\n  /** reorder columns by key\n   * @param draggedColumnKey column being repositioned.\n   * @param droppedColumnKey column being .\n   */\n  const reorder = (draggedColumnKey: string, droppedColumnKey: string) => {\n    const { columns } = tableConfigState;\n    const draggedColumnIndex = _findIndex(columns, [\"key\", draggedColumnKey]);\n    const droppedColumnIndex = _findIndex(columns, [\"key\", droppedColumnKey]);\n    const reorderedColumns = [...columns];\n    arrayMover(reorderedColumns, draggedColumnIndex, droppedColumnIndex);\n    documentDispatch({\n      action: DocActions.update,\n      data: { columns: reorderedColumns },\n    });\n  };\n  /** changing table configuration used for things such as row height\n   * @param key name of parameter eg. rowHeight\n   * @param value new value eg. 65\n   */\n  const updateConfig = (key: string, value: unknown) => {\n    documentDispatch({\n      action: DocActions.update,\n      data: { [key]: value },\n    });\n  };\n  const actions = {\n    updateColumn,\n    updateConfig,\n    add,\n    resize,\n    setTable,\n    remove,\n    reorder,\n  };\n  return [tableConfigState, actions];\n};\n\nexport default useTableConfig;\n","/**\n * reposition an element in an array\n * @param arr array\n * @param old_index index of element to be moved\n * @param new_index new position of the moved element\n */\nexport const arrayMover = (\n  arr: any[],\n  old_index: number,\n  new_index: number\n) => {\n  while (old_index < 0) {\n    old_index += arr.length;\n  }\n  while (new_index < 0) {\n    new_index += arr.length;\n  }\n  if (new_index >= arr.length) {\n    var k = new_index - arr.length + 1;\n    while (k--) {\n      arr.push(undefined);\n    }\n  }\n  arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n  return arr; // for testing purposes\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nimport CreateTableDialog from \"./CreateTableDialog\";\n\nimport useSettings from \"../hooks/useSettings\";\nimport useRouter from \"../hooks/useRouter\";\nimport TablesContext from \"../contexts/tablesContext\";\n// import { auth } from \"../firebase\";\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    text: {\n      padding: theme.spacing(2, 2, 0),\n    },\n    paper: {\n      paddingBottom: 20,\n      paddingTop: 5,\n    },\n\n    subheader: {\n      backgroundColor: theme.palette.background.paper,\n    },\n    appBar: {\n      top: \"auto\",\n      bottom: 0,\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    fab: {\n      position: \"absolute\",\n      zIndex: 1,\n      top: -30,\n      right: 20,\n      margin: \"0 auto\",\n    },\n    button: {\n      color: \"#fff\",\n      marginLeft: 8,\n    },\n    skeleton: {\n      marginLeft: 8,\n      borderRadius: 5,\n    },\n    routes: {\n      flex: \"flex-shrink\",\n      overflowX: \"auto\",\n    },\n  })\n);\n\n// TODO: Create an interface for props\nconst Navigation = (props: any) => {\n  const router = useRouter();\n  const classes = useStyles();\n  const [settings, createTable] = useSettings();\n  return (\n    <TablesContext.Provider value={{ value: settings.tables }}>\n      <>\n        {props.children}\n        <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"go home\"\n              component={Link}\n              to=\"/\"\n            >\n              <MenuIcon />\n            </IconButton>\n            {!settings.tables ? (\n              <>\n                <Skeleton\n                  variant=\"rect\"\n                  width={120}\n                  height={40}\n                  className={classes.skeleton}\n                />\n                <Skeleton\n                  variant=\"rect\"\n                  width={120}\n                  height={40}\n                  className={classes.skeleton}\n                />\n                <Skeleton\n                  variant=\"rect\"\n                  width={120}\n                  height={40}\n                  className={classes.skeleton}\n                />\n                <Skeleton\n                  variant=\"rect\"\n                  width={120}\n                  height={40}\n                  className={classes.skeleton}\n                />\n              </>\n            ) : (\n              <div className={classes.routes}>\n                {settings.tables.map(\n                  (table: { name: string; collection: string }) => (\n                    <Button\n                      key={table.collection}\n                      onClick={() => {\n                        if (\n                          table.collection !==\n                          router.location.pathname.replace(\"/table/\", \"\")\n                        ) {\n                          //prevent redirecting to the same table\n                          router.history.push(table.collection);\n                        }\n                      }}\n                      className={classes.button}\n                    >\n                      {table.name}\n                    </Button>\n                  )\n                )}\n              </div>\n            )}\n            {/* <Button\n              onClick={() => {\n                auth.signOut();\n              }}\n            >\n              Sign out\n            </Button> */}\n            <CreateTableDialog classes={classes} createTable={createTable} />\n            <div className={classes.grow} />\n          </Toolbar>\n        </AppBar>\n      </>\n    </TablesContext.Provider>\n  );\n};\nexport default Navigation;\n","import { createStyles, makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    typography: {\n      padding: 1,\n    },\n\n    header: {},\n\n    columnIconContainer: {\n      \"& > svg\": { display: \"block\" },\n    },\n    columnNameContainer: {\n      flexShrink: 1,\n      overflow: \"hidden\",\n      margin: theme.spacing(0, 0.5),\n    },\n    columnName: {\n      fontSize: \"0.875rem\",\n      lineHeight: 1,\n    },\n\n    headerButton: {\n      width: \"100%\",\n    },\n    tableActions: {\n      display: \"flex\",\n      flex: \"wrap\",\n      alignContent: \"center\",\n      // background: Theme.palette.primary.main,\n    },\n    formControl: {\n      margin: 2,\n      minWidth: 120,\n    },\n  })\n);\nexport default useStyles;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Loading from \"../Loading\";\nimport EmptyState from \"../EmptyState\";\n\nconst EmptyTable = (props: any) => {\n  const { isLoading, tableHeight, addRow } = props;\n  if (isLoading) return <Loading message=\"Fetching rows\" />;\n  else\n    return (\n      <div\n        style={{\n          height: tableHeight,\n          textAlign: \"center\",\n          backgroundColor: \"#eee\",\n          padding: \"100px\",\n        }}\n      >\n        <EmptyState message=\"No data to show\" />\n        <Button\n          onClick={() => {\n            addRow();\n          }}\n        >\n          Add Row\n        </Button>\n      </div>\n    );\n};\nexport default EmptyTable;\n","import React, { lazy, Suspense } from \"react\";\nimport EmptyTable from \"./EmptyTable\";\nimport { editable } from \"./grid-fns\";\nimport { DraggableHeader } from \"react-data-grid-addons\";\nimport isEqual from \"lodash/isEqual\";\nimport isEmpty from \"lodash/isEmpty\";\nimport xorWith from \"lodash/xorWith\";\nimport Loading from \"../Loading\";\n\nconst ReactDataGrid = lazy(() => import(\"react-data-grid\"));\nconst { DraggableContainer } = DraggableHeader;\nconst Grid = (props: any) => {\n  const {\n    onHeaderDrop,\n    rowHeight,\n    columns,\n    RowRenderer,\n    handleRowGetter,\n    tableHeight,\n    onGridRowsUpdated,\n    rows,\n    resizeColumn,\n    loadingRows,\n    addRow,\n    setSelectedCell,\n  } = props;\n  return (\n    <Suspense fallback={<Loading message=\"Loading table\" />}>\n      <DraggableContainer onHeaderDrop={onHeaderDrop}>\n        <ReactDataGrid\n          headerRowHeight={47}\n          rowRenderer={RowRenderer}\n          rowHeight={rowHeight}\n          columns={columns}\n          enableCellSelect={true} // makes text based cells editable\n          rowGetter={handleRowGetter}\n          rowsCount={rows.length}\n          onGridRowsUpdated={onGridRowsUpdated}\n          minHeight={tableHeight}\n          onCellSelected={(coordinates: { rowIdx: number; idx: number }) => {\n            const row = rows[coordinates.rowIdx];\n            const column = columns[coordinates.idx];\n            if (editable(column.type)) {\n              //only editable fields are stored selectedCell, temporary fix for custom fields\n              setSelectedCell({ row, column });\n            }\n          }}\n          onColumnResize={(idx: number, width: number) =>\n            //tableActions.column.resize(idx, width)\n            resizeColumn(idx, width)\n          }\n          emptyRowsView={() => (\n            <EmptyTable\n              //isLoading={tableState.loadingRows}\n              isLoading={loadingRows}\n              tableHeight={tableHeight}\n              addRow={addRow}\n            />\n          )}\n        />\n      </DraggableContainer>\n    </Suspense>\n  );\n};\n\nexport const isArrayEqual = (x: any, y: any) => isEmpty(xorWith(x, y, isEqual));\n\nexport default React.memo(Grid, (prevProps, nextProps) => {\n  return (\n    isArrayEqual(prevProps.columns, nextProps.columns) &&\n    isArrayEqual(prevProps.rows, nextProps.rows)\n    // || prevProps.rowHeight === nextProps.rowHeight ||\n    // prevProps.tableHeight === nextProps.tableHeight\n  );\n});\n","import React, { useContext, useRef, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport EditorContext from \"contexts/editorContext\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    test: { position: \"absolute\", top: 10, left: 10 },\n    modal: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      maxWidth: 600,\n      width: \"100%\",\n    },\n    paper: { padding: theme.spacing(2) },\n    root: {\n      margin: `${theme.spacing(1)}px 0`,\n\n      \"&:focus-within $sectionTitle\": {\n        color:\n          theme.palette.type === \"dark\"\n            ? theme.palette.primary.dark\n            : theme.palette.primary.main,\n      },\n    },\n    typography: {\n      padding: theme.spacing(2),\n    },\n    textArea: {\n      fontSize: 16,\n      minWidth: 230,\n      width: \"100%\",\n    },\n    quillEditor: {\n      minHeight: 100,\n\n      // match styling\n      \"& .ql-toolbar\": {\n        borderRadius: `${theme.shape.borderRadius}px ${theme.shape.borderRadius}px 0 0`,\n        transition: theme.transitions.create(\"border-color\", {\n          duration: theme.transitions.duration.shortest,\n        }),\n      },\n      \"& .ql-container\": {\n        borderRadius: `0 0 ${theme.shape.borderRadius}px ${theme.shape.borderRadius}px`,\n        transition: theme.transitions.create(\"border-color\", {\n          duration: theme.transitions.duration.shortest,\n        }),\n      },\n      \"& .ql-editor\": {\n        minHeight: 100,\n        fontFamily: theme.typography.fontFamily,\n        fontSize: \".875rem\",\n        color: theme.palette.text.primary,\n        \"&.ql-blank::before\": {\n          fontStyle: \"normal\",\n          color: theme.palette.text.disabled,\n        },\n      },\n\n      // highlight border on focus\n      \"&:focus-within .ql-toolbar.ql-snow, &:focus-within .ql-container.ql-snow\": {\n        borderColor: theme.palette.primary.main,\n      },\n\n      // buttons stroke/fill colour matching\n      \"& .ql-snow.ql-toolbar button, & .ql-snow .ql-picker-label\": {\n        borderRadius: theme.shape.borderRadius / 2,\n        transition: theme.transitions.create(\"background-color\", {\n          duration: theme.transitions.duration.shortest,\n        }),\n      },\n      \"& .ql-snow .ql-stroke\": {\n        stroke: theme.palette.text.primary,\n        transition: theme.transitions.create(\"stroke\", {\n          duration: theme.transitions.duration.shortest,\n        }),\n      },\n      \"& .ql-snow .ql-fill\": {\n        fill: theme.palette.text.primary,\n        transition: theme.transitions.create(\"fill\", {\n          duration: theme.transitions.duration.shortest,\n        }),\n      },\n\n      // colour buttons on hover\n      \"& button:hover .ql-stroke\": {\n        stroke: `${theme.palette.primary.main} !important`,\n      },\n      \"& button:hover .ql-fill\": {\n        fill: `${theme.palette.primary.main} !important`,\n      },\n\n      // highlight buttons when selected/active\n      \"& .ql-snow.ql-toolbar .ql-active\": {\n        backgroundColor: theme.palette.primary.light,\n        \"& .ql-stroke\": {\n          stroke: `${theme.palette.primary.main} !important`,\n        },\n        \"& .ql-fill\": {\n          fill: `${theme.palette.primary.main} !important`,\n        },\n      },\n\n      // dropdown styling\n      \"& .ql-snow.ql-toolbar button:hover, & .ql-snow .ql-toolbar button:hover, & .ql-snow.ql-toolbar button:focus, & .ql-snow .ql-toolbar button:focus, & .ql-snow.ql-toolbar button.ql-active, & .ql-snow .ql-toolbar button.ql-active, & .ql-snow.ql-toolbar .ql-picker-label:hover, & .ql-snow .ql-toolbar .ql-picker-label:hover, & .ql-snow.ql-toolbar .ql-picker-label.ql-active, & .ql-snow .ql-toolbar .ql-picker-label.ql-active, & .ql-snow.ql-toolbar .ql-picker-item:hover, & .ql-snow .ql-toolbar .ql-picker-item:hover, & .ql-snow.ql-toolbar .ql-picker-item.ql-selected, & .ql-snow .ql-toolbar .ql-picker-item.ql-selected\": {\n        color: theme.palette.primary.main,\n\n        \"& polygon\": { stroke: theme.palette.primary.main + \" !important\" },\n      },\n    },\n  })\n);\ninterface Props {}\n\nconst EditorModel = ({ children }: any) => {\n  const classes = useStyles();\n  const editorContext = useContext(EditorContext);\n  const isOpen = editorContext.editorValue !== null;\n  return (\n    <Modal\n      className={classes.modal}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n      open={isOpen}\n      onClose={(event: {}, reason: \"backdropClick\" | \"escapeKeyDown\") => {\n        if (reason === \"escapeKeyDown\") editorContext.cancel();\n      }}\n    >\n      <Fade in={isOpen}>\n        <Paper className={classes.paper}>\n          {children}\n          <Grid container justify=\"space-between\">\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={editorContext.close}\n            >\n              Save\n            </Button>\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              onClick={editorContext.cancel}\n            >\n              cancel\n            </Button>\n          </Grid>\n        </Paper>\n      </Fade>\n    </Modal>\n  );\n};\nexport default EditorModel;\n","import React, { useContext } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport EditorContext from \"contexts/editorContext\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport { FieldType } from \"./Fields\";\nimport EditorModel from \"./EditorModal\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    test: { position: \"absolute\", top: 10, left: 10 },\n    modal: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      maxWidth: 600,\n      width: \"100%\",\n    },\n    paper: { padding: theme.spacing(2) },\n    root: {\n      position: \"relative\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    typography: {\n      padding: theme.spacing(2),\n    },\n    textArea: {\n      fontSize: 16,\n      minWidth: 230,\n      width: \"100%\",\n    },\n  })\n);\ninterface Props {}\n\nconst LongTextEditor = (props: Props) => {\n  const classes = useStyles();\n  const editorContext = useContext(EditorContext);\n  if (editorContext.fieldType !== FieldType.longText) return <></>;\n  return (\n    <EditorModel>\n      <TextareaAutosize\n        id={\"TextareaAutosize\"}\n        className={classes.textArea}\n        rowsMax={25}\n        aria-label=\"maximum height\"\n        placeholder=\"enter text\"\n        defaultValue={editorContext.editorValue}\n        autoFocus\n        onChange={(e: any) => {\n          editorContext.setEditorValue(e.target.value);\n        }}\n      />\n    </EditorModel>\n  );\n};\nexport default LongTextEditor;\n","import React, { useContext, useRef, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport EditorContext from \"contexts/editorContext\";\nimport { FieldType } from \"./Fields\";\nimport ReactQuill, { Quill } from \"react-quill\";\nimport { ImageDrop } from \"quill-image-drop-module\";\nimport Delta from \"quill-delta\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { bucket } from \"../firebase\";\n\nimport EditorModel from \"./EditorModal\";\n\nQuill.register(\"modules/imageDrop\", ImageDrop);\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    test: { position: \"absolute\", top: 10, left: 10 },\n    modal: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      maxWidth: 600,\n      width: \"100%\",\n    },\n    paper: { padding: theme.spacing(2) },\n    root: {\n      margin: `${theme.spacing(1)}px 0`,\n\n      \"&:focus-within $sectionTitle\": {\n        color:\n          theme.palette.type === \"dark\"\n            ? theme.palette.primary.dark\n            : theme.palette.primary.main,\n      },\n    },\n    typography: {\n      padding: theme.spacing(2),\n    },\n    textArea: {\n      fontSize: 16,\n      minWidth: 230,\n      width: \"100%\",\n    },\n    quillEditor: {\n      minHeight: 100,\n\n      // match styling\n      \"& .ql-toolbar\": {\n        borderRadius: `${theme.shape.borderRadius}px ${theme.shape.borderRadius}px 0 0`,\n        transition: theme.transitions.create(\"border-color\", {\n          duration: theme.transitions.duration.shortest,\n        }),\n      },\n      \"& .ql-container\": {\n        borderRadius: `0 0 ${theme.shape.borderRadius}px ${theme.shape.borderRadius}px`,\n        transition: theme.transitions.create(\"border-color\", {\n          duration: theme.transitions.duration.shortest,\n        }),\n      },\n      \"& .ql-editor\": {\n        minHeight: 100,\n        fontFamily: theme.typography.fontFamily,\n        fontSize: \".875rem\",\n        color: theme.palette.text.primary,\n        \"&.ql-blank::before\": {\n          fontStyle: \"normal\",\n          color: theme.palette.text.disabled,\n        },\n      },\n\n      // highlight border on focus\n      \"&:focus-within .ql-toolbar.ql-snow, &:focus-within .ql-container.ql-snow\": {\n        borderColor: theme.palette.primary.main,\n      },\n\n      // buttons stroke/fill colour matching\n      \"& .ql-snow.ql-toolbar button, & .ql-snow .ql-picker-label\": {\n        borderRadius: theme.shape.borderRadius / 2,\n        transition: theme.transitions.create(\"background-color\", {\n          duration: theme.transitions.duration.shortest,\n        }),\n      },\n      \"& .ql-snow .ql-stroke\": {\n        stroke: theme.palette.text.primary,\n        transition: theme.transitions.create(\"stroke\", {\n          duration: theme.transitions.duration.shortest,\n        }),\n      },\n      \"& .ql-snow .ql-fill\": {\n        fill: theme.palette.text.primary,\n        transition: theme.transitions.create(\"fill\", {\n          duration: theme.transitions.duration.shortest,\n        }),\n      },\n\n      // colour buttons on hover\n      \"& button:hover .ql-stroke\": {\n        stroke: `${theme.palette.primary.main} !important`,\n      },\n      \"& button:hover .ql-fill\": {\n        fill: `${theme.palette.primary.main} !important`,\n      },\n\n      // highlight buttons when selected/active\n      \"& .ql-snow.ql-toolbar .ql-active\": {\n        backgroundColor: theme.palette.primary.light,\n        \"& .ql-stroke\": {\n          stroke: `${theme.palette.primary.main} !important`,\n        },\n        \"& .ql-fill\": {\n          fill: `${theme.palette.primary.main} !important`,\n        },\n      },\n\n      // dropdown styling\n      \"& .ql-snow.ql-toolbar button:hover, & .ql-snow .ql-toolbar button:hover, & .ql-snow.ql-toolbar button:focus, & .ql-snow .ql-toolbar button:focus, & .ql-snow.ql-toolbar button.ql-active, & .ql-snow .ql-toolbar button.ql-active, & .ql-snow.ql-toolbar .ql-picker-label:hover, & .ql-snow .ql-toolbar .ql-picker-label:hover, & .ql-snow.ql-toolbar .ql-picker-label.ql-active, & .ql-snow .ql-toolbar .ql-picker-label.ql-active, & .ql-snow.ql-toolbar .ql-picker-item:hover, & .ql-snow .ql-toolbar .ql-picker-item:hover, & .ql-snow.ql-toolbar .ql-picker-item.ql-selected, & .ql-snow .ql-toolbar .ql-picker-item.ql-selected\": {\n        color: theme.palette.primary.main,\n\n        \"& polygon\": { stroke: theme.palette.primary.main + \" !important\" },\n      },\n    },\n  })\n);\n\nasync function asyncUploader(ref, file) {\n  const documentRef = bucket.ref(\"RTE\").child(ref);\n  const snapShot = await documentRef.put(file);\n  const downloadUrl = await bucket\n    .ref(\"RTE\")\n    .child(snapShot.metadata.fullPath)\n    .getDownloadURL();\n  return downloadUrl;\n}\nconst imageHandler = quillRef => () => {\n  const now = new Date();\n  const quill = quillRef.current.getEditor();\n  let fileInput = document.body.querySelector(\"input.ql-image[type=file]\");\n  if (fileInput == null) {\n    fileInput = document.createElement(\"input\");\n    fileInput.setAttribute(\"type\", \"file\");\n    fileInput.setAttribute(\n      \"accept\",\n      \"image/png, image/gif, image/jpeg, image/bmp, image/x-icon\"\n    );\n    fileInput.classList.add(\"ql-image\");\n    fileInput.addEventListener(\"change\", async () => {\n      console.log(\"detected file\");\n      if (fileInput.files != null && fileInput.files[0] != null) {\n        const ref = `quill-images/${now.getTime()}/${fileInput.files[0].name}`;\n        const downloadUrl = await asyncUploader(ref, fileInput.files[0]);\n        console.log(downloadUrl);\n        let range = quill.getSelection(true);\n        quill.updateContents(\n          new Delta()\n            .retain(range.index)\n            .delete(range.length)\n            .insert({ image: downloadUrl }),\n          \"user\"\n        );\n\n        fileInput.value = \"\";\n        document.body.removeChild(fileInput);\n      }\n    });\n    document.body.appendChild(fileInput);\n  }\n  fileInput.click();\n};\n\nconst RichTextEditor = props => {\n  const classes = useStyles();\n  const editorContext = useContext(EditorContext);\n  const quillRef = useRef(null);\n  useEffect(() => {\n    if (quillRef.current) {\n      quillRef.current\n        .getEditor()\n        .getModule(\"toolbar\")\n        .addHandler(\"image\", imageHandler(quillRef));\n    }\n  }, [quillRef]);\n  if (editorContext.fieldType !== FieldType.richText) return <></>;\n  return (\n    <EditorModel>\n      <ReactQuill\n        //placeholder={placeholder}\n        value={editorContext.editorValue}\n        ref={quillRef}\n        onChange={val => {\n          // const dataURLregEx = /\"data:.*?\"/;\n          // let matches = val.match(dataURLregEx);\n          // delete matches.index;\n          // delete matches.input;\n          // delete matches.groups;\n          // console.log(matches);\n          editorContext.setEditorValue(val);\n        }}\n        theme=\"snow\"\n        className={classes.quillEditor}\n        //  preserveWhiteSpace\n        modules={{\n          // toolbar: [\n          //   ['image']\n          // ],\n          imageDrop: true,\n          toolbar: {\n            container: [\n              [\"bold\", \"italic\", \"underline\"],\n              [{ header: [1, 2, 3, 4, false] }],\n              [{ list: \"bullet\" }, { list: \"ordered\" }],\n              [{ indent: \"-1\" }, { indent: \"+1\" }],\n              [\"blockquote\", \"code-block\", \"image\", \"video\"],\n              [\"link\"],\n            ],\n          },\n          clipboard: {\n            matchVisual: false,\n          },\n        }}\n      />\n    </EditorModel>\n  );\n};\nexport default RichTextEditor;\n","import { db } from \"../../firebase\";\n\nimport Button from \"@material-ui/core/Button\";\nimport React, { useEffect, useReducer, useContext } from \"react\";\nimport equals from \"ramda/es/equals\";\nimport firebase from \"firebase/app\";\nimport { algoliaUpdateDoc } from \"../../firebase/callables\";\nimport { FireTableFilter, FiretableOrderBy } from \".\";\nimport { SnackContext } from \"../../contexts/snackContext\";\n\nconst CAP = 1000; // safety  paramter sets the  upper limit of number of docs fetched by this hook\n\nconst tableReducer = (prevState: any, newProps: any) => {\n  return { ...prevState, ...newProps };\n};\nconst tableInitialState = {\n  rows: [],\n  prevFilters: null,\n  prevPath: null,\n  prevOrderBy: null,\n  path: null,\n  filters: [],\n  prevLimit: 0,\n  limit: 20,\n  loading: true,\n  cap: CAP,\n};\n\nconst useTable = (initialOverrides: any) => {\n  const snackContext = useContext(SnackContext);\n\n  const [tableState, tableDispatch] = useReducer(tableReducer, {\n    ...tableInitialState,\n    ...initialOverrides,\n  });\n  /**  set collection listener\n   *  @param filters\n   *  @param limit max number of docs\n   *  @param orderBy\n   */\n  const getRows = (\n    filters: {\n      key: string;\n      operator: \"==\" | \"<\" | \">\" | \">=\" | \"<=\";\n      value: string;\n    }[],\n    limit: number,\n    orderBy: FiretableOrderBy\n  ) => {\n    //unsubscribe from old path\n    if (tableState.prevPath && tableState.path !== tableState.prevPath) {\n      tableState.unsubscribe();\n    }\n    //updates previous values\n    tableDispatch({\n      prevFilters: filters,\n      prevLimit: limit,\n      prevPath: tableState.path,\n      prevOrderBy: tableState.orderBy,\n      loading: true,\n    });\n    let query:\n      | firebase.firestore.CollectionReference\n      | firebase.firestore.Query = db.collection(tableState.path);\n\n    filters.forEach(filter => {\n      query = query.where(filter.key, filter.operator, filter.value);\n    });\n    if (orderBy) {\n      orderBy.forEach(order => {\n        query = query.orderBy(order.key, order.direction);\n      });\n    }\n    const unsubscribe = query.limit(limit).onSnapshot(\n      snapshot => {\n        if (snapshot.docs.length > 0) {\n          const rows = snapshot.docs\n            .map(doc => {\n              const data = doc.data();\n              const id = doc.id;\n              const ref = doc.ref;\n\n              return { ...data, id, ref };\n            })\n            .filter(doc => doc.id !== \"_FIRETABLE_\"); //removes schema file\n          tableDispatch({\n            rows,\n            loading: false,\n          });\n        } else {\n          tableDispatch({\n            rows: [],\n            loading: false,\n          });\n        }\n      },\n      (error: Error) => {\n        //TODO:callable to create new index\n        if (error.message.includes(\"indexes?create_composite=\")) {\n          const url =\n            `https://console.firebase.google.com/project/${process.env.REACT_APP_FIREBASE_PROJECT_ID}/database/firestore/` +\n            \"indexes?create_composite=\" +\n            error.message.split(\"indexes?create_composite=\")[1];\n          console.log(url);\n          snackContext.open({\n            message: \"needs a new index\",\n            duration: 10000,\n            action: (\n              <Button\n                color=\"secondary\"\n                onClick={() => {\n                  window.open(url, \"_blank\");\n                }}\n              >\n                create\n              </Button>\n            ),\n          });\n        }\n      }\n    );\n    tableDispatch({ unsubscribe });\n  };\n  useEffect(() => {\n    const {\n      prevFilters,\n      filters,\n      prevLimit,\n      prevOrderBy,\n      limit,\n      prevPath,\n      path,\n      orderBy,\n      unsubscribe,\n    } = tableState;\n    if (\n      !equals(prevFilters, filters) ||\n      prevLimit !== limit ||\n      prevPath !== path ||\n      prevOrderBy !== orderBy\n    ) {\n      if (path) getRows(filters, limit, orderBy);\n    }\n    return () => {\n      if (unsubscribe) {\n        tableState.unsubscribe();\n      }\n    };\n  }, [\n    tableState.filters,\n    tableState.limit,\n    tableState.path,\n    tableState.orderBy,\n  ]);\n  /**  used deleting row/doc\n   *  @param rowIndex local position\n   *  @param documentId firestore document id\n   */\n  const deleteRow = (rowIndex: number, documentId: string) => {\n    //remove row locally\n    tableState.rows.splice(rowIndex, 1);\n    tableDispatch({ rows: tableState.rows });\n    // delete document\n    db.collection(tableState.path)\n      .doc(documentId)\n      .delete();\n  };\n  /**  used for setting up the table listener\n   *  @param tableCollection firestore collection path\n   *  @param filters specify filters to be applied to the query\n   */\n  const setTable = (tableCollection: string, filters?: FireTableFilter) => {\n    if (tableCollection !== tableState.path) {\n      tableDispatch({ path: tableCollection, rows: [] });\n    }\n    if (filters) tableDispatch({ filters });\n  };\n\n  /**  creating new document/row\n   *  @param data(optional: default will create empty row)\n   */\n  const addRow = async (data?: any) => {\n    const ref = await db.collection(tableState.path).add({\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      updatedAt: firebase.firestore.FieldValue.serverTimestamp(),\n      ...data,\n    });\n    if (data) {\n      algoliaUpdateDoc({\n        collection: ref.parent.path,\n        id: ref.id,\n        doc: { ...data },\n      });\n    }\n  };\n  /**  used for incrementing the number of rows fetched\n   *  @param additionalRows number additional rows to be fetched (optional: default is 20)\n   */\n  const moreRows = (additionalRows?: number) => {\n    tableDispatch({\n      limit: tableState.limit + (additionalRows ? additionalRows : 20),\n    });\n  };\n\n  const tableActions = {\n    deleteRow,\n    setTable,\n    addRow,\n    moreRows,\n    dispatch: tableDispatch,\n  };\n  return [tableState, tableActions];\n};\n\nexport default useTable;\n","import useTable from \"./useTable\";\nimport useTableConfig from \"./useTableConfig\";\n\nexport type FiretableActions = {\n  column: {\n    add: Function;\n    resize: Function;\n    rename: Function;\n    remove: Function;\n    update: Function;\n    reorder: Function;\n  };\n  row: { add: Function; delete: Function; more: Function };\n  table: {\n    set: Function;\n    filter: Function;\n    updateConfig: Function;\n    orderBy: Function;\n  };\n};\n\nexport type FiretableState = {\n  config: { rowHeight: number };\n  columns: any[];\n  rows: any[];\n  rowsLimit: number;\n\n  loadingRows: boolean;\n  loadingColumns: boolean;\n};\nexport type FireTableFilter = {\n  key: string;\n  operator: \"==\" | \"<\" | \">\" | \">=\" | \"<=\" | string;\n  value: string | number | boolean | string[];\n};\nexport type FiretableOrderBy = { key: string; direction: \"asc\" | \"desc\" }[];\nconst useFiretable = (\n  collectionName: string,\n  filters?: FireTableFilter[],\n  orderBy?: FiretableOrderBy\n) => {\n  const [tableConfig, configActions] = useTableConfig(collectionName);\n  const [tableState, tableActions] = useTable({\n    path: collectionName,\n    filters,\n    orderBy,\n  });\n  /** set collection path of table */\n  const setTable = (\n    collectionName: string,\n    filters: FireTableFilter[],\n    orderBy: FiretableOrderBy\n  ) => {\n    if (collectionName !== tableState.path || filters !== tableState.filters) {\n      configActions.setTable(collectionName);\n      tableActions.setTable(collectionName, filters);\n    }\n  };\n  const filterTable = (filters: FireTableFilter[]) => {\n    tableActions.dispatch({ filters });\n  };\n  const setOrder = (orderBy: FiretableOrderBy) => {\n    tableActions.dispatch({ orderBy });\n  };\n  const state: FiretableState = {\n    columns: tableConfig.columns,\n    config: { rowHeight: tableConfig.rowHeight },\n    rows: tableState.rows,\n    rowsLimit: tableState.limit,\n    loadingRows: tableState.loading,\n    loadingColumns: tableConfig.loading,\n  };\n  const actions: FiretableActions = {\n    column: {\n      add: configActions.add,\n      resize: configActions.resize,\n      rename: configActions.rename,\n      update: configActions.updateColumn,\n      remove: configActions.remove,\n      reorder: configActions.reorder,\n    },\n    row: {\n      add: tableActions.addRow,\n      delete: tableActions.deleteRow,\n      more: tableActions.moreRows,\n    },\n    table: {\n      updateConfig: configActions.updateConfig,\n      set: setTable,\n      orderBy: setOrder,\n      filter: filterTable,\n    },\n  };\n\n  return { tableState: state, tableActions: actions };\n};\n\nexport default useFiretable;\n","import React, { useState } from \"react\";\nimport EditorContext from \"../contexts/editorContext\";\nimport { FieldType } from \"../components/Fields\";\n\ninterface IEditorProviderProps {\n  children: React.ReactNode;\n}\nexport const EditorProvider: React.FC<IEditorProviderProps> = ({\n  children,\n}) => {\n  const [fieldType, setFieldType] = useState<FieldType | null>(null);\n  const [props, setProps] = useState<any>();\n  const [editorValue, setEditorValue] = useState<null | string>(null);\n  const close = () => {\n    if (editorValue !== props.value) {\n      props.onSubmit(editorValue);\n    }\n    setEditorValue(null);\n    setFieldType(null);\n    setProps(null);\n  };\n  const cancel = () => {\n    setEditorValue(null);\n    setFieldType(null);\n    setProps(null);\n  };\n  const open = (\n    props: {\n      row: any;\n      onSubmit: any;\n      fieldName: string;\n      value: string;\n      anchorEl: any;\n    },\n    type: FieldType\n  ) => {\n    setFieldType(type);\n    setProps(props);\n    setEditorValue(props.value);\n  };\n  return (\n    <EditorContext.Provider\n      value={{\n        cancel,\n        close,\n        open,\n        fieldType,\n        editorValue,\n        setEditorValue,\n      }}\n    >\n      {children}\n    </EditorContext.Provider>\n  );\n};\n","import React, { useState, useEffect, lazy, Suspense } from \"react\";\nimport _isEmpty from \"lodash/isEmpty\";\n\nimport {\n  Button,\n  IconButton,\n  Typography,\n  Grid as MuiGrid,\n  Tooltip,\n} from \"@material-ui/core\";\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport Confirmation from \"components/Confirmation\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DuplicateIcon from \"@material-ui/icons/FileCopy\";\nimport AddIcon from \"@material-ui/icons/AddCircle\";\n\nimport useStyles from \"./useStyle\";\n\nimport Loading from \"../../components/Loading\";\nimport Grid from \"./Grid\";\nimport LongTextEditor from \"../LongTextEditor\";\nimport RichTextEditor from \"../RichTextEditor\";\n\nimport useFiretable, {\n  FireTableFilter,\n  FiretableOrderBy,\n} from \"../../hooks/useFiretable\";\nimport { functions } from \"../../firebase\";\nimport { CLOUD_FUNCTIONS } from \"firebase/callables\";\n\nimport { FieldType, getFieldIcon } from \"../Fields\";\nimport {\n  cellFormatter,\n  onCellSelected,\n  onGridRowsUpdated,\n  singleSelectEditor,\n  editable,\n  onSubmit,\n} from \"./grid-fns\";\nimport { EditorProvider } from \"../../util/EditorProvider\";\n\nconst Hotkeys = lazy(() => import(\"./HotKeys\"));\nconst TableHeader = lazy(() => import(\"./TableHeader\"));\nconst SearchBox = lazy(() => import(\"../SearchBox\"));\nconst DocSelect = lazy(() => import(\"../Fields/DocSelect\"));\nconst ColumnEditor = lazy(() => import(\"./ColumnEditor/index\"));\n\nconst deleteAlgoliaRecord = functions.httpsCallable(\n  CLOUD_FUNCTIONS.deleteAlgoliaRecord\n);\n\ninterface Props {\n  collection: string;\n  filters: FireTableFilter[];\n}\n\nfunction Table(props: Props) {\n  const { collection, filters } = props;\n  const [orderBy, setOrderBy] = useState<FiretableOrderBy>([]);\n  const { tableState, tableActions } = useFiretable(\n    collection,\n    filters,\n    orderBy\n  );\n  const [selectedCell, setSelectedCell] = useState<{ row: any; column: any }>({\n    row: {},\n    column: {},\n  });\n\n  const [search, setSearch] = useState({\n    config: undefined,\n    collection: \"\",\n    onSubmit: undefined,\n  });\n\n  useEffect(() => {\n    tableActions.table.set(collection, filters, orderBy);\n  }, [collection, filters]);\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n\n  const [header, setHeader] = useState<any | null>();\n\n  const handleCloseHeader = () => {\n    setHeader(null);\n    setAnchorEl(null);\n  };\n  const clearSearch = () => {\n    setSearch({\n      config: undefined,\n      collection: \"\",\n      onSubmit: undefined,\n    });\n  };\n  const docSelect = (column: any) => (props: any) => (\n    <Suspense fallback={<div />}>\n      <DocSelect\n        {...props}\n        onSubmit={onSubmit(column.key, props.row)}\n        collectionPath={column.collectionPath}\n        config={column.config}\n        setSearch={setSearch}\n      />\n    </Suspense>\n  );\n  const handleClick = (headerProps: any) => (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    handleCloseHeader();\n    setAnchorEl(event.currentTarget);\n    setHeader(headerProps);\n  };\n\n  const headerRenderer = (props: any) => {\n    const { column } = props;\n    switch (column.key) {\n      case \"new\":\n        return (\n          <div className={classes.header}>\n            {column.name}\n            <IconButton size=\"small\" onClick={handleClick(props)}>\n              <AddIcon />\n            </IconButton>\n          </div>\n        );\n      default:\n        return (\n          <Tooltip title={props.column.key}>\n            <MuiGrid\n              container\n              className={classes.header}\n              alignItems=\"center\"\n              wrap=\"nowrap\"\n            >\n              <MuiGrid\n                item\n                onClick={() => {\n                  navigator.clipboard.writeText(props.column.key);\n                }}\n                className={classes.columnIconContainer}\n              >\n                {getFieldIcon(props.column.type)}\n              </MuiGrid>\n              <MuiGrid\n                item\n                xs\n                onClick={() => {\n                  navigator.clipboard.writeText(props.column.key);\n                }}\n                className={classes.columnNameContainer}\n              >\n                <Typography\n                  variant=\"h6\"\n                  noWrap\n                  className={classes.columnName}\n                  component=\"span\"\n                >\n                  {props.column.name}\n                </Typography>\n              </MuiGrid>\n\n              <MuiGrid item>\n                <IconButton\n                  color={\n                    orderBy[0] && orderBy[0].key === column.key\n                      ? \"primary\"\n                      : \"default\"\n                  }\n                  disableFocusRipple={true}\n                  size=\"small\"\n                  onClick={() => {\n                    console.log(\n                      orderBy,\n                      orderBy[0] && orderBy[0].key === column.key,\n                      orderBy[0] && orderBy[0].direction === \"asc\"\n                    );\n                    if (\n                      orderBy[0] &&\n                      orderBy[0].key === column.key &&\n                      orderBy[0].direction === \"asc\"\n                    ) {\n                      const ordering: FiretableOrderBy = [\n                        { key: column.key, direction: \"desc\" },\n                      ];\n\n                      tableActions.table.orderBy(ordering);\n                      //setOrderBy(ordering) #BROKENINSIDE\n                    } else {\n                      const ordering: FiretableOrderBy = [\n                        { key: column.key, direction: \"asc\" },\n                      ];\n                      tableActions.table.orderBy(ordering);\n                      //setOrderBy(ordering) #BROKENINSIDE\n                    }\n                  }}\n                >\n                  <ImportExportIcon />\n                </IconButton>\n                <IconButton\n                  disableFocusRipple={true}\n                  size=\"small\"\n                  onClick={handleClick(props)}\n                >\n                  <SettingsIcon />\n                </IconButton>\n              </MuiGrid>\n            </MuiGrid>\n          </Tooltip>\n        );\n    }\n  };\n\n  const onHeaderDrop = (dragged: any, target: any) => {\n    tableActions.column.reorder(dragged, target);\n  };\n  let columns: any[] = [];\n  if (!tableState.loadingColumns && tableState.columns) {\n    columns = tableState.columns\n      .filter((column: any) => !column.hidden)\n      .map((column: any) => ({\n        draggable: true,\n        editable: editable(column.type),\n        resizable: true,\n        //frozen: column.fixed,\n        headerRenderer: headerRenderer,\n        formatter:\n          column.type === FieldType.documentSelect\n            ? docSelect(column)\n            : cellFormatter(column),\n        editor:\n          column.type === FieldType.singleSelect\n            ? singleSelectEditor(column.options)\n            : false,\n        ...column,\n        width: column.width ? (column.width > 380 ? 380 : column.width) : 150,\n      }));\n    columns.push({\n      isNew: true,\n      key: \"new\",\n      name: \"Add column\",\n      type: FieldType.last,\n      width: 160,\n      headerRenderer: headerRenderer,\n      formatter: (props: any) => (\n        <>\n          <Confirmation\n            message={{\n              title: \"Delete Row\",\n              body: \"Are you sure you want to delete this row?\",\n              confirm: (\n                <>\n                  <DeleteIcon /> Delete\n                </>\n              ),\n            }}\n          >\n            <IconButton\n              color=\"primary\"\n              onClick={async () => {\n                props.row.ref.delete();\n                await deleteAlgoliaRecord({\n                  id: props.row.ref.id,\n                  collection: props.row.ref.parent.path,\n                });\n              }}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </Confirmation>\n          <IconButton\n            color=\"secondary\"\n            onClick={() => {\n              const clonedRow = { ...props.row };\n              // remove metadata\n              delete clonedRow.ref;\n              delete clonedRow.rowHeight;\n              delete clonedRow.updatedAt;\n              delete clonedRow.createdAt;\n              tableActions.row.add(clonedRow);\n            }}\n          >\n            <DuplicateIcon />\n          </IconButton>\n        </>\n      ),\n    });\n  }\n\n  const rowHeight = tableState.config.rowHeight;\n\n  const rows =\n    tableState.rows.length !== 0\n      ? [...tableState.rows.map((row: any) => ({ rowHeight, ...row })), {}]\n      : [];\n  const RowRenderer = (props: any) => {\n    const { renderBaseRow, ...rest } = props;\n    if (rows.length === rest.idx + 1) {\n      return (\n        <Button\n          onClick={() => {\n            addRow();\n          }}\n        >\n          Add a new row\n        </Button>\n      );\n    } else {\n      return renderBaseRow(rest);\n    }\n  };\n  /**\n   * Intercepting row getter to detect when table is requesting the last local row the bottom and fetch more rows\n   * @param index\n   */\n  const handleRowGetter = (index: number) => {\n    if (tableState.rowsLimit - index === 1) {\n      tableActions.row.more();\n    }\n    return rows[index];\n  };\n  const addRow = (data?: any) => {\n    if (filters) {\n      // adds filter data into the new row\n      const filtersData = filters.reduce(\n        (accumulator: any, currentValue: FireTableFilter) => ({\n          ...accumulator,\n          [currentValue.key]: currentValue.value,\n        }),\n        {}\n      );\n      tableActions.row.add({ ...filtersData, ...data });\n    } else tableActions.row.add({ ...data });\n  };\n  return (\n    <EditorProvider>\n      <Suspense fallback={<Loading message=\"Loading header\" />}>\n        <Hotkeys selectedCell={selectedCell} />\n        <TableHeader\n          tableActions={tableActions}\n          collection={collection}\n          rowHeight={rowHeight}\n          updateConfig={tableActions.table.updateConfig}\n          columns={columns}\n          filters={filters}\n          addRow={addRow}\n        />\n      </Suspense>\n      {!tableState.loadingColumns ? (\n        <Grid\n          key={`${collection}-grid`}\n          onHeaderDrop={onHeaderDrop}\n          rowHeight={rowHeight}\n          columns={columns}\n          RowRenderer={RowRenderer}\n          handleRowGetter={handleRowGetter}\n          // TODO: Remove this fixed height using flexbox\n          tableHeight=\"calc(100vh - 120px)\"\n          onGridRowsUpdated={onGridRowsUpdated}\n          rows={rows}\n          resizeColumn={tableActions.column.resize}\n          loadingRows={tableState.loadingRows}\n          addRow={addRow}\n          setSelectedCell={setSelectedCell}\n        />\n      ) : (\n        <Loading message=\"Fetching columns\" />\n      )}\n      <Suspense fallback={<Loading message=\"Loading helpers\" />}>\n        <ColumnEditor\n          handleClose={handleCloseHeader}\n          anchorEl={anchorEl}\n          column={header && header.column}\n          actions={tableActions.column}\n        />\n\n        <SearchBox searchData={search} clearSearch={clearSearch} />\n        <RichTextEditor />\n        <LongTextEditor />\n      </Suspense>\n    </EditorProvider>\n  );\n}\nexport default Table;\n","import React from \"react\";\nimport queryString from \"query-string\";\nimport Navigation from \"../components/Navigation\";\nimport Table from \"../components/Table\";\n\nimport { FireTableFilter } from \"../hooks/useFiretable\";\n\nimport useRouter from \"../hooks/useRouter\";\n\nexport default function TableView() {\n  const router = useRouter();\n  const tableCollection = router.location.pathname.split(\"/\")[2];\n  let filters: FireTableFilter[] = [];\n  const parsed = queryString.parse(router.location.search);\n  if (typeof parsed.filters === \"string\") {\n    // decoded\n    //[{\"key\":\"cohort\",\"operator\":\"==\",\"value\":\"AMS1\"}]\n    filters = JSON.parse(parsed.filters);\n    //TODO: json schema validator\n  }\n\n  return (\n    <Navigation>\n      <Table collection={tableCollection} filters={filters} />\n    </Navigation>\n  );\n}\n"],"sourceRoot":""}