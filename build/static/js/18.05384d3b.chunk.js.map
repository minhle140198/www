{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","../node_modules/@material-ui/core/esm/Chip/Chip.js","../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","components/Table/ColumnEditor/SelectOptionsInput.tsx","components/Table/ColumnEditor/DocInput.tsx","components/Table/ColumnEditor/index.tsx"],"names":["createSvgIcon","React","createElement","d","Chip","forwardRef","props","ref","avatarProp","avatar","classes","className","clickableProp","clickable","_props$color","color","ComponentProp","component","deleteIconProp","deleteIcon","_props$disabled","disabled","iconProp","icon","label","onClick","onDelete","onKeyUp","_props$size","size","_props$variant","variant","other","_objectWithoutProperties","chipRef","useRef","handleRef","useForkRef","handleDeleteIconClick","event","stopPropagation","small","Component","ButtonBase","moreProps","customClasses","clsx","concat","capitalize","deleteIconSmall","isValidElement","cloneElement","CancelIcon","avatarSmall","iconSmall","_extends","role","undefined","root","outlined","primary","outlinedPrimary","secondary","outlinedSecondary","sizeSmall","deletable","tabIndex","currentTarget","target","key","current","blur","labelSmall","withStyles","theme","backgroundColor","palette","type","grey","deleteIconColor","fade","text","fontFamily","typography","fontSize","pxToRem","display","alignItems","justifyContent","height","getContrastText","borderRadius","whiteSpace","transition","transitions","create","cursor","outline","textDecoration","border","padding","verticalAlign","boxSizing","opacity","pointerEvents","marginLeft","marginRight","width","contrastText","dark","colorPrimary","main","colorSecondary","userSelect","WebkitTapHighlightColor","emphasize","boxShadow","shadows","clickableColorPrimary","clickableColorSecondary","deletableColorPrimary","deletableColorSecondary","action","hoverOpacity","avatarColorPrimary","avatarColorSecondary","iconColorPrimary","iconColorSecondary","overflow","textOverflow","paddingLeft","paddingRight","margin","deleteIconColorPrimary","deleteIconColorSecondary","deleteIconOutlinedColorPrimary","deleteIconOutlinedColorSecondary","name","InputAdornment","children","_props$component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","position","variantProp","muiFormControl","useFormControl","FormControlContext","Provider","value","hiddenLabel","filled","start","positionStart","end","positionEnd","dense","marginDense","Typography","maxHeight","marginTop","useStyles","makeStyles","Theme","createStyles","field","chipsContainer","flexWrap","maxWidth","spacing","chip","SelectOptionsInput","options","setValue","useState","newOption","setNewOption","handleAdd","useEffect","data","Grid","container","direction","item","TextField","onChange","e","onKeyPress","InputProps","endAdornment","IconButton","edge","aria-label","map","option","optionToDelete","newOptions","filter","formControl","minWidth","chips","MenuProps","PaperProps","style","ITEM_HEIGHT","DocInput","collectionPath","useTableConfig","tableConfig","tableConfigActions","columns","setColumns","primaryKeys","setPrimaryKeys","secondaryKeys","setSecondaryKeys","tables","useContext","TablesContext","FormControl","InputLabel","htmlFor","Select","v","setTable","id","inputProps","table","MenuItem","collection","multiple","input","Input","renderValue","selected","length","column","button","selectEmpty","toggleGrouped","shape","ColumnEditor","anchorEl","handleClose","actions","config","values","setValues","flags","setFlags","oldValues","isNew","flag","clearValues","disableAdd","Popover","open","onClose","defaultValue","FieldsDropDown","preventDefault","FieldType","singleSelect","multiSelect","documentSelect","Button","add","updatables","includes","push","update","idx","Confirmation","message","customBody","remove"],"mappings":"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","file":"static/js/18.05384d3b.chunk.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, fade } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = fade(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO remove in V5\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: fade(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: fade(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: fade(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: fade(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: fade(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\nvar Chip = React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Ignore events from children of `Chip`.\n\n\n    if (event.currentTarget !== event.target) {\n      return;\n    }\n\n    var key = event.key;\n\n    if (onDelete && (key === 'Backspace' || key === 'Delete')) {\n      onDelete(event);\n    } else if (key === 'Escape' && chipRef.current) {\n      chipRef.current.blur();\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && React.isValidElement(deleteIconProp) ? React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && React.isValidElement(avatarProp)) {\n    avatar = React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && React.isValidElement(iconProp)) {\n    icon = React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: the Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      primary: classes.outlinedPrimary,\n      secondary: classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes = {\n  /**\n   * Avatar element.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If false, the chip will not be clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the chip should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback function fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the chip.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['default', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return React.createElement(FormControlContext.Provider, {\n    value: null\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, {\n      filled: classes.filled\n    }[variant], {\n      start: classes.positionStart,\n      end: classes.positionEnd\n    }[position], {\n      dense: classes.marginDense\n    }[muiFormControl.margin]),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import React, { useEffect, useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport _includes from \"lodash/includes\";\nimport _camelCase from \"lodash/camelCase\";\n\nimport AddIcon from \"@material-ui/icons/AddCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nconst useStyles = makeStyles(Theme =>\n  createStyles({\n    root: {},\n    field: {\n      width: \"100%\",\n    },\n    chipsContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexWrap: \"wrap\",\n      maxWidth: 300,\n      padding: Theme.spacing(1),\n    },\n    chip: {\n      margin: Theme.spacing(0.5),\n    },\n  })\n);\n\nexport default function SelectOptionsInput(props: any) {\n  const { options, setValue } = props;\n  const classes = useStyles();\n  const [newOption, setNewOption] = useState(\"\");\n  const handleAdd = () => {\n    // setOptions([...options, newOption]);\n    if (newOption !== \"\") {\n      setValue(\"options\", [...options, newOption]);\n      setNewOption(\"\");\n    }\n  };\n  const handleDelete = (optionToDelete: string) => () => {\n    const newOptions = options.filter(\n      (option: string) => option !== optionToDelete\n    );\n    setValue(\"options\", newOptions);\n  };\n\n  useEffect(() => {\n    setValue({ data: { options } });\n  }, [options]);\n\n  return (\n    <Grid container direction=\"column\" className={classes.root}>\n      <Grid item>\n        <TextField\n          value={newOption}\n          className={classes.field}\n          label=\"New Option\"\n          onChange={e => {\n            setNewOption(e.target.value);\n          }}\n          onKeyPress={(e: any) => {\n            if (e.key === \"Enter\") {\n              handleAdd();\n            }\n          }}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"toggle password visibility\"\n                  onClick={(e: any) => {\n                    handleAdd();\n                  }}\n                >\n                  {<AddIcon />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Grid>\n      <Grid item className={classes.chipsContainer}>\n        {options.map((option: string) => {\n          return (\n            <Chip\n              key={option}\n              label={option}\n              onDelete={handleDelete(option)}\n              className={classes.chip}\n            />\n          );\n        })}\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Select from \"@material-ui/core/Select\";\n\nimport TablesContext from \"../../../contexts/tablesContext\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport useTableConfig from \"../../../hooks/useFiretable/useTableConfig\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\n\nconst useStyles = makeStyles(Theme =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexWrap: \"wrap\",\n      maxWidth: 300,\n      padding: Theme.spacing(1),\n    },\n    chip: {\n      margin: Theme.spacing(0.5),\n    },\n    formControl: {\n      margin: Theme.spacing(1),\n      minWidth: 120,\n      maxWidth: 300,\n    },\n    chips: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n  })\n);\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nexport default function DocInput(props: any) {\n  const { collectionPath, setValue } = props;\n  const [tableConfig, tableConfigActions] = useTableConfig(\n    collectionPath ? collectionPath : \"initial\"\n  );\n\n  const [columns, setColumns] = useState<{ key: string; name: string }[]>([]);\n  const [primaryKeys, setPrimaryKeys] = useState<string[]>([]);\n  const [secondaryKeys, setSecondaryKeys] = useState<string[]>([]);\n\n  useEffect(() => {\n    setColumns(tableConfig.columns);\n  }, [tableConfig.columns]);\n\n  const classes = useStyles();\n  const tables = useContext(TablesContext);\n  const onChange = (e: any, v: any) => {\n    setValue(\"collectionPath\", v.props.value);\n    setPrimaryKeys([]);\n    setSecondaryKeys([]);\n    setColumns([]);\n    tableConfigActions.setTable(v.props.value);\n  };\n  useEffect(() => {\n    setValue(\"config\", {\n      primaryKeys,\n      secondaryKeys,\n    });\n  }, [primaryKeys, secondaryKeys]);\n  if (tables.value)\n    return (\n      <>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"select-secondary-multiple-chip\">\n            Table\n          </InputLabel>\n          <Select\n            value={collectionPath ? collectionPath : null}\n            onChange={onChange}\n            id={`select-key`}\n            inputProps={{\n              name: \"Table\",\n              id: \"table\",\n            }}\n          >\n            {tables.value.map(\n              (table: { collection: string; table: string }) => {\n                return (\n                  <MenuItem\n                    id={`select-collection-${table.collection}`}\n                    value={table.collection}\n                  >\n                    <>{table.collection}</>\n                  </MenuItem>\n                );\n              }\n            )}\n          </Select>\n        </FormControl>\n        {collectionPath ? (\n          <>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"select-primary-multiple-chip\">\n                Primary Text\n              </InputLabel>\n              <Select\n                multiple\n                value={primaryKeys}\n                onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                  setPrimaryKeys(event.target.value as string[]);\n                }}\n                input={<Input id=\"select-primary-multiple-chip\" />}\n                renderValue={selected => (\n                  <div className={classes.chips}>\n                    {(selected as string[]).map(value => (\n                      <Chip\n                        key={value}\n                        label={value}\n                        className={classes.chip}\n                      />\n                    ))}\n                  </div>\n                )}\n                MenuProps={MenuProps}\n              >\n                {columns &&\n                  columns.length !== 0 &&\n                  columns.map(column => (\n                    <MenuItem\n                      id={`select-primary-column-${column.key}`}\n                      key={column.key}\n                      value={column.key}\n                    >\n                      {column.name}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"select-secondary-multiple-chip\">\n                Secondary Text\n              </InputLabel>\n              <Select\n                multiple\n                value={secondaryKeys}\n                onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                  setSecondaryKeys(event.target.value as string[]);\n                }}\n                input={<Input id=\"select-secondary-multiple-chip\" />}\n                renderValue={selected => (\n                  <div className={classes.chips}>\n                    {(selected as string[]).map(value => (\n                      <Chip\n                        key={value}\n                        label={value}\n                        className={classes.chip}\n                      />\n                    ))}\n                  </div>\n                )}\n                MenuProps={MenuProps}\n              >\n                {columns &&\n                  columns.length !== 0 &&\n                  columns.map(column => (\n                    <MenuItem\n                      id={`select-secondary-column-${column.key}`}\n                      key={column.key}\n                      value={column.key}\n                    >\n                      {column.name}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          </>\n        ) : (\n          \"please select a table\"\n        )}\n      </>\n    );\n  else return <div />;\n}\n","import React, { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport Popper from \"@material-ui/core/Popper\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Popover from \"@material-ui/core/Popover\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { FieldsDropDown, isFieldType, FieldType } from \"../../Fields\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\n\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport FormatUnderlinedIcon from \"@material-ui/icons/FormatUnderlined\";\nimport FormatColorFillIcon from \"@material-ui/icons/FormatColorFill\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SelectOptionsInput from \"./SelectOptionsInput\";\n\nimport DocInput from \"./DocInput\";\nimport { Tooltip } from \"@material-ui/core\";\nimport Confirmation from \"../../Confirmation\";\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    container: {\n      padding: 15,\n    },\n    typography: {\n      padding: 1,\n    },\n\n    button: {\n      // margin: theme.spacing(1)\n    },\n    root: {\n      padding: 10,\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    toggleGrouped: {\n      margin: theme.spacing(0.5),\n      border: \"none\",\n      padding: theme.spacing(0, 1),\n      \"&:not(:first-child)\": {\n        borderRadius: theme.shape.borderRadius,\n      },\n      \"&:first-child\": {\n        borderRadius: theme.shape.borderRadius,\n      },\n    },\n  })\n);\n\nconst ColumnEditor = (props: any) => {\n  const { anchorEl, column, handleClose, actions } = props;\n\n  const [values, setValues] = useState({\n    type: null,\n    name: \"\",\n    options: [],\n    collectionPath: \"\",\n    config: {},\n  });\n  const [flags, setFlags] = useState(() => [\"\"]);\n  const classes = useStyles();\n\n  function handleChange(\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\n  ) {\n    event.stopPropagation();\n    event.preventDefault();\n    setValues(oldValues => ({\n      ...oldValues,\n      [event.target.name as string]: event.target.value,\n    }));\n  }\n  const setValue = (key: string, value: any) => {\n    setValues(oldValues => ({\n      ...oldValues,\n      [key]: value,\n    }));\n  };\n\n  useEffect(() => {\n    if (column && !column.isNew) {\n      setValues(oldValues => ({\n        ...oldValues,\n        name: column.name,\n        type: column.type,\n        key: column.key,\n        isNew: column.isNew,\n      }));\n      if (column.options) {\n        setValue(\"options\", column.options);\n      } else {\n        setValue(\"options\", []);\n      }\n      if (column.collectionPath) {\n        setValue(\"collectionPath\", column.collectionPath);\n      }\n      [\"resizable\", \"editable\", \"fixed\", \"hidden\"].map(flag => {\n        if (column[flag]) {\n          setFlags([...flags, flag]);\n        }\n      });\n    }\n  }, [column]);\n  const clearValues = () => {\n    setValues({\n      type: null,\n      name: \"\",\n      options: [],\n      collectionPath: \"\",\n      config: {},\n    });\n  };\n  const onClose = (event: any) => {\n    handleClose();\n    clearValues();\n  };\n\n  const handleToggle = (\n    event: React.MouseEvent<HTMLElement>,\n    newFlags: string[]\n  ) => {\n    setFlags(newFlags);\n  };\n\n  const createNewColumn = () => {\n    const { name, type, options, collectionPath, config } = values;\n\n    actions.add(name, type, { options, collectionPath, config });\n\n    handleClose();\n    clearValues();\n  };\n  const deleteColumn = () => {\n    actions.remove(props.column.idx);\n    handleClose();\n    clearValues();\n  };\n\n  const updateColumn = () => {\n    let updatables: { field: string; value: any }[] = [\n      { field: \"name\", value: values.name },\n      { field: \"type\", value: values.type },\n      { field: \"resizable\", value: flags.includes(\"resizable\") },\n      { field: \"editable\", value: flags.includes(\"editable\") },\n      { field: \"hidden\", value: flags.includes(\"hidden\") },\n      { field: \"fixed\", value: flags.includes(\"fixed\") },\n    ];\n    if (\n      values.type === FieldType.multiSelect ||\n      values.type === FieldType.singleSelect\n    ) {\n      updatables.push({\n        field: \"options\",\n        value: values.options,\n      });\n    }\n    if (values.type === FieldType.documentSelect) {\n      updatables.push({\n        field: \"collectionPath\",\n        value: values.collectionPath,\n      });\n      updatables.push({\n        field: \"config\",\n        value: values.config,\n      });\n    }\n    actions.update(props.column.idx, updatables);\n    handleClose();\n    clearValues();\n  };\n\n  const disableAdd = () => {\n    const { type, name, options, collectionPath, config } = values;\n    if (!type || name === \"\") return true;\n    //TODO: Add more validation\n    return false;\n  };\n  if (column) {\n    return (\n      <Popover\n        className={classes.root}\n        id={`id-${column.name}`}\n        open={!!anchorEl}\n        anchorEl={anchorEl}\n        onClose={onClose}\n      >\n        <Grid container className={classes.container} direction=\"column\">\n          {/* <ToggleButtonGroup\n            size=\"small\"\n            value={flags}\n            className={classes.toggleGrouped}\n            onChange={handleToggle}\n            arial-label=\"column settings\"\n          >\n            <Tooltip title=\"Editable Cells\">\n              <ToggleButton value=\"editable\" aria-label=\"editable\">\n                {flags.includes(\"editable\") ? <LockOpenIcon /> : <LockIcon />}\n              </ToggleButton>\n            </Tooltip>\n            <Tooltip title=\"Hide Column\">\n              <ToggleButton value=\"visible\" aria-label=\"visible\">\n                {flags.includes(\"visible\") ? (\n                  <VisibilityIcon />\n                ) : (\n                  <VisibilityOffIcon />\n                )}\n              </ToggleButton>\n            </Tooltip>\n            <Tooltip title=\"Fixed Column\">\n              <ToggleButton value=\"fixed\" aria-label=\"fixed\">\n                <FormatUnderlinedIcon />\n              </ToggleButton>\n            </Tooltip>\n            <Tooltip title=\"Resizable column\">\n              <ToggleButton value=\"resizable\" aria-label=\"resizable\">\n                <FormatColorFillIcon />\n              </ToggleButton>\n            </Tooltip>\n          </ToggleButtonGroup> */}\n          <TextField\n            label=\"Column name\"\n            name=\"name\"\n            defaultValue={values.name}\n            onChange={e => {\n              setValue(\"name\", e.target.value);\n            }}\n          />\n          <FormControl className={classes.formControl}>\n            <InputLabel htmlFor=\"Field-select\">Field Type</InputLabel>\n            {FieldsDropDown(values.type, handleChange)}\n\n            {(values.type === FieldType.singleSelect ||\n              values.type === FieldType.multiSelect) && (\n              <SelectOptionsInput\n                setValue={setValue}\n                options={values.options}\n              />\n            )}\n            {values.type === FieldType.documentSelect && (\n              <DocInput\n                setValue={setValue}\n                collectionPath={values.collectionPath}\n              />\n            )}\n            {column.isNew ? (\n              <Button onClick={createNewColumn} disabled={disableAdd()}>\n                Add\n              </Button>\n            ) : (\n              <Button disabled={disableAdd()} onClick={updateColumn}>\n                update\n              </Button>\n            )}\n            {!column.isNew && (\n              <Confirmation\n                message={{\n                  customBody:\n                    \"Are you sure you want to delete this nice column\",\n                }}\n              >\n                <Button\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  onClick={deleteColumn}\n                >\n                  <DeleteIcon /> Delete\n                </Button>\n              </Confirmation>\n            )}\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                handleClose();\n                clearValues();\n              }}\n            >\n              cancel\n            </Button>\n          </FormControl>\n        </Grid>\n      </Popover>\n    );\n  }\n  return <div />;\n};\n\nexport default ColumnEditor;\n"],"sourceRoot":""}