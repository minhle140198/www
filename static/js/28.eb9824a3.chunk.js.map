{"version":3,"sources":["components/Fields/Date.tsx"],"names":["useStyles","makeStyles","theme","createStyles","field","width","Date","props","classes","value","onSubmit","row","fieldType","isScrolling","handleDateChange","date","utils","DateFnsUtils","FieldType","className","toDate","onChange","format","emptyLabel"],"mappings":"yGAAA,wFAWMA,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,MAAO,CACLC,MAAO,aA6CEC,UAhCF,SAACC,GACZ,IAAMC,EAAUR,IAERS,EAAiDF,EAAjDE,MAAYC,GAAqCH,EAA1CI,IAA0CJ,EAArCG,UAAUE,EAA2BL,EAA3BK,UAA2BL,EAAhBM,YAEzC,SAASC,EAAiBC,GACpBA,GACFL,EAASK,GAIb,OACE,kBAAC,IAAD,CAAyBC,MAAOC,KAC7BL,IAAcM,IAAUH,KACvB,kBAAC,IAAD,CACEI,UAAWX,EAAQJ,MACnBK,MAAOA,GAASA,EAAMW,OAASX,EAAMW,SAAW,KAChDC,SAAUP,EACVQ,OAAO,WACPC,WAAW,kBAGb,kBAAC,IAAD,CACEd,MAAOA,EAAQA,EAAMW,SAAW,KAChCC,SAAUP,EACVQ,OAAO,mBACPC,WAAW","file":"static/js/28.eb9824a3.chunk.js","sourcesContent":["import React from \"react\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport { FieldType } from \".\";\nimport {\n  MuiPickersUtilsProvider,\n  DatePicker,\n  DateTimePicker,\n} from \"@material-ui/pickers\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    field: {\n      width: \"100%\",\n    },\n  })\n);\n// TODO: Create an interface for props\ninterface Props {\n  value: firebase.firestore.Timestamp | null;\n  row: { ref: firebase.firestore.DocumentReference; id: string };\n  onSubmit: Function;\n  fieldType: FieldType;\n  isScrolling: boolean;\n}\n\nconst Date = (props: Props) => {\n  const classes = useStyles();\n\n  const { value, row, onSubmit, fieldType, isScrolling } = props;\n  //if (isScrolling) return <div />;\n  function handleDateChange(date: Date | null) {\n    if (date) {\n      onSubmit(date);\n    }\n  }\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      {fieldType === FieldType.date ? (\n        <DatePicker\n          className={classes.field}\n          value={value && value.toDate ? value.toDate() : null}\n          onChange={handleDateChange}\n          format=\"dd/MM/yy\"\n          emptyLabel=\"select a date\"\n        />\n      ) : (\n        <DateTimePicker\n          value={value ? value.toDate() : null}\n          onChange={handleDateChange}\n          format=\"dd/MM/yy HH:mm a\"\n          emptyLabel=\"select a time\"\n        />\n      )}\n    </MuiPickersUtilsProvider>\n  );\n};\nexport default Date;\n"],"sourceRoot":""}