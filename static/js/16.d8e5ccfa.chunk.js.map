{"version":3,"sources":["hooks/useRouter.ts","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","views/AuthView.tsx"],"names":["useRouter","useContext","__RouterContext","Card","React","forwardRef","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","createElement","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","useStyles","makeStyles","createStyles","card","margin","minWidth","maxWidth","button","width","header","textAlign","AuthView","router","onClick","a","async","auth","signInWithPopup","googleProvider","history","replace","color"],"mappings":"yGAAA,qDAIe,SAASA,IACtB,OAAOC,qBAAWC,O,iCCLpB,gEAaIC,EAAOC,IAAMC,YAAW,SAAcC,EAAOC,GAC/C,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAgBJ,EAAMK,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAQC,YAAyBP,EAAO,CAAC,UAAW,YAAa,WAErE,OAAOF,IAAMU,cAAcC,IAAOC,YAAS,CACzCP,UAAWQ,YAAKT,EAAQU,KAAMT,GAC9BU,UAAWR,EAAS,EAAI,EACxBJ,IAAKA,GACJK,OAwBUQ,gBAzCK,CAElBF,KAAM,CACJG,SAAU,WAsCoB,CAChCC,KAAM,WADOF,CAEZjB,I,iCClDH,uDAeIoB,EAAcnB,IAAMC,YAAW,SAAqBC,EAAOC,GAC7D,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBe,EAAmBlB,EAAMmB,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDZ,EAAQC,YAAyBP,EAAO,CAAC,UAAW,YAAa,cAErE,OAAOF,IAAMU,cAAcY,EAAWV,YAAS,CAC7CP,UAAWQ,YAAKT,EAAQU,KAAMT,GAC9BF,IAAKA,GACJK,OAyBUQ,gBA5CK,CAElBF,KAAM,CACJS,QAAS,GACT,eAAgB,CACdC,cAAe,MAuCa,CAChCN,KAAM,kBADOF,CAEZG,I,8MCxCGM,EAAYC,KAAW,kBAC3BC,IAAa,CACXC,KAAM,CACJC,OAAQ,OACRC,SAAU,IACVC,SAAU,KAEZC,OAAQ,CACNC,MAAO,QAETC,OAAQ,CACNC,UAAW,eAOF,SAASC,IACtB,IAAMhC,EAAUqB,IACVY,EAASzC,cAKf,OACE,kBAAC,IAAD,CAAMS,UAAWD,EAAQwB,MACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYvB,UAAWD,EAAQ8B,QAA/B,cACA,kBAAC,IAAD,CAAQI,QARK,oBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACXE,IAAKC,gBAAgBC,MADV,OAEjBN,EAAOO,QAAQC,QAAQ,KAFN,sCAQgBC,MAAM,UAAUzC,UAAWD,EAAQ4B,QAAhE","file":"static/js/16.d8e5ccfa.chunk.js","sourcesContent":["import { useContext } from \"react\";\nimport { __RouterContext } from \"react-router\";\n// used to transform routerContext into a hook\n// TODO : find alternate solution as this uses an internal variable\nexport default function useRouter() {\n  return useContext(__RouterContext);\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React from \"react\";\n\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { googleProvider, auth } from \"../firebase\";\nimport useRouter from \"../hooks/useRouter\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    card: {\n      margin: \"auto\",\n      minWidth: 275,\n      maxWidth: 300,\n    },\n    button: {\n      width: \"100%\",\n    },\n    header: {\n      textAlign: \"center\",\n    },\n  })\n);\n\n// googleProvider.addScope(\"https://www.googleapis.com/auth/contacts.readonly\");\n\nexport default function AuthView() {\n  const classes = useStyles();\n  const router = useRouter();\n  const handleAuth = async () => {\n    await auth.signInWithPopup(googleProvider);\n    router.history.replace(\"/\");\n  };\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography className={classes.header}>Fire Table</Typography>\n        <Button onClick={handleAuth} color=\"primary\" className={classes.button}>\n          Authenticate With Google\n        </Button>\n      </CardContent>\n    </Card>\n  );\n}\n"],"sourceRoot":""}